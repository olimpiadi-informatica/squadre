{"version":3,"file":"static/chunks/9765.4fb4b00d2593d779.js","mappings":"uFAAA,WAAY,IAAAA,EAAA,CAAO,aAAAA,CAAA,CAAAC,CAAA,EAAkB,YAAaA,CAAAA,EAAAC,UAAA,CAAmgB,SAAAF,CAAA,EAAuB,IAAAC,EAAAE,EAAAH,GAAiBI,EAAAH,CAAA,IAAWI,EAAAJ,CAAA,IAAW,OAAAG,EAAAC,CAAAA,EAAA,IAAAA,CAAA,EAAziBJ,EAAAK,WAAA,CAAymB,SAAAN,CAAA,EAA8B,IAANC,EAAqGM,EAA/FH,EAAAD,EAAAH,GAAiBQ,EAAAJ,CAAA,IAAWK,EAAAL,CAAA,IAAWM,EAAA,IAAAC,EAAvF,CAAAV,EAAuFQ,CAAvFL,EAAA,IAAuFK,GAAgCG,EAAA,EAAQC,EAAAJ,EAAA,EAAAD,EAAA,EAAAA,EAAsB,IAAAD,EAAA,EAAQA,EAAAM,EAAIN,GAAA,EAAMN,EAAAI,CAAA,CAAAL,EAAAc,UAAA,CAAAP,GAAA,KAAAF,CAAA,CAAAL,EAAAc,UAAA,CAAAP,EAAA,QAAAF,CAAA,CAAAL,EAAAc,UAAA,CAAAP,EAAA,OAAAF,CAAA,CAAAL,EAAAc,UAAA,CAAAP,EAAA,IAA+FG,CAAA,CAAAE,IAAA,CAAAX,GAAA,OAAiBS,CAAA,CAAAE,IAAA,CAAAX,GAAA,MAAgBS,CAAA,CAAAE,IAAA,CAAAX,IAAAA,EAAoM,OAAvL,IAAAQ,IAAUR,EAAAI,CAAA,CAAAL,EAAAc,UAAA,CAAAP,GAAA,IAAAF,CAAA,CAAAL,EAAAc,UAAA,CAAAP,EAAA,OAAgDG,CAAA,CAAAE,IAAA,CAAAX,IAAAA,GAAa,IAAAQ,IAAUR,EAAAI,CAAA,CAAAL,EAAAc,UAAA,CAAAP,GAAA,KAAAF,CAAA,CAAAL,EAAAc,UAAA,CAAAP,EAAA,OAAAF,CAAA,CAAAL,EAAAc,UAAA,CAAAP,EAAA,OAAyEG,CAAA,CAAAE,IAAA,CAAAX,GAAA,MAAgBS,CAAA,CAAAE,IAAA,CAAAX,IAAAA,GAAaS,CAAA,EAAxiCT,EAAAc,aAAA,CAAkyC,SAAAf,CAAA,EAA8E,QAApDC,EAAMI,EAAAL,EAAAgB,MAAA,CAAeL,EAAAN,EAAA,EAAUG,EAAA,GAAqBE,EAAA,EAAAE,EAAAP,EAAAM,EAAkBD,EAAAE,EAAIF,GAAlC,MAAwCF,EAAAS,IAAA,CAAAC,SAA7QlB,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA2C,QAAfC,EAAMM,EAAA,GAASH,EAAAP,EAAYO,EAAAJ,EAAII,GAAA,EAA2DG,EAAAM,IAAA,CAAxKb,CAAA,CAAAJ,CAAmHK,EAAA,CAAAL,CAAA,CAAAQ,EAAA,eAAAR,CAAAA,CAAA,CAAAQ,EAAA,aAAAR,CAAAA,IAAAA,CAAA,CAAAQ,EAAA,MAAnH,OAAAJ,CAAA,CAAAJ,GAAA,OAAAI,CAAA,CAAAJ,GAAA,MAAAI,CAAA,CAAAJ,GAAwKK,EAAxK,EAAmM,OAAAM,EAAAQ,IAAA,MAA4HnB,EAAAU,EAAAA,EAAxC,MAAwCE,EAAAA,EAAAF,EAAxC,QAA+M,OAAlIC,IAAAA,EAAmBH,EAAAS,IAAA,CAAAb,CAAA,CAAAH,CAATA,EAAAD,CAAA,CAAAK,EAAA,KAAS,GAAAD,CAAA,CAAAH,GAAA,YAAgC,IAAAU,GAAoCH,EAAAS,IAAA,CAAAb,CAAA,CAAAH,CAArBA,EAAA,CAAAD,CAAA,CAAAK,EAAA,OAAAL,CAAA,CAAAK,EAAA,KAAqB,IAAAD,CAAA,CAAAH,GAAA,MAAAG,CAAA,CAAAH,GAAA,WAA2CO,EAAAW,IAAA,MAAn4C,QAAlJf,EAAA,GAASC,EAAA,GAASM,EAAA,oBAAAS,WAAAA,WAAAC,MAAuDb,EAAA,mEAAyEC,EAAA,EAAAC,EAAAF,EAAAQ,MAAA,CAAuBP,EAAAC,EAAI,EAAAD,EAAKL,CAAA,CAAAK,EAAA,CAAAD,CAAA,CAAAC,EAAA,CAAUJ,CAAA,CAAAG,EAAAM,UAAA,CAAAL,GAAA,CAAAA,EAAqE,SAAAN,EAAAH,CAAA,EAAoB,IAAAC,EAAAD,EAAAgB,MAAA,CAAe,GAAAf,EAAA,IAAU,8DAAkE,IAAAG,EAAAJ,EAAAsB,OAAA,KAAqB,MAAAlB,GAAAA,CAAAA,EAAAH,CAAAA,EAAc,IAAAI,EAAAD,IAAAH,EAAA,IAAAG,EAAA,EAAoB,OAAAA,EAAAC,EAAA,CAAtNA,CAAA,KAAAS,UAAA,QAAwBT,CAAA,KAAAS,UAAA,OAA4yC,EAAmB,YAAAd,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAoB,aAM9rD,IAAAC,EAAAD,EAAA,KAAgBO,EAAAP,EAAA,KAAaI,EAAA,mBAAAe,QAAA,mBAAAA,OAAAC,GAAA,CAAAD,OAAAC,GAAA,oCAAq/B,SAAAC,EAAAzB,CAAA,EAAyB,GAAAA,EAAh2B,WAAw2B,+BAAAA,EAAA,kCAAuE,IAAAC,EAAA,IAAAmB,WAAApB,GAAkE,OAA1C0B,OAAAC,cAAA,CAAA1B,EAAA2B,EAAAC,SAAA,EAA0C5B,CAAA,CAAS,SAAA2B,EAAA5B,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAuB,oBAAAJ,EAAA,CAAwB,oBAAAC,EAAwB,sFAA0F,OAAA6B,EAAA9B,EAAA,CAAsB,OAAA+B,EAAA/B,EAAAC,EAAAG,EAAA,CAAwC,SAAA2B,EAAA/B,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAqB,oBAAAJ,EAAwB,OAAAgC,SAAmvDhC,CAAA,CAAAC,CAAA,EAAkE,GAAzC,kBAAAA,GAAAA,KAAAA,CAAA,GAAgCA,CAAAA,EAAA,QAAS,CAAA2B,EAAAK,UAAA,CAAAhC,GAA0B,qCAAAA,GAA4C,IAAAG,EAAAF,EAAAA,EAAAF,EAAAC,GAAwBI,EAAAoB,EAAArB,GAAsBO,EAAAN,EAAA6B,KAAA,CAAAlC,EAAAC,GAA4C,OAAzBU,IAAAP,GAAUC,CAAAA,EAAAA,EAAA8B,KAAA,GAAAxB,EAAA,EAAeN,CAAA,EAAr9DL,EAAAC,GAAuB,GAAAmC,YAAAC,MAAA,CAAArC,GAA0B,OAAAsC,EAAAtC,GAAwB,GAAAA,MAAAA,EAAY,yIAAAA,GAAmJ,GAAAuC,EAAAvC,EAAAoC,cAAApC,GAAAuC,EAAAvC,EAAAwC,MAAA,CAAAJ,cAAiG,oBAAAK,mBAAAF,CAAAA,EAAAvC,EAAAyC,oBAAAzC,GAAAuC,EAAAvC,EAAAwC,MAAA,CAAAC,kBAAA,EAA9B,OAAAC,SAAuzD1C,CAAA,CAAAC,CAAA,CAAAG,CAAA,MAA4MC,EAA5K,GAAAJ,EAAA,GAAAD,EAAAE,UAAA,CAAAD,EAAwB,yDAA6D,GAAAD,EAAAE,UAAA,CAAAD,EAAAG,CAAAA,GAAA,GAA0B,yDAA4O,OAA1CsB,OAAAC,cAAA,CAA9FtB,EAAjCJ,KAAA0C,IAAA1C,GAAAG,KAAAuC,IAAAvC,EAAiC,IAAAgB,WAAApB,GAAoBI,KAAAuC,IAAAvC,EAAuB,IAAAgB,WAAApB,EAAAC,GAA2B,IAAAmB,WAAApB,EAAAC,EAAAG,GAAwBwB,EAAAC,SAAA,EAA0CxB,CAAA,EAAlrEL,EAAAC,EAAAG,GAAqL,oBAAAJ,EAAwB,yFAA6F,IAAAK,EAAAL,EAAA4C,OAAA,EAAA5C,EAAA4C,OAAA,GAA6B,GAAAvC,MAAAA,GAAAA,IAAAL,EAAmB,OAAA4B,EAAAG,IAAA,CAAA1B,EAAAJ,EAAAG,GAA0B,IAAAO,EAAAkC,SAAu0D7C,CAAA,EAAuB,GAAA4B,EAAAkB,QAAA,CAAA9C,GAAA,CAAuB,IAA2nnBA,EAA3nnBC,EAAA8C,EAAAA,EAAA/C,EAAAgB,MAAA,EAA0BZ,EAAAqB,EAAAxB,UAAsB,IAAAG,EAAAY,MAAA,EAA0BhB,EAAAgD,IAAA,CAAA5C,EAAA,IAAAH,GAATG,CAAyB,QAAS,KAAAuC,IAAA3C,EAAAgB,MAAA,CAAyB,iBAAAhB,EAAAgB,MAAA,EAAuhnBhB,CAAxBA,EAA//mBA,EAAAgB,MAAA,GAAuhnBhB,EAAj+mByB,EAAA,GAAuBa,EAAAtC,GAAwBA,WAAAA,EAAAiD,IAAA,EAAA5B,MAAA6B,OAAA,CAAAlD,EAAAmD,IAAA,EAA6Cb,EAAAtC,EAAAmD,IAAA,UAAnoEnD,GAAoB,GAAAW,EAAA,OAAAA,EAAc,uBAAAY,QAAAA,MAAAA,OAAA6B,WAAA,qBAAApD,CAAA,CAAAuB,OAAA6B,WAAA,EAAqG,OAAAxB,EAAAG,IAAA,CAAA/B,CAAA,CAAAuB,OAAA6B,WAAA,YAAAnD,EAAAG,EAAwD,0IAAAJ,EAAA,CAAyS,SAAAqD,EAAArD,CAAA,EAAuB,oBAAAA,EAAwB,0DAA8D,GAAAA,EAAA,EAAa,+BAAAA,EAAA,kCAAoT,SAAA8B,EAAA9B,CAAA,EAAsC,OAAdqD,EAAArD,GAAcyB,EAAAzB,EAAA,IAAA+C,EAAAA,EAAA/C,GAAA,CAAmY,SAAAsC,EAAAtC,CAAA,EAAuF,QAA7DC,EAAAD,EAAAgB,MAAA,KAAA+B,EAAAA,EAAA/C,EAAAgB,MAAA,EAAuCZ,EAAAqB,EAAAxB,GAAsBI,EAAA,EAAYA,EAAAJ,EAAII,GAAA,EAAMD,CAAA,CAAAC,EAAA,CAAAL,IAAAA,CAAA,CAAAK,EAAA,CAAc,OAAAD,CAAA,CAAuuB,SAAA2C,EAAA/C,CAAA,EAAoB,GAAAA,GAA1lI,WAAmmI,0FAA2G,OAAAA,EAAAA,CAAA,CAA80C,SAAAE,EAAAF,CAAA,CAAAC,CAAA,EAAyB,GAAA2B,EAAAkB,QAAA,CAAA9C,GAAuB,OAAAA,EAAAgB,MAAA,CAAgB,GAAAoB,YAAAC,MAAA,CAAArC,IAAAuC,EAAAvC,EAAAoC,aAAqD,OAAApC,EAAAE,UAAA,CAAoB,oBAAAF,EAAwB,kHAAAA,GAA4H,IAAAI,EAAAJ,EAAAgB,MAAA,CAAeX,EAAAiD,UAAAtC,MAAA,IAAAsC,CAAA,IAAAA,SAAA,IAA8C,IAAAjD,GAAAD,IAAAA,EAAA,SAAkC,IAAZ,IAAAO,EAAA,KAAoB,OAAAV,GAAU,6CAAAG,CAA+C,+BAAAmD,EAAAvD,GAAAgB,MAAA,KAAoD,uDAAAZ,EAAAA,CAA+D,kBAAAA,IAAA,CAAuB,qBAAAoD,EAAAxD,GAAAgB,MAAA,SAA4C,GAAAL,EAAc,OAAAN,EAAA,GAAAkD,EAAAvD,GAAAgB,MAAA,CAAkCf,EAAA,IAAAA,CAAAA,EAAAwD,WAAA,GAAuB9C,EAAA,IAAsC,SAAA+C,EAAA1D,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA6B,IAAq1LH,EAAAG,EAAr1LC,EAAA,GAAuC,GAA3BJ,CAAAA,KAAA0C,IAAA1C,GAAAA,EAAA,IAAuBA,CAAAA,EAAA,GAAIA,EAAA,KAAAe,MAAA,GAA2BZ,CAAAA,KAAAuC,IAAAvC,GAAAA,EAAA,KAAAY,MAAA,GAAiCZ,CAAAA,EAAA,KAAAY,MAAA,EAAcZ,GAAA,GAAgCA,CAAdA,KAAA,IAAOH,CAAAA,KAAA,IAAjF,SAAyH,IAAfD,GAAAA,CAAAA,EAAA,UAA2B,OAAAA,GAAU,iBAAA2D,SAA02N3D,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAyB,IAAAC,EAAAL,EAAAgB,MAAA,CAAe,EAAAf,GAAAA,EAAA,IAAAA,CAAAA,EAAA,GAAe,EAAAG,GAAAA,EAAA,GAAAA,EAAAC,CAAAA,GAAAD,CAAAA,EAAAC,CAAAA,EAA6B,QAATM,EAAA,GAASH,EAAAP,EAAYO,EAAAJ,EAAI,EAAAI,EAAKG,GAAAE,CAAA,CAAAb,CAAA,CAAAQ,EAAA,EAAW,OAAAG,CAAA,EAA99N,KAAAV,EAAAG,EAAoC,+BAAAwD,EAAA,KAAA3D,EAAAG,EAAkD,oBAAAyD,SAAmiN7D,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA2B,IAAAC,EAAA,GAASD,EAAA0D,KAAAC,GAAA,CAAA/D,EAAAgB,MAAA,CAAAZ,GAAuB,QAAAO,EAAAV,EAAYU,EAAAP,EAAI,EAAAO,EAAKN,GAAA2D,OAAAC,YAAA,CAAAjE,IAAAA,CAAA,CAAAW,EAAA,EAAiC,OAAAN,CAAA,EAAppN,KAAAJ,EAAAG,EAAwC,kCAAA8D,SAAqnNlE,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA4B,IAAAC,EAAA,GAASD,EAAA0D,KAAAC,GAAA,CAAA/D,EAAAgB,MAAA,CAAAZ,GAAuB,QAAAO,EAAAV,EAAYU,EAAAP,EAAI,EAAAO,EAAKN,GAAA2D,OAAAC,YAAA,CAAAjE,CAAA,CAAAW,EAAA,EAA6B,OAAAN,CAAA,EAAnuN,KAAAJ,EAAAG,EAAuD,qBAAw9KH,EAAx9KA,EAAw9KG,EAAx9KA,EAAo/K,IAAAH,GAAAG,IAAAJ,IAAp/K,CAAo/KgB,MAAA,CAAwBX,EAAAU,aAAA,CAA5gL,MAA2iLV,EAAAU,aAAA,CAAAf,IAA3iL,CAA2iLmC,KAAA,CAAAlC,EAAAG,GAAjgL,4DAAA+D,SAAwwNnE,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAyD,QAA5BC,EAAAL,EAAAmC,KAAA,CAAAlC,EAAAG,GAAmBO,EAAA,GAASH,EAAA,EAAYA,EAAAH,EAAAW,MAAA,CAAWR,GAAA,EAAMG,GAAAqD,OAAAC,YAAA,CAAA5D,CAAA,CAAAG,EAAA,CAAAH,IAAAA,CAAA,CAAAG,EAAA,IAAwC,OAAAG,CAAA,EAAt4N,KAAAV,EAAAG,EAAkF,YAAAC,EAAA,qCAAAL,GAAyDA,EAAA,CAAAA,EAAA,IAAAyD,WAAA,GAAuBpD,EAAA,IAAyC,SAAA+D,EAAApE,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAqB,IAAAC,EAAAL,CAAA,CAAAC,EAAA,CAAWD,CAAA,CAAAC,EAAA,CAAAD,CAAA,CAAAI,EAAA,CAAUJ,CAAA,CAAAI,EAAA,CAAAC,CAAA,CAA2/D,SAAAgE,EAAArE,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,CAAAM,CAAA,MAAq+cX,EAA57c,GAAAA,IAAAA,EAAAgB,MAAA,WAA8L,GAArK,iBAAAZ,GAAwBC,EAAAD,EAAIA,EAAA,GAAIA,EAAA,WAAsBA,EAAA,WAAaA,EAAA,aAAuBA,CAAAA,EAAA,cAAy0cJ,EAA3zcI,EAAA,CAAAA,IAAm1cJ,GAA3zcI,CAAAA,EAAAO,EAAA,EAAAX,EAAAgB,MAAA,IAAiBZ,EAAA,GAAAA,CAAAA,EAAAJ,EAAAgB,MAAA,CAAAZ,CAAAA,EAAoBA,GAAAJ,EAAAgB,MAAA,EAAgB,GAAAL,EAAA,UAAcP,EAAAJ,EAAAgB,MAAA,QAAkB,GAAAZ,EAAA,GAAa,IAAAO,EAAS,UAATP,EAAA,CAAS,CAAyD,GAA3C,iBAAAH,GAAwBA,CAAAA,EAAA2B,EAAAG,IAAA,CAAA9B,EAAAI,EAAA,EAAmBuB,EAAAkB,QAAA,CAAA7C,UAAuB,IAAAA,EAAAe,MAAA,CAAiB,GAASsD,EAAAtE,EAAAC,EAAAG,EAAAC,EAAAM,GAA+B,oBAAAV,QAAqC,CAARA,GAAA,IAAQ,mBAAAmB,WAAAS,SAAA,CAAAP,OAAA,EAAqD,EAAMF,WAAAS,SAAA,CAAAP,OAAA,CAAAiD,IAAA,CAAAvE,EAAAC,EAAAG,GAAqDgB,WAAAS,SAAA,CAAA2C,WAAA,CAAAD,IAAA,CAAAvE,EAAAC,EAAAG,GAAqDkE,EAAAtE,EAAA,CAAAC,EAAA,CAAAG,EAAAC,EAAAM,EAAiC,yDAA4D,SAAA2D,EAAAtE,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,CAAAM,CAAA,EAAiC,IAA+QC,EAA/QJ,EAAA,EAAQC,EAAAT,EAAAgB,MAAA,CAAeN,EAAAT,EAAAe,MAAA,CAAe,GAAAX,KAAAsC,IAAAtC,GAA4CA,CAAAA,SAA1BA,CAAAA,EAAA2D,OAAA3D,GAAAoD,WAAA,KAA0BpD,UAAAA,GAAAA,YAAAA,GAAAA,aAAAA,CAAA,GAA2D,GAAAL,EAAAgB,MAAA,IAAAf,EAAAe,MAAA,GAA2B,UAASR,EAAA,EAAIC,GAAA,EAAKC,GAAA,EAAKN,GAAA,EAAM,SAAAqE,EAAAzE,CAAA,CAAAC,CAAA,SAAmB,IAAAO,EAAUR,CAAA,CAAAC,EAAA,CAAiBD,EAAA0E,YAAA,CAAAzE,EAAAO,EAAA,CAAkC,GAAAG,EAAA,CAAM,IAAAE,EAAA,GAAS,IAAAD,EAAAR,EAAQQ,EAAAH,EAAIG,IAAK,GAAA6D,EAAAzE,EAAAY,KAAA6D,EAAAxE,EAAAY,KAAAA,EAAA,EAAAD,EAAAC,GAAmD,IAAd,KAAAA,GAAAA,CAAAA,EAAAD,CAAAA,EAAcA,EAAAC,EAAA,IAAAH,EAAA,OAAAG,EAAAL,CAAAA,MAA6B,KAAAK,GAAAD,CAAAA,GAAAA,EAAAC,CAAAA,EAAiBA,EAAA,QAA2B,IAAfT,EAAAM,EAAAD,GAAAL,CAAAA,EAAAK,EAAAC,CAAAA,EAAeE,EAAAR,EAAQQ,GAAA,EAAKA,IAAA,CAAgB,QAAXL,EAAA,GAAWoE,EAAA,EAAYA,EAAAjE,EAAIiE,IAAK,GAAAF,EAAAzE,EAAAY,EAAA+D,KAAAF,EAAAxE,EAAA0E,GAAA,CAA4BpE,EAAA,GAAQ,MAAO,GAAAA,EAAA,OAAAK,CAAA,CAAe,UAA4hE,SAAAgD,EAAA5D,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA0BA,EAAA0D,KAAAC,GAAA,CAAA/D,EAAAgB,MAAA,CAAAZ,GAAwC,IAAjB,IAAAC,EAAA,GAASM,EAAAV,EAAQU,EAAAP,GAAA,CAAW,IAAiEQ,EAAAC,EAAAN,EAAAoE,EAAjEnE,EAAAR,CAAA,CAAAW,EAAA,CAAWF,EAAA,KAAWC,EAAAF,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAAgC,GAAAG,EAAAD,GAAAN,EAAuB,OAAAM,GAAU,OAAAF,EAAA,KAAiBC,CAAAA,EAAAD,CAAAA,EAAI,KAAM,QAAgBI,CAAAA,IAAhBA,CAAAA,EAAAZ,CAAA,CAAAW,EAAA,GAAgB,QAAmCgE,CAAjBA,EAAA,CAAAnE,GAAAA,CAAA,KAAAI,GAAAA,CAAA,EAAiB,KAAUH,CAAAA,EAAAkE,CAAAA,EAAK,KAAM,QAAA/D,EAAAZ,CAAA,CAAAW,EAAA,GAAgBE,EAAAb,CAAA,CAAAW,EAAA,GAASC,CAAAA,IAAAA,CAAA,SAAAC,IAAAA,CAAA,QAA6D8D,CAA5BA,EAAA,CAAAnE,GAAAA,CAAA,OAAAI,GAAAA,CAAA,KAAAC,GAAAA,CAAA,EAA4B,MAAA8D,CAAAA,EAAA,OAAAA,EAAA,QAA+BlE,CAAAA,EAAAkE,CAAAA,EAAK,KAAM,QAAA/D,EAAAZ,CAAA,CAAAW,EAAA,GAAgBE,EAAAb,CAAA,CAAAW,EAAA,GAASJ,EAAAP,CAAA,CAAAW,EAAA,GAASC,CAAAA,IAAAA,CAAA,SAAAC,IAAAA,CAAA,SAAAN,IAAAA,CAAA,QAAuFoE,CAAvCA,EAAA,CAAAnE,GAAAA,CAAA,OAAAI,GAAAA,CAAA,OAAAC,GAAAA,CAAA,KAAAN,GAAAA,CAAA,EAAuC,OAAAoE,EAAA,SAAuBlE,CAAAA,EAAAkE,CAAAA,CAAA,CAAOlE,OAAAA,GAAaA,EAAA,MAAQC,EAAA,GAAID,EAAA,QAAiBA,GAAA,MAASJ,EAAAY,IAAA,CAAAR,IAAA,eAA0BA,EAAA,MAAAA,KAAAA,GAAeJ,EAAAY,IAAA,CAAAR,GAAUE,GAAAD,CAAA,CAAK,OAAAkE,SAA2C5E,CAAA,EAAkC,IAAAC,EAAAD,EAAAgB,MAAA,CAAe,GAAAf,GAA5D,KAAqE,OAAA+D,OAAAC,YAAA,CAAAY,KAAA,CAAAb,OAAAhE,GAA4D,IAAjB,IAAAI,EAAA,GAASC,EAAA,EAAQA,EAAAJ,GAAWG,GAAA4D,OAAAC,YAAA,CAAAY,KAAA,CAAAb,OAAAhE,EAAAmC,KAAA,CAAA9B,EAAAA,GAA5I,OAAiM,OAAAD,CAAA,EAAjOC,EAAA,CAAk+B,SAAAyE,EAAA9E,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA4B,GAAAJ,EAAA,MAAAA,EAAA,yCAA2D,GAAAA,EAAAC,EAAAG,EAAA,0DAAszF,SAAA2E,EAAA/E,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,CAAAM,CAAA,CAAAH,CAAA,EAA+B,IAAAoB,EAAAkB,QAAA,CAAA9C,GAAA,+DAA0F,GAAAC,EAAAU,GAAAV,EAAAO,EAAA,sDAAsE,GAAAJ,EAAAC,EAAAL,EAAAgB,MAAA,wCAA2pF,SAAAgE,EAAAhF,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,CAAAM,CAAA,CAAAH,CAAA,EAAmC,GAAAJ,EAAAC,EAAAL,EAAAgB,MAAA,EAA2DZ,EAAA,EAA3D,sCAA2D,CAAkD,SAAA6E,EAAAjF,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA0I,OAA3GP,EAAA,CAAAA,EAAKG,KAAA,EAAQI,GAAOwE,EAAAhF,EAAAC,EAAAG,EAAA,8CAAiEO,EAAAuB,KAAA,CAAAlC,EAAAC,EAAAG,EAAAC,EAAA,MAAsBD,EAAA,EAA0M,SAAA8E,EAAAlF,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA6I,OAA7GP,EAAA,CAAAA,EAAKG,KAAA,EAAQI,GAAOwE,EAAAhF,EAAAC,EAAAG,EAAA,gDAAmEO,EAAAuB,KAAA,CAAAlC,EAAAC,EAAAG,EAAAC,EAAA,MAAsBD,EAAA,EAAzuoBH,EAAA2B,MAAA,CAAAA,EAAgB3B,EAAAkF,UAAA,CAAwwI,SAAAnF,CAAA,EAAqC,MAAd,CAAAA,GAAAA,GAAUA,CAAAA,EAAA,GAAI4B,EAAAwD,KAAA,EAAApF,EAAA,EAArxIC,EAAAoF,iBAAA,IAAwCpF,EAAAqF,UAAA,CAAjB,WAAgC1D,EAAA2D,mBAAA,CAAAC,WAA+U,IAAI,IAAAxF,EAAA,IAAAoB,WAAA,GAAwBnB,EAAA,CAAOwF,IAAA,WAAe,YAAqF,OAAzE/D,OAAAC,cAAA,CAAA1B,EAAAmB,WAAAS,SAAA,EAA8CH,OAAAC,cAAA,CAAA3B,EAAAC,GAA2BD,KAAAA,EAAAyF,GAAA,GAAoB,MAAAzF,EAAA,CAAS,aAApc4B,EAAA2D,mBAAA,sBAAAG,SAAA,mBAAAA,QAAAC,KAAA,EAAiGD,QAAAC,KAAA,kJAAiXjE,OAAAkE,cAAA,CAAAhE,EAAAC,SAAA,WAAiDgE,WAAA,GAAAC,IAAA,WAA+B,GAAAlE,EAAAkB,QAAA,OAA2C,YAAAN,MAAA,IAAsBd,OAAAkE,cAAA,CAAAhE,EAAAC,SAAA,WAAiDgE,WAAA,GAAAC,IAAA,WAA+B,GAAAlE,EAAAkB,QAAA,OAA2C,YAAAiD,UAAA,IAAuZnE,EAAAoE,QAAA,MAAmjCpE,EAAAG,IAAA,UAAA/B,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA4B,OAAA2B,EAAA/B,EAAAC,EAAAG,EAAA,EAAoBsB,OAAAC,cAAA,CAAAC,EAAAC,SAAA,CAAAT,WAAAS,SAAA,EAA6DH,OAAAC,cAAA,CAAAC,EAAAR,YAAqaQ,EAAAwD,KAAA,UAAApF,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA6B,MAAnL,CAAdiD,EAAiMrD,GAAnLA,GAAA,GAASyB,EAA0KzB,GAAnJC,KAAA0C,IAAmJ1C,EAAjI,iBAAiIG,EAAjIqB,EAAiIzB,GAAjIiG,IAAA,CAAiIhG,EAAAG,GAAjIqB,EAAiIzB,GAAjIiG,IAAA,CAAiIhG,GAApDwB,EAAoDzB,EAAA,EAAmG4B,EAAAE,WAAA,UAAA9B,CAAA,EAA+B,OAAA8B,EAAA9B,EAAA,EAAuB4B,EAAAsE,eAAA,UAAAlG,CAAA,EAAmC,OAAA8B,EAAA9B,EAAA,EAAozC4B,EAAAkB,QAAA,UAAA9C,CAAA,EAAqC,OAAAA,MAAAA,GAAAA,CAAA,IAAAA,EAAAmG,SAAA,EAAAnG,IAAA4B,EAAAC,SAAA,EAA0DD,EAAAwE,OAAA,UAAApG,CAAA,CAAAC,CAAA,EAA2K,GAAtIsC,EAAAvC,EAAAoB,aAAApB,CAAAA,EAAA4B,EAAAG,IAAA,CAAA/B,EAAAA,EAAAqG,MAAA,CAAArG,EAAAE,UAAA,GAAmEqC,EAAAtC,EAAAmB,aAAAnB,CAAAA,EAAA2B,EAAAG,IAAA,CAAA9B,EAAAA,EAAAoG,MAAA,CAAApG,EAAAC,UAAA,GAAmE,CAAA0B,EAAAkB,QAAA,CAAA9C,IAAA,CAAA4B,EAAAkB,QAAA,CAAA7C,GAA6C,yFAA6F,GAAAD,IAAAC,EAAA,SAAgD,QAA9BG,EAAAJ,EAAAgB,MAAA,CAAeX,EAAAJ,EAAAe,MAAA,CAAeL,EAAA,EAAAH,EAAAsD,KAAAC,GAAA,CAAA3D,EAAAC,GAA4BM,EAAAH,EAAI,EAAAG,EAAK,GAAAX,CAAA,CAAAW,EAAA,GAAAV,CAAA,CAAAU,EAAA,EAAgBP,EAAAJ,CAAA,CAAAW,EAAA,CAAON,EAAAJ,CAAA,CAAAU,EAAA,CAAO,aAAO,EAAAN,EAAA,GAAgBA,EAAAD,EAAA,EAAgB,GAAUwB,EAAAK,UAAA,UAAAjC,CAAA,EAAyC,OAAAgE,OAAAhE,GAAAyD,WAAA,IAAgC,gJAAoJ,oBAAuB7B,EAAA0E,MAAA,UAAAtG,CAAA,CAAAC,CAAA,EAAmC,IAAAoB,MAAA6B,OAAA,CAAAlD,GAAsB,+DAAmE,GAAAA,IAAAA,EAAAgB,MAAA,CAAiB,OAAAY,EAAAwD,KAAA,IAA6B,GAAAnF,KAAA0C,IAAA1C,EAAsB,IAAAG,EAAA,EAAJH,EAAA,EAAYG,EAAAJ,EAAAgB,MAAA,CAAW,EAAAZ,EAAKH,GAAAD,CAAA,CAAAI,EAAA,CAAAY,MAAA,CAAgB,IAApEZ,EAAoEC,EAAAuB,EAAAE,WAAA,CAAA7B,GAA4BU,EAAA,EAAQ,IAAAP,EAAA,EAAQA,EAAAJ,EAAAgB,MAAA,CAAW,EAAAZ,EAAA,CAAK,IAAAI,EAAAR,CAAA,CAAAI,EAAA,CAAyD,GAA9CmC,EAAA/B,EAAAY,aAA6BZ,CAAAA,EAAAoB,EAAAG,IAAA,CAAAvB,EAAA,EAAiB,CAAAoB,EAAAkB,QAAA,CAAAtC,GAAwB,+DAAmEA,EAAAwC,IAAA,CAAA3C,EAAAM,GAAYA,GAAAH,EAAAQ,MAAA,CAAY,OAAAX,CAAA,EAA6sBuB,EAAA1B,UAAA,CAAAA,EAA4oB0B,EAAAC,SAAA,CAAAsE,SAAA,IAAiFvE,EAAAC,SAAA,CAAA0E,MAAA,YAA0C,IAAAvG,EAAA,KAAAgB,MAAA,CAAkB,GAAAhB,EAAA,KAAY,8DAAkE,QAAAC,EAAA,EAAYA,EAAAD,EAAIC,GAAA,EAAMmE,EAAA,KAAAnE,EAAAA,EAAA,GAAiB,aAAa2B,EAAAC,SAAA,CAAA2E,MAAA,YAA0C,IAAAxG,EAAA,KAAAgB,MAAA,CAAkB,GAAAhB,EAAA,KAAY,8DAAkE,QAAAC,EAAA,EAAYA,EAAAD,EAAIC,GAAA,EAAMmE,EAAA,KAAAnE,EAAAA,EAAA,GAAiBmE,EAAA,KAAAnE,EAAA,EAAAA,EAAA,GAAmB,aAAa2B,EAAAC,SAAA,CAAA4E,MAAA,YAA0C,IAAAzG,EAAA,KAAAgB,MAAA,CAAkB,GAAAhB,EAAA,KAAY,8DAAkE,QAAAC,EAAA,EAAYA,EAAAD,EAAIC,GAAA,EAAMmE,EAAA,KAAAnE,EAAAA,EAAA,GAAiBmE,EAAA,KAAAnE,EAAA,EAAAA,EAAA,GAAmBmE,EAAA,KAAAnE,EAAA,EAAAA,EAAA,GAAmBmE,EAAA,KAAAnE,EAAA,EAAAA,EAAA,GAAmB,aAAa2B,EAAAC,SAAA,CAAA6E,QAAA,YAA8C,IAAA1G,EAAA,KAAAgB,MAAA,QAAkB,IAAAhB,EAAA,GAAkBsD,GAAAA,UAAAtC,MAAA,CAAA4C,EAAA,OAAA5D,GAAmD0D,EAAAmB,KAAA,MAAAvB,UAAA,EAA2C1B,EAAAC,SAAA,CAAA8E,cAAA,CAAA/E,EAAAC,SAAA,CAAA6E,QAAA,CAA0D9E,EAAAC,SAAA,CAAA+E,MAAA,UAAA5G,CAAA,EAA2C,IAAA4B,EAAAkB,QAAA,CAAA9C,GAAA,oDAAwE,OAAAA,GAAwB4B,IAAAA,EAAAwE,OAAA,MAAApG,EAAA,EAAmC4B,EAAAC,SAAA,CAAAgF,OAAA,YAA4C,IAAA7G,EAAA,GAASI,EAAAH,EAAAoF,iBAAA,CAAiH,OAAvFrF,EAAA,KAAA0G,QAAA,SAAAtG,GAAA0G,OAAA,WAAyC,OAAAC,IAAA,GAAkB,KAAA/F,MAAA,CAAAZ,GAAAJ,CAAAA,GAAA,SAA4B,WAAAA,EAAA,KAAwBQ,GAAMoB,CAAAA,EAAAC,SAAA,CAAArB,EAAA,CAAAoB,EAAAC,SAAA,CAAAgF,OAAA,EAA6CjF,EAAAC,SAAA,CAAAuE,OAAA,UAAApG,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,CAAAM,CAAA,EAAyH,GAApE4B,EAAAvC,EAAAoB,aAA6BpB,CAAAA,EAAA4B,EAAAG,IAAA,CAAA/B,EAAAA,EAAAqG,MAAA,CAAArG,EAAAE,UAAA,GAAuC,CAAA0B,EAAAkB,QAAA,CAAA9C,GAAwB,wGAAAA,GAA+N,GAA7G2C,KAAAA,IAAA1C,GAAkBA,CAAAA,EAAA,GAAI0C,KAAAA,IAAAvC,GAAkBA,CAAAA,EAAAJ,EAAAA,EAAAgB,MAAA,IAAe2B,KAAAA,IAAAtC,GAAkBA,CAAAA,EAAA,GAAIsC,KAAAA,IAAAhC,GAAkBA,CAAAA,EAAA,KAAAK,MAAA,EAAcf,EAAA,GAAAG,EAAAJ,EAAAgB,MAAA,EAAAX,EAAA,GAAAM,EAAA,KAAAK,MAAA,CAAwC,uCAA2C,GAAAX,GAAAM,GAAAV,GAAAG,EAAe,SAAS,GAAAC,GAAAM,EAAS,UAAS,GAAAV,GAAAG,EAAS,SAAqC,GAA5BH,KAAA,EAAOG,KAAA,EAAOC,KAAA,EAAOM,KAAA,EAAO,OAAAX,EAAA,SAAsG,QAAjFQ,EAAAG,EAAAN,EAAUI,EAAAL,EAAAH,EAAUS,EAAAoD,KAAAC,GAAA,CAAAvD,EAAAC,GAAoBG,EAAA,KAAAuB,KAAA,CAAA9B,EAAAM,GAAsBE,EAAAb,EAAAmC,KAAA,CAAAlC,EAAAG,GAAmBG,EAAA,EAAYA,EAAAG,EAAI,EAAAH,EAAK,GAAAK,CAAA,CAAAL,EAAA,GAAAM,CAAA,CAAAN,EAAA,EAAgBC,EAAAI,CAAA,CAAAL,EAAA,CAAOE,EAAAI,CAAA,CAAAN,EAAA,CAAO,aAAO,EAAAE,EAAA,GAAgBA,EAAAD,EAAA,EAAgB,GAA8yCoB,EAAAC,SAAA,CAAAmF,QAAA,UAAAhH,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAmD,iBAAAkB,OAAA,CAAAtB,EAAAC,EAAAG,EAAA,EAAiCwB,EAAAC,SAAA,CAAAP,OAAA,UAAAtB,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAiD,OAAAiE,EAAA,KAAArE,EAAAC,EAAAG,EAAA,KAA8CwB,EAAAC,SAAA,CAAA2C,WAAA,UAAAxE,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAyD,OAAAiE,EAAA,KAAArE,EAAAC,EAAAG,EAAA,KAA+nBwB,EAAAC,SAAA,CAAAK,KAAA,UAAAlC,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,EAA+C,GAAAJ,KAAA0C,IAAA1C,EAAkBI,EAAA,OAASD,EAAA,KAAAY,MAAA,CAAcf,EAAA,OAAI,GAAAG,KAAAuC,IAAAvC,GAAA,iBAAAH,EAA4CI,EAAAJ,EAAIG,EAAA,KAAAY,MAAA,CAAcf,EAAA,OAAI,GAAAgH,SAAAhH,GAAqBA,KAAA,EAAQgH,SAAA7G,IAAgBA,KAAA,EAAQuC,KAAAA,IAAAtC,GAAAA,CAAAA,EAAA,UAA+BA,EAAAD,EAAIA,EAAAuC,KAAAA,QAAkB,uFAA2F,IAAtjB3C,EAAAC,EAAAG,EAAAC,EAArJD,EAAAC,EAA+ED,EAAAC,EAA+HD,EAAAC,EAAwED,EAAAC,EAAqbM,EAAA,KAAAK,MAAA,CAAAf,EAA8C,GAA1BG,CAAAA,KAAAuC,IAAAvC,GAAAA,EAAAO,CAAAA,GAAAP,CAAAA,EAAAO,CAAAA,EAA0BX,EAAAgB,MAAA,IAAAZ,CAAAA,EAAA,GAAAH,EAAA,IAAAA,EAAA,KAAAe,MAAA,CAA0C,2DAA+DX,GAAAA,CAAAA,EAAA,QAA2B,IAAZ,IAAAG,EAAA,KAAoB,OAAAH,GAAU,iBAAA6G,SAAvnClH,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,EAA2BD,EAAA+G,OAAA/G,IAAA,EAAe,IAAAO,EAAAX,EAAAgB,MAAA,CAAAZ,EAAiBC,EAAgBA,CAAAA,EAAA8G,OAAA9G,EAAA,EAAYM,GAAQN,CAAAA,EAAAM,CAAAA,EAA7BN,EAAAM,EAAkC,IAAAH,EAAAP,EAAAe,MAAA,CAAeX,EAAAG,EAAA,GAAUH,CAAAA,EAAAG,EAAA,GAAM,QAAAC,EAAA,EAAYA,EAAAJ,EAAI,EAAAI,EAAA,CAAK,IAAAC,EAAA0G,SAAAnH,EAAAoH,MAAA,CAAA5G,EAAAA,EAAA,OAAmC,GAAmwZT,GAAnwZU,EAAA,KAA2BV,CAAAA,CAAA,CAAAI,EAAAK,EAAA,CAAAC,CAAA,CAAS,OAAAD,CAAA,EAAw5B,KAAAT,EAAAC,EAAAG,EAAsC,+BAAr7BA,EAAq7BH,EAAr7BI,EAAq7BD,EAAz5BkH,EAAA/D,EAAy5BvD,EAAz5BA,IAAy5B,CAAz5BgB,MAAA,CAAAZ,GAAy5B,KAAz5BA,EAAAC,EAA68B,oBAA15BD,EAA05BH,EAA15BI,EAA05BD,EAA73BkH,EAAAC,EAA63BvH,GAAA,KAA73BI,EAAAC,EAAu6B,kCAA93BL,EAA83B,KAA93BC,EAA83BD,EAA93BI,EAA83BH,EAA93BI,EAA83BD,EAAv6BkH,EAAAC,EAAuEtH,GAAAD,EAAAI,EAAAC,EAAy5B,qBAA93BD,EAA83BH,EAA93BI,EAA83BD,EAAh2BkH,EAAA9D,EAAg2BxD,GAAA,KAAh2BI,EAAAC,EAA44B,4DAAl2BD,EAAk2BH,EAAl2BI,EAAk2BD,EAAt0BkH,EAAAE,SAAk8XxH,CAAA,CAAAC,CAAA,EAAgD,QAAnBG,EAAAC,EAAUG,EAAA,GAASC,EAAA,EAA4B,EAAhBT,EAAAgB,MAAA,GAAgB,EAAAf,GAAA,MAAL,EAAAQ,EAAyCJ,EAAAD,CAAlBA,EAAAJ,EAAAc,UAAA,CAAAL,EAAA,GAAkB,EAAeD,EAAAS,IAAA,CAARb,EAAA,KAAkBI,EAAAS,IAAA,CAAAZ,GAAU,OAAAG,CAAA,EAA/wWR,EAAt0BA,IAAs0B,CAAt0BgB,MAAA,CAAAZ,GAAs0B,KAAt0BA,EAAAC,EAAu5B,YAAAG,EAAA,qCAAAH,GAAyDA,EAAA,IAAAA,CAAAA,EAAAoD,WAAA,GAAuBjD,EAAA,KAAUoB,EAAAC,SAAA,CAAA4F,MAAA,YAA0C,OAAOxE,KAAA,SAAAE,KAAA9B,MAAAQ,SAAA,CAAAM,KAAA,CAAAoC,IAAA,MAAAmD,IAAA,YAAoiD9F,EAAAC,SAAA,CAAAM,KAAA,UAAAnC,CAAA,CAAAC,CAAA,EAA2C,IAAAG,EAAA,KAAAY,MAAA,CAAkBhB,EAAA,EAAAA,EAAMC,EAAAA,KAAA0C,IAAA1C,EAAAG,EAAA,EAAAH,EAAsBD,EAAA,EAAQA,CAAAA,GAAAI,CAAAA,EAAK,GAAAJ,CAAAA,EAAA,GAAWA,EAAAI,GAAaJ,CAAAA,EAAAI,CAAAA,EAAIH,EAAA,EAAQA,CAAAA,GAAAG,CAAAA,EAAK,GAAAH,CAAAA,EAAA,GAAWA,EAAAG,GAAaH,CAAAA,EAAAG,CAAAA,EAAIH,EAAAD,GAAAC,CAAAA,EAAAD,CAAAA,EAAW,IAAAK,EAAA,KAAAsH,QAAA,CAAA3H,EAAAC,GAAmE,OAA1CyB,OAAAC,cAAA,CAAAtB,EAAAuB,EAAAC,SAAA,EAA0CxB,CAAA,EAAwKuB,EAAAC,SAAA,CAAA+F,UAAA,UAAA5H,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAuDJ,KAAA,EAAQC,KAAA,EAAQG,GAAA0E,EAAA9E,EAAAC,EAAA,KAAAe,MAAA,EAAiE,IAA9B,IAAAX,EAAA,KAAAL,EAAA,CAAcW,EAAA,EAAQH,EAAA,EAAQ,EAAAA,EAAAP,GAAAU,CAAAA,GAAA,MAAuBN,GAAA,KAAAL,EAAAQ,EAAA,CAAAG,EAAe,OAAAN,CAAA,EAAUuB,EAAAC,SAAA,CAAAgG,UAAA,UAAA7H,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAuDJ,KAAA,EAAQC,KAAA,EAAQG,GAAO0E,EAAA9E,EAAAC,EAAA,KAAAe,MAAA,EAAuD,IAA1B,IAAAX,EAAA,KAAAL,EAAA,EAAAC,EAAA,CAAkBU,EAAA,EAAQV,EAAA,GAAAU,CAAAA,GAAA,MAAqBN,GAAA,KAAAL,EAAA,EAAAC,EAAA,CAAAU,EAAiB,OAAAN,CAAA,EAAUuB,EAAAC,SAAA,CAAAiG,SAAA,UAAA9H,CAAA,CAAAC,CAAA,EAA8F,OAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmC,KAAAhB,EAAA,EAAgB4B,EAAAC,SAAA,CAAAkG,YAAA,UAAA/H,CAAA,CAAAC,CAAA,EAAoG,OAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmC,KAAAhB,EAAA,MAAAA,EAAA,OAA6B4B,EAAAC,SAAA,CAAA6C,YAAA,UAAA1E,CAAA,CAAAC,CAAA,EAAoG,OAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmC,KAAAhB,EAAA,SAAAA,EAAA,IAA6B4B,EAAAC,SAAA,CAAAmG,YAAA,UAAAhI,CAAA,CAAAC,CAAA,EAAoG,OAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmC,MAAAhB,EAAA,MAAAA,EAAA,WAAAA,EAAA,sBAAAA,EAAA,IAA+D4B,EAAAC,SAAA,CAAAoG,YAAA,UAAAjI,CAAA,CAAAC,CAAA,EAAoG,OAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmC,cAAAhB,EAAA,OAAAA,EAAA,YAAAA,EAAA,WAAAA,EAAA,KAAgE4B,EAAAC,SAAA,CAAAqG,SAAA,UAAAlI,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAqDJ,KAAA,EAAQC,KAAA,EAAQG,GAAA0E,EAAA9E,EAAAC,EAAA,KAAAe,MAAA,EAAiE,IAA9B,IAAAX,EAAA,KAAAL,EAAA,CAAcW,EAAA,EAAQH,EAAA,EAAQ,EAAAA,EAAAP,GAAAU,CAAAA,GAAA,MAAuBN,GAAA,KAAAL,EAAAQ,EAAA,CAAAG,EAAiD,OAA3BN,GAAPM,CAAAA,GAAA,MAAON,CAAAA,GAAAyD,KAAAqE,GAAA,KAAAlI,EAAA,EAA2BI,CAAA,EAAUuB,EAAAC,SAAA,CAAAuG,SAAA,UAAApI,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAqDJ,KAAA,EAAQC,KAAA,EAAQG,GAAA0E,EAAA9E,EAAAC,EAAA,KAAAe,MAAA,EAAqE,IAAlC,IAAAX,EAAAJ,EAAQU,EAAA,EAAQH,EAAA,KAAAR,EAAA,EAAAK,EAAA,CAAkBA,EAAA,GAAAM,CAAAA,GAAA,MAAqBH,GAAA,KAAAR,EAAA,EAAAK,EAAA,CAAAM,EAAmD,OAA3BH,GAAPG,CAAAA,GAAA,MAAOH,CAAAA,GAAAsD,KAAAqE,GAAA,KAAAlI,EAAA,EAA2BO,CAAA,EAAUoB,EAAAC,SAAA,CAAAwG,QAAA,UAAArI,CAAA,CAAAC,CAAA,QAA4F,CAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmC,SAAAhB,EAAA,EAAiC,YAAAA,EAAA,OAAjC,KAAAA,EAAA,EAA2D4B,EAAAC,SAAA,CAAAyG,WAAA,UAAAtI,CAAA,CAAAC,CAAA,EAAuDD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmC,IAAAZ,EAAA,KAAAJ,EAAA,MAAAA,EAAA,MAA2B,OAAAI,MAAAA,EAAAA,WAAAA,EAAAA,CAAA,EAA+BwB,EAAAC,SAAA,CAAA0G,WAAA,UAAAvI,CAAA,CAAAC,CAAA,EAAuDD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmC,IAAAZ,EAAA,KAAAJ,EAAA,QAAAA,EAAA,IAA2B,OAAAI,MAAAA,EAAAA,WAAAA,EAAAA,CAAA,EAA+BwB,EAAAC,SAAA,CAAA2G,WAAA,UAAAxI,CAAA,CAAAC,CAAA,EAAkG,OAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmC,KAAAhB,EAAA,MAAAA,EAAA,WAAAA,EAAA,YAAAA,EAAA,QAAyD4B,EAAAC,SAAA,CAAA4G,WAAA,UAAAzI,CAAA,CAAAC,CAAA,EAAkG,OAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmC,KAAAhB,EAAA,UAAAA,EAAA,YAAAA,EAAA,WAAAA,EAAA,IAAyD4B,EAAAC,SAAA,CAAA6G,WAAA,UAAA1I,CAAA,CAAAC,CAAA,EAAkG,OAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmCL,EAAA8D,IAAA,MAAAzE,EAAA,UAAiC4B,EAAAC,SAAA,CAAA8G,WAAA,UAAA3I,CAAA,CAAAC,CAAA,EAAkG,OAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmCL,EAAA8D,IAAA,MAAAzE,EAAA,UAAkC4B,EAAAC,SAAA,CAAA+G,YAAA,UAAA5I,CAAA,CAAAC,CAAA,EAAoG,OAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmCL,EAAA8D,IAAA,MAAAzE,EAAA,UAAiC4B,EAAAC,SAAA,CAAAgH,YAAA,UAAA7I,CAAA,CAAAC,CAAA,EAAoG,OAA3CD,KAAA,EAAQC,GAAA6E,EAAA9E,EAAA,OAAAgB,MAAA,EAAmCL,EAAA8D,IAAA,MAAAzE,EAAA,UAA4R4B,EAAAC,SAAA,CAAAiH,WAAA,UAAA9I,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,EAAgF,GAArBL,EAAA,CAAAA,EAAKC,KAAA,EAAQG,KAAA,EAAQ,CAAAC,EAAA,CAAO,IAAAM,EAAAmD,KAAAqE,GAAA,KAAA/H,GAAA,EAAwB2E,EAAA,KAAA/E,EAAAC,EAAAG,EAAAO,EAAA,GAAyB,IAAAH,EAAA,EAAQC,EAAA,EAAsB,IAAd,KAAAR,EAAA,CAAAD,IAAAA,EAAc,EAAAS,EAAAL,GAAAI,CAAAA,GAAA,MAAuB,KAAAP,EAAAQ,EAAA,CAAAT,EAAAQ,EAAA,IAAkB,OAAAP,EAAAG,CAAA,EAAYwB,EAAAC,SAAA,CAAAkH,WAAA,UAAA/I,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,EAAgF,GAArBL,EAAA,CAAAA,EAAKC,KAAA,EAAQG,KAAA,EAAQ,CAAAC,EAAA,CAAO,IAAAM,EAAAmD,KAAAqE,GAAA,KAAA/H,GAAA,EAAwB2E,EAAA,KAAA/E,EAAAC,EAAAG,EAAAO,EAAA,GAAyB,IAAAH,EAAAJ,EAAA,EAAUK,EAAA,EAAwB,IAAhB,KAAAR,EAAAO,EAAA,CAAAR,IAAAA,EAAgB,EAAAQ,GAAA,GAAAC,CAAAA,GAAA,MAAwB,KAAAR,EAAAO,EAAA,CAAAR,EAAAS,EAAA,IAAkB,OAAAR,EAAAG,CAAA,EAAYwB,EAAAC,SAAA,CAAAmH,UAAA,UAAAhJ,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAmH,OAA5DJ,EAAA,CAAAA,EAAKC,KAAA,EAAQG,GAAA2E,EAAA,KAAA/E,EAAAC,EAAA,SAAiC,KAAAA,EAAA,CAAAD,IAAAA,EAAcC,EAAA,GAAY2B,EAAAC,SAAA,CAAAoH,aAAA,UAAAjJ,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA2I,OAA9EJ,EAAA,CAAAA,EAAKC,KAAA,EAAQG,GAAA2E,EAAA,KAAA/E,EAAAC,EAAA,WAAmC,KAAAA,EAAA,CAAAD,IAAAA,EAAc,KAAAC,EAAA,GAAAD,IAAA,EAAgBC,EAAA,GAAY2B,EAAAC,SAAA,CAAAqH,aAAA,UAAAlJ,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA2I,OAA9EJ,EAAA,CAAAA,EAAKC,KAAA,EAAQG,GAAA2E,EAAA,KAAA/E,EAAAC,EAAA,WAAmC,KAAAA,EAAA,CAAAD,IAAA,EAAc,KAAAC,EAAA,GAAAD,IAAAA,EAAgBC,EAAA,GAAY2B,EAAAC,SAAA,CAAAsH,aAAA,UAAAnJ,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAkL,OAArHJ,EAAA,CAAAA,EAAKC,KAAA,EAAQG,GAAA2E,EAAA,KAAA/E,EAAAC,EAAA,gBAAwC,KAAAA,EAAA,GAAAD,IAAA,GAAiB,KAAAC,EAAA,GAAAD,IAAA,GAAiB,KAAAC,EAAA,GAAAD,IAAA,EAAgB,KAAAC,EAAA,CAAAD,IAAAA,EAAcC,EAAA,GAAY2B,EAAAC,SAAA,CAAAuH,aAAA,UAAApJ,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAkL,OAArHJ,EAAA,CAAAA,EAAKC,KAAA,EAAQG,GAAA2E,EAAA,KAAA/E,EAAAC,EAAA,gBAAwC,KAAAA,EAAA,CAAAD,IAAA,GAAe,KAAAC,EAAA,GAAAD,IAAA,GAAiB,KAAAC,EAAA,GAAAD,IAAA,EAAgB,KAAAC,EAAA,GAAAD,IAAAA,EAAgBC,EAAA,GAAY2B,EAAAC,SAAA,CAAAwH,UAAA,UAAArJ,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,EAAsE,GAAbL,EAAA,CAAAA,EAAKC,KAAA,EAAQ,CAAAI,EAAA,CAAO,IAAAM,EAAAmD,KAAAqE,GAAA,KAAA/H,EAAA,GAAwB2E,EAAA,KAAA/E,EAAAC,EAAAG,EAAAO,EAAA,GAAAA,EAAA,CAA4B,IAAAH,EAAA,EAAQC,EAAA,EAAQC,EAAA,EAAsB,IAAd,KAAAT,EAAA,CAAAD,IAAAA,EAAc,EAAAQ,EAAAJ,GAAAK,CAAAA,GAAA,MAAuBT,EAAA,GAAAU,IAAAA,GAAA,SAAAT,EAAAO,EAAA,IAAgCE,CAAAA,EAAA,GAAI,KAAAT,EAAAO,EAAA,EAAAR,EAAAS,GAAA,GAAAC,EAAA,IAAyB,OAAAT,EAAAG,CAAA,EAAYwB,EAAAC,SAAA,CAAAyH,UAAA,UAAAtJ,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,EAAsE,GAAbL,EAAA,CAAAA,EAAKC,KAAA,EAAQ,CAAAI,EAAA,CAAO,IAAAM,EAAAmD,KAAAqE,GAAA,KAAA/H,EAAA,GAAwB2E,EAAA,KAAA/E,EAAAC,EAAAG,EAAAO,EAAA,GAAAA,EAAA,CAA4B,IAAAH,EAAAJ,EAAA,EAAUK,EAAA,EAAQC,EAAA,EAAwB,IAAhB,KAAAT,EAAAO,EAAA,CAAAR,IAAAA,EAAgB,EAAAQ,GAAA,GAAAC,CAAAA,GAAA,MAAwBT,EAAA,GAAAU,IAAAA,GAAA,SAAAT,EAAAO,EAAA,IAAgCE,CAAAA,EAAA,GAAI,KAAAT,EAAAO,EAAA,EAAAR,EAAAS,GAAA,GAAAC,EAAA,IAAyB,OAAAT,EAAAG,CAAA,EAAYwB,EAAAC,SAAA,CAAA0H,SAAA,UAAAvJ,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAqI,OAAhFJ,EAAA,CAAAA,EAAKC,KAAA,EAAQG,GAAA2E,EAAA,KAAA/E,EAAAC,EAAA,YAAoCD,EAAA,GAAAA,CAAAA,EAAA,IAAAA,EAAA,GAAiB,KAAAC,EAAA,CAAAD,IAAAA,EAAcC,EAAA,GAAY2B,EAAAC,SAAA,CAAA2H,YAAA,UAAAxJ,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA8I,OAAnFJ,EAAA,CAAAA,EAAKC,KAAA,EAAQG,GAAA2E,EAAA,KAAA/E,EAAAC,EAAA,gBAAwC,KAAAA,EAAA,CAAAD,IAAAA,EAAc,KAAAC,EAAA,GAAAD,IAAA,EAAgBC,EAAA,GAAY2B,EAAAC,SAAA,CAAA4H,YAAA,UAAAzJ,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA8I,OAAnFJ,EAAA,CAAAA,EAAKC,KAAA,EAAQG,GAAA2E,EAAA,KAAA/E,EAAAC,EAAA,gBAAwC,KAAAA,EAAA,CAAAD,IAAA,EAAc,KAAAC,EAAA,GAAAD,IAAAA,EAAgBC,EAAA,GAAY2B,EAAAC,SAAA,CAAA6H,YAAA,UAAA1J,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA0L,OAA/HJ,EAAA,CAAAA,EAAKC,KAAA,EAAQG,GAAA2E,EAAA,KAAA/E,EAAAC,EAAA,0BAAkD,KAAAA,EAAA,CAAAD,IAAAA,EAAc,KAAAC,EAAA,GAAAD,IAAA,EAAgB,KAAAC,EAAA,GAAAD,IAAA,GAAiB,KAAAC,EAAA,GAAAD,IAAA,GAAiBC,EAAA,GAAY2B,EAAAC,SAAA,CAAA8H,YAAA,UAAA3J,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAAkN,OAAvJJ,EAAA,CAAAA,EAAKC,KAAA,EAAQG,GAAA2E,EAAA,KAAA/E,EAAAC,EAAA,0BAAkDD,EAAA,GAAAA,CAAAA,EAAA,WAAAA,EAAA,GAAwB,KAAAC,EAAA,CAAAD,IAAA,GAAe,KAAAC,EAAA,GAAAD,IAAA,GAAiB,KAAAC,EAAA,GAAAD,IAAA,EAAgB,KAAAC,EAAA,GAAAD,IAAAA,EAAgBC,EAAA,GAAiT2B,EAAAC,SAAA,CAAA+H,YAAA,UAAA5J,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA2D,OAAA6E,EAAA,KAAAjF,EAAAC,EAAA,GAAAG,EAAA,EAAoCwB,EAAAC,SAAA,CAAAgI,YAAA,UAAA7J,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA2D,OAAA6E,EAAA,KAAAjF,EAAAC,EAAA,GAAAG,EAAA,EAA6LwB,EAAAC,SAAA,CAAAiI,aAAA,UAAA9J,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA6D,OAAA8E,EAAA,KAAAlF,EAAAC,EAAA,GAAAG,EAAA,EAAqCwB,EAAAC,SAAA,CAAAkI,aAAA,UAAA/J,CAAA,CAAAC,CAAA,CAAAG,CAAA,EAA6D,OAAA8E,EAAA,KAAAlF,EAAAC,EAAA,GAAAG,EAAA,EAAsCwB,EAAAC,SAAA,CAAAmB,IAAA,UAAAhD,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,EAA6C,IAAAuB,EAAAkB,QAAA,CAAA9C,GAAA,+CAAmK,GAAzFI,GAAAA,CAAAA,EAAA,GAAUC,GAAAA,IAAAA,GAAAA,CAAAA,EAAA,KAAAW,MAAA,EAA2Bf,GAAAD,EAAAgB,MAAA,EAAAf,CAAAA,EAAAD,EAAAgB,MAAA,EAA0Bf,GAAAA,CAAAA,EAAA,GAAUI,EAAA,GAAAA,EAAAD,GAAAC,CAAAA,EAAAD,CAAAA,EAAgBC,IAAAD,GAAkBJ,IAAAA,EAAAgB,MAAA,WAAAA,MAAA,CAAlB,SAA4D,GAAAf,EAAA,EAAQ,8CAAkD,GAAAG,EAAA,GAAAA,GAAA,KAAAY,MAAA,wCAAkE,GAAAX,EAAA,8CAAuDA,EAAA,KAAAW,MAAA,EAAAX,CAAAA,EAAA,KAAAW,MAAA,EAA+BhB,EAAAgB,MAAA,CAAAf,EAAAI,EAAAD,GAAmBC,CAAAA,EAAAL,EAAAgB,MAAA,CAAAf,EAAAG,CAAAA,EAAe,IAAAO,EAAAN,EAAAD,EAAU,UAAAJ,GAAA,mBAAAoB,WAAAS,SAAA,CAAAmI,UAAA,CAAkE,KAAAA,UAAA,CAAA/J,EAAAG,EAAAC,QAAuB,UAAAL,GAAAI,EAAAH,GAAAA,EAAAI,EAA4B,QAAAG,EAAAG,EAAA,EAAcH,GAAA,EAAK,EAAAA,EAAKR,CAAA,CAAAQ,EAAAP,EAAA,MAAAO,EAAAJ,EAAA,MAAuBgB,WAAAS,SAAA,CAAAoI,GAAA,CAAA1F,IAAA,CAAAvE,EAAA,KAAA2H,QAAA,CAAAvH,EAAAC,GAAAJ,GAAsD,OAAAU,CAAA,EAAUiB,EAAAC,SAAA,CAAAoE,IAAA,UAAAjG,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,EAA6C,oBAAAL,EAAA,CAAqH,GAA7F,iBAAAC,GAAwBI,EAAAJ,EAAIA,EAAA,EAAIG,EAAA,KAAAY,MAAA,EAAc,iBAAAZ,IAA6BC,EAAAD,EAAIA,EAAA,KAAAY,MAAA,EAAcX,KAAAsC,IAAAtC,GAAA,iBAAAA,EAAuC,6CAAiD,oBAAAA,GAAA,CAAAuB,EAAAK,UAAA,CAAA5B,GAA+C,qCAAAA,GAA4C,GAAAL,IAAAA,EAAAgB,MAAA,EAAiB,IAAySR,EAAzSG,EAAAX,EAAAc,UAAA,IAAsBT,CAAAA,SAAAA,GAAAM,EAAA,KAAAN,WAAAA,CAAA,GAAoCL,CAAAA,EAAAW,CAAAA,CAAA,MAAM,iBAAAX,EAA6BA,GAAA,IAAQ,kBAAAA,GAA8BA,CAAAA,EAAAmH,OAAAnH,EAAA,EAAY,GAAAC,EAAA,QAAAe,MAAA,CAAAf,GAAA,KAAAe,MAAA,CAAAZ,EAAsC,uCAA2C,GAAAA,GAAAH,EAAS,YAAsE,GAA1DA,KAAA,EAAQG,EAAAA,KAAAuC,IAAAvC,EAAA,KAAAY,MAAA,CAAAZ,IAAA,EAAkCJ,GAAAA,CAAAA,EAAA,GAAgB,iBAAAA,EAAwB,IAAAQ,EAAAP,EAAQO,EAAAJ,EAAI,EAAAI,EAAK,KAAAA,EAAA,CAAAR,MAAW,CAAK,IAAAS,EAAAmB,EAAAkB,QAAA,CAAA9C,GAAAA,EAAA4B,EAAAG,IAAA,CAAA/B,EAAAK,GAA4CK,EAAAD,EAAAO,MAAA,CAAe,GAAAN,IAAAA,EAAU,8BAAAV,EAAA,qCAAyE,IAAAQ,EAAA,EAAQA,EAAAJ,EAAAH,EAAM,EAAAO,EAAK,KAAAA,EAAAP,EAAA,CAAAQ,CAAA,CAAAD,EAAAE,EAAA,CAAkB,aAAa,IAAAE,EAAA,oBAA2J,SAAA2C,EAAAvD,CAAA,CAAAC,CAAA,EAA0BA,EAAAA,GAAAiK,IAAuD,QAAzC9J,EAAMC,EAAAL,EAAAgB,MAAA,CAAeL,EAAA,KAAWH,EAAA,GAASC,EAAA,EAAYA,EAAAJ,EAAI,EAAAI,EAAA,CAAuB,GAAAL,CAAlBA,EAAAJ,EAAAc,UAAA,CAAAL,EAAA,EAAkB,OAAAL,EAAA,OAAqB,IAAAO,EAAA,CAAO,GAAAP,EAAA,OAAsDK,EAAA,IAAAJ,EAAtD,CAAYJ,CAAAA,GAAA,OAAAO,EAAAS,IAAA,cAAiC,SAAoEN,EAAAP,EAAI,SAAS,GAAAA,EAAA,OAAYH,CAAAA,GAAA,OAAAO,EAAAS,IAAA,cAAiCN,EAAAP,EAAI,SAASA,EAAA,CAAAO,EAAA,UAAAP,EAAA,kBAA8BO,GAAW,CAAAV,GAAA,OAAAO,EAAAS,IAAA,cAAwC,GAAPN,EAAA,KAAOP,EAAA,KAAU,IAAAH,GAAA,WAAkBO,EAAAS,IAAA,CAAAb,EAAA,MAAU,GAAAA,EAAA,MAAgB,IAAAH,GAAA,WAAkBO,EAAAS,IAAA,CAAAb,GAAA,MAAAA,GAAAA,EAAA,UAA0B,GAAAA,EAAA,OAAiB,IAAAH,GAAA,WAAkBO,EAAAS,IAAA,CAAAb,GAAA,OAAAA,GAAA,SAAAA,GAAAA,EAAA,UAAuC,GAAAA,EAAA,SAAmB,IAAAH,GAAA,WAAkBO,EAAAS,IAAA,CAAAb,GAAA,OAAAA,GAAA,UAAAA,GAAA,SAAAA,GAAAA,EAAA,UAAyD,kCAAuC,OAAAI,CAAA,CAAS,SAAA+G,EAAAvH,CAAA,EAAkC,QAATC,EAAA,GAASG,EAAA,EAAYA,EAAAJ,EAAAgB,MAAA,CAAW,EAAAZ,EAAKH,EAAAgB,IAAA,CAAAjB,IAAAA,EAAAc,UAAA,CAAAV,IAA4B,OAAAH,CAAA,CAAqK,SAAAuD,EAAAxD,CAAA,EAA0B,OAAAK,EAAAC,WAAA,CAAA6J,SAAjnCnK,CAAA,EAAmE,GAAAA,CAAzBA,EAAAA,CAAlBA,EAAAA,EAAAoK,KAAA,UAAkBrD,IAAA,GAAAD,OAAA,CAAAlG,EAAA,KAAyBI,MAAA,YAAuB,KAAAhB,EAAAgB,MAAA,OAAsBhB,GAAA,IAAQ,OAAAA,CAAA,EAAy/BA,GAAA,CAAqC,SAAAsH,EAAAtH,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,EAA6B,QAAAM,EAAA,EAAqB,EAATN,IAASM,CAAAA,EAAAP,GAAAH,EAAAe,MAAA,IAAAL,CAAAA,GAAAX,EAAAgB,MAAA,EAAL,EAAAL,EAAyCV,CAAA,CAAAU,EAAAP,EAAA,CAAAJ,CAAA,CAAAW,EAAA,CAAY,OAAAA,CAAA,CAAS,SAAA4B,EAAAvC,CAAA,CAAAC,CAAA,EAAyB,OAAAD,aAAAC,GAAAD,MAAAA,GAAAA,MAAAA,EAAAqK,WAAA,EAAArK,MAAAA,EAAAqK,WAAA,CAAAC,IAAA,EAAAtK,EAAAqK,WAAA,CAAAC,IAAA,GAAArK,EAAAqK,IAAA,CAAgJ,IAAAzJ,EAAA,WAA+D,QAA9Cb,EAAA,mBAAyBC,EAAA,WAAqBG,EAAA,EAAYA,EAAA,GAAK,EAAAA,EAAgB,QAAXC,EAAAD,GAAAA,EAAWO,EAAA,EAAYA,EAAA,GAAK,EAAAA,EAAKV,CAAA,CAAAI,EAAAM,EAAA,CAAAX,CAAA,CAAAI,EAAA,CAAAJ,CAAA,CAAAW,EAAA,CAAkB,OAAAV,CAAA,GAAS,EAAG,aAAAD,CAAA,CAAAC,CAAA,EAEzxvBA,EAAAwE,IAAA,UAAAzE,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,CAAAM,CAAA,EAAmC,IAARH,EAAAC,EAAQC,EAAAC,EAAAA,EAAAN,EAAA,EAAcO,EAAA,IAAAF,CAAAA,EAAA,EAAeG,EAAAD,GAAA,EAAWL,EAAA,GAASoE,EAAAvE,EAAAO,EAAA,IAAc4J,EAAAnK,EAAA,KAAaoK,EAAAxK,CAAA,CAAAC,EAAA0E,EAAA,CAA4C,IAA/BA,GAAA4F,EAAK/J,EAAAgK,EAAA,KAAAjK,CAAAA,EAAA,EAAciK,IAAA,CAAAjK,EAAOA,GAAAG,EAAUH,EAAA,EAAIC,EAAAA,IAAAA,EAAAR,CAAA,CAAAC,EAAA0E,EAAA,CAAAA,GAAA4F,EAAAhK,GAAA,GAAqD,IAA1BE,EAAAD,EAAA,KAAAD,CAAAA,EAAA,EAAcC,IAAA,CAAAD,EAAOA,GAAAF,EAAUE,EAAA,EAAIE,EAAAA,IAAAA,EAAAT,CAAA,CAAAC,EAAA0E,EAAA,CAAAA,GAAA4F,EAAAhK,GAAA,GAA2B,GAAAC,IAAAA,EAAUA,EAAA,EAAAK,OAAM,GAAAL,IAAAI,EAAe,OAAAH,EAAAgK,IAAA,IAAAD,CAAAA,EAAA,MAAoC/J,GAAAqD,KAAAqE,GAAA,GAAA9H,GAAkBG,GAAAK,EAAM,OAAA2J,EAAA,MAAA/J,EAAAqD,KAAAqE,GAAA,GAAA3H,EAAAH,EAAA,EAAkCJ,EAAAiC,KAAA,UAAAlC,CAAA,CAAAC,CAAA,CAAAG,CAAA,CAAAC,CAAA,CAAAM,CAAA,CAAAH,CAAA,EAAwC,IAAVC,EAAAC,EAAAE,EAAUC,EAAAL,EAAAA,EAAAG,EAAA,EAAcJ,EAAA,IAAAM,CAAAA,EAAA,EAAe8D,EAAApE,GAAA,EAAWgK,EAAA5J,KAAAA,EAAAmD,qBAAA,EAA+C0G,EAAAnK,EAAA,EAAAG,EAAA,EAAckK,EAAArK,EAAA,KAAasK,EAAA1K,EAAA,GAAAA,IAAAA,GAAA,EAAAA,EAAA,MAAiV,IAAvS2K,MAAd3K,EAAA6D,KAAA+G,GAAA,CAAA5K,KAAcA,IAAAiK,KAA2BxJ,EAAAkK,MAAA3K,GAAA,IAAeQ,EAAAF,IAASE,EAAAqD,KAAAgH,KAAA,CAAAhH,KAAAiH,GAAA,CAAA9K,GAAA6D,KAAAkH,GAAA,EAAmC/K,EAAAW,CAAAA,EAAAkD,KAAAqE,GAAA,IAAA1H,EAAA,MAA2BA,IAAIG,GAAA,GAAKH,EAAAkE,GAAA,EAAW1E,GAAAsK,EAAA3J,EAAYX,GAAAsK,EAAAzG,KAAAqE,GAAA,KAAAxD,GAAqB1E,EAAAW,GAAA,IAAWH,IAAIG,GAAA,GAAKH,EAAAkE,GAAApE,GAAWG,EAAA,EAAID,EAAAF,GAAIE,EAAAkE,GAAA,GAAgBjE,EAAA,CAAAT,EAAAW,EAAA,GAAAkD,KAAAqE,GAAA,GAAAxH,GAAwBF,GAAAkE,IAAWjE,EAAAT,EAAA6D,KAAAqE,GAAA,GAAAxD,EAAA,GAAAb,KAAAqE,GAAA,GAAAxH,GAAkCF,EAAA,IAAUE,GAAA,EAAKX,CAAA,CAAAI,EAAAoK,EAAA,CAAA9J,IAAAA,EAAA8J,GAAAE,EAAAhK,GAAA,IAAAC,GAAA,GAA8C,IAAdF,EAAAA,GAAAE,EAAAD,EAASG,GAAAF,EAAUE,EAAA,EAAIb,CAAA,CAAAI,EAAAoK,EAAA,CAAA/J,IAAAA,EAAA+J,GAAAE,EAAAjK,GAAA,IAAAI,GAAA,GAAgCb,CAAA,CAAAI,EAAAoK,EAAAE,EAAA,EAAAC,IAAAA,CAAA,IAAmB1K,EAAA,GAAS,SAAAgL,EAAA7K,CAAA,EAAgC,IAAAC,EAAAJ,CAAA,CAAAG,EAAA,CAAW,GAAAC,KAAAsC,IAAAtC,EAAkB,OAAAA,EAAA6K,OAAA,CAAiB,IAAAvK,EAAAV,CAAA,CAAAG,EAAA,EAAY8K,QAAA,IAAY1K,EAAA,GAAW,IAAIR,CAAA,CAAAI,EAAA,CAAAO,EAAAA,EAAAuK,OAAA,CAAAD,GAAsCzK,EAAA,UAAQ,CAAQA,GAAA,OAAAP,CAAA,CAAAG,EAAA,CAAiB,OAAAO,EAAAuK,OAAA,CAAiBD,EAAAE,EAAA,CAAmEC,KAAc,IAAAhL,EAAA6K,EAAA,GAA8BI,CAAAA,EAAAH,OAAA,CAAA9K,CAAA,gJCExxCkL,EAAc,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAkB,CAC1CC,OAAQ,CAAC,eAAgB,cAAa,CACtCC,MAAO,CCTyB,CAChCC,YAAa,eACbpB,KAAM,MACNqB,UAAW,aACXC,SAAU,CACR,CAAEC,QAAS,WAAY,EACvB,CAAEA,QAAS,SAAU,EACrB,CAAEA,QAAS,UAAW,EACtB,CAAEA,QAAS,WAAY,EACvB,CAAEA,QAAS,cAAe,EAC1B,CAAEA,QAAS,UAAW,EACtB,CAAEA,QAAS,UAAW,EACtB,CAAEA,QAAS,UAAW,EACxB,CACAC,WAAY,CACVC,SAAU,CACRH,SAAU,CACR,CACEI,MAAO,yBACP1B,KAAM,kBACR,EAEJ,EACA2B,OAAQ,CACNL,SAAU,CACR,CACEI,MAAO,+BACP1B,KAAM,sBACR,EAEJ,EACA4B,QAAS,CACPN,SAAU,CACR,CACEI,MAAO,WACP1B,KAAM,iBACR,EAEJ,EACA6B,SAAU,CACRP,SAAU,CACR,CACEI,MAAO,kDACP1B,KAAM,iBACR,EACA,CACE0B,MAAO,8BACP1B,KAAM,kBACR,EACA,CACE0B,MAAO,mBACP1B,KAAM,kBACR,EAEJ,EACA8B,YAAa,CACXR,SAAU,CACR,CACEI,MAAO,aACP1B,KAAM,aACR,EAEJ,EACA+B,QAAS,CACPT,SAAU,CACR,CACEI,MAAO,oCACP1B,KAAM,cACR,EAEJ,EACAgC,QAAS,CACPV,SAAU,CACR,CACEI,MAAO,wBACP1B,KAAM,sBACR,EAEJ,EACAiC,QAAS,CACPX,SAAU,CACR,CACEI,MAAO,yBACP1B,KAAM,kBACR,EAEJ,EACAkC,MAAO,CAAC,EACRC,MAAO,CAAC,CACV,CACF,EDhFA,GAEe,SAARC,EAA+BC,CAAgC,KAAhC,CAAEC,KAAAA,CAAAA,CAAMC,KAAAA,CAAAA,CAAMC,OAAAA,CAAAA,CAAQC,UAAAA,CAAU,EAAhCJ,EAC9BK,EAAc1B,EAAY2B,kBAAA,GAChC,GAAIJ,QAAAA,GAAkBA,SAAAA,GAAmB,CAACG,EAAYhG,QAAA,CAAS6F,GAC7D,MAAMvB,EAAY4B,YAAA,CAAaL,GAGjC,IAAMM,EAAOC,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IACZ9B,EAAY+B,UAAA,CAAWT,EAAM,CAClCC,KAAAA,EACArB,OAAQ,CACN8B,MAAO,eACPC,KAAM,aACR,EACAC,UAAWV,EAAS,SAAW,UAC/BW,aAAc,CACZ,CACEC,IAAIC,CAAAA,EACF,KAAKC,cAAA,CAAeD,EAAME,EAAAA,GAAS,CACrC,CACF,EAEJ,GACC,CAACjB,EAAMC,EAAMC,EAAO,EAEvB,OAAOA,EACLgB,CAAAA,EAAAA,EAAAA,GAAAA,EAAC,QAAKf,UAAU,YACdgB,SAAAD,CAAAA,EAAAA,EAAAA,GAAAA,EAAC,QAAKE,wBAAyB,CAAEC,OAAQd,CAAK,EAAGJ,UAAWmB,CAAAA,EAAAA,EAAAA,CAAAA,EAAK,QAASnB,EAAS,EAAG,GAGxFe,CAAAA,EAAAA,EAAAA,GAAAA,EAAC,OAAIE,wBAAyB,CAAEC,OAAQd,CAAK,EAAGJ,UAAWmB,CAAAA,EAAAA,EAAAA,CAAAA,EAAK,YAAanB,EAAS,EAE1F,0D+BhCAoB,EoBkYAC,ECtYAC,E9C+VAC,EAsYAC,+LJ/uBA,IAAAC,EAAA,CACA,CACA,UACA,YACA,WAAoBC,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,oBACA,oBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,kBACA,oBACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,0BACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,QAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,mBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,iBACA,mBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,gBACA,SACA,OACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,KAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,SACA,gBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,eACA,iBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,kBACA,SACA,QACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,eACA,iBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,KACpB,EACA,CACA,WACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,OACA,SACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,oBACA,SACA,eACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,iBACA,mBACA,SACA,OACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,SACA,MACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,KAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,UACA,SACA,KACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,OACA,SACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,KACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,kBACA,SACA,aACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,iBACA,mBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,QAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,QAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,SACA,QACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,wBACA,4BACA,SACA,IACA,MACA,MACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,uBACA,2BACA,SACA,MACA,MACA,MACA,MACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,UACA,SACA,KACA,KACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,gBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,gBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,0BACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,0BACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,SACA,MACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,SACA,MACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,QACA,UACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,SACA,MACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,iBACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,SACA,MACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,qBACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,qBACA,yBACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,QAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,QACA,UACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,UACA,YACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,SACA,aACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,0BACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,WACA,kBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,SACA,KACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,KAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,SACA,KACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,KAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,cACA,SACA,QACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,gBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,UACA,gBACA,SACA,WACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,gBACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,QAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,KACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,uBACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,gBACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,KACpB,EACA,CACA,aACA,eACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,iBACA,mBACA,SACA,OACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,mBACA,qBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,KACpB,EACA,CACA,UACA,YACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,QACA,kBACA,SACA,MACA,OACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,SACA,KACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,WACA,yBACA,SACA,WACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,SACA,OACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,QAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,qBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,uBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,OACA,SACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,SACA,QACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,qBACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,+BACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,SACA,QACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,wBACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,KAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,SACA,KACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,eACA,iBACA,SACA,SACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,iBACA,aACA,SACA,OACA,KACA,QACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,kBACA,qBACA,SACA,UACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,eACA,iBACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,gBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,yBACA,SACA,oBACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,6BACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,SACA,OACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,oBACA,qBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,qBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,eACA,iBACA,SACA,KACA,SACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,4BACA,SACA,MACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,kBACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,gBACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,OACA,SACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,QACA,oBACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,eACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,kBACA,SACA,MACA,YACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,gBACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,WACA,aACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,mBACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,cACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,gBACA,SACA,YACA,OACA,CACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,MAAAyO,EAAAzO,CAAA,KAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,aACA,eACA,SACA,KACA,CACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,SACA,WACA,WAAoBG,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,UACA,YACA,SACA,MACA,CACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,eACA,iBACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,WACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACAK,EAAApN,OAAAqN,WAAA,CAAAP,EAAAQ,GAAA,KAAAxO,EAAAyO,EAAA,CAAAzO,EAAA0O,MAAA,IACAC,EAAAzN,OAAAqN,WAAA,CAAAP,EAAAY,OAAA,IAAA5O,EAAA6O,OAAA,EAAAL,IAAA,IAAApO,EAAAJ,EAAA0O,MAAA,SACAI,EAAA,CACA,GAAAR,CAAA,CACA,GAAAK,CAAA,ECxvCAI,EAAA,MAAAC,GACSZ,QAAAC,GAAA,EAAAJ,EAAAzO,CAAA,OAAAyO,EAAAzO,CAAA,SAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,QAAoBC,IAAA,IAAAe,EAAAC,OAAA,CAAAF,ICmT7BG,EAAAjO,OAAAqN,WAAA,CAAAa,CAnTA,CACA,gBACA,yBACA,YACA,WAAoBnB,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,uBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,uBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,uBACA,mCACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,sBACA,+BACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,0BACA,mCACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,sBACA,+BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,eACA,wBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,4BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,kBACA,iCACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,qBACA,8BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,sBACA,+BACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,iBACA,0BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,yBACA,kCACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,wBACA,iCACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,+BACA,wCACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,kBACA,2BACA,aACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,0BACA,mCACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gCACA,yCACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,sBACA,YACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,eACA,wBACA,YACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,yBACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,oBACA,6BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,2BACA,oCACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,4BACA,qCACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,0BACA,mCACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,8BACA,uCACA,YACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,cACA,uBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,eACA,wBACA,aACA,WAAoBA,EAAAzO,CAAA,MAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,sBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,eACA,wBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,UACA,mBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,kBACA,2BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,eACA,wBACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,aACA,sBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,yBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,SACA,kBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,eACA,2BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,oBACA,gCACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,oBACA,gCACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,gBACA,yBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,iBACA,0BACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,kBACA,2BACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,oBACA,6BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,qBACA,8BACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,kBACA,4BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,MACpB,EACA,CACA,iBACA,0BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,YACA,qBACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,mBACA,4BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,kBACA,2BACA,YACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACA,mBACA,4BACA,aACA,WAAoBA,EAAAzO,CAAA,OAAA0O,IAAA,CAAAD,EAAAE,IAAA,CAAAF,EAAA,OACpB,EACA,CACAO,GAAA,KAAAxO,EAAAyO,EAAA,CAAAzO,EAAA0O,MAAA,GCpTA,OAAAW,UAAAC,MACAzF,YAAA0F,CAAA,EACA,MAAAA,GACA,KAAAzF,IAAA,aACA,CACA,gBCsBA,SAAA0F,EAAAC,CAAA,IAAAC,CAAA,EAMA,OALAA,EAAAC,OAAA,KACA,QAAAhC,KAAAiC,EACAH,CAAA,CAAA9B,EAAA,CAAAiC,CAAA,CAAAjC,EAAA,GAGA8B,CACA,CAWA,IAAAI,EAAA,yCACAC,EAAA,MACA,OAAAC,YAAAC,CAAA,SACA,OAAAA,IAGAH,EAAAI,SAAA,GACAJ,EAAAK,IAAA,CAAAF,GACA,CACA,OAAAG,gBAAAH,CAAA,CAAAI,CAAA,CAAAC,CAAA,EACA,OAAAL,EAAA1J,OAAA,CAAAuJ,EAAA,CAAArE,EAAA8E,EAAAC,EAAAC,KACA,IAAAC,EAAAJ,CAAA,CAAAzJ,SAAA0J,GAAAC,EAAA,KACA,IAAAE,EAcA,OAAAjF,CAdA,EACA,IAAAkF,EAAAN,EAAAO,SAAA,CAAAF,EAAAG,KAAA,CAAAH,EAAAI,GAAA,EACA,KAAAH,MAAAA,CAAA,KACAA,EAAAA,EAAAC,SAAA,IAEA,OAAAH,GACA,eACA,OAAAE,EAAAzN,WAAA,EACA,cACA,OAAAyN,EAAAI,WAAA,EACA,SACA,OAAAJ,CACA,CACA,CAGA,EACA,CACA,EAUA,SAAAK,EAAA3Q,CAAA,CAAA4Q,CAAA,EACA,GAAA5Q,OAAAA,GAAA4Q,OAAAA,EACA,SAEA,IAAA5Q,EACA,UAEA,IAAA4Q,EACA,SAEA,IAAAC,EAAA7Q,EAAAI,MAAA,CACA0Q,EAAAF,EAAAxQ,MAAA,CACA,GAAAyQ,IAAAC,EAAA,CACA,QAAAlR,EAAA,EAAoBA,EAAAiR,EAAUjR,IAAA,KAtB9BI,EAAA4Q,EAuBA,IAAAG,EAtBA,CADA/Q,EAuBAA,CAAA,CAAAJ,EAAA,GAvBAgR,EAuBAA,CAAA,CAAAhR,EAAA,EArBA,GAEAI,EAAA4Q,EACA,EAEA,EAiBA,GAAAG,IAAAA,EACA,OAAAA,CAEA,CACA,QACA,CACA,OAAAF,EAAAC,CACA,CACA,SAAAE,EAAAC,CAAA,WACA,kBAAoBnB,IAAA,CAAAmB,IAGpB,kBAAoBnB,IAAA,CAAAmB,IAGpB,kBAAoBnB,IAAA,CAAAmB,IAGpB,kBAAoBnB,IAAA,CAAAmB,GAIpB,CACA,SAAAC,EAAAC,CAAA,EACA,OAAAA,EAAAjL,OAAA,2CAAiC,OACjC,CACA,IAAAkL,EAAA,MACA3H,YAAA4H,CAAA,EACA,KAAAA,EAAA,CAAAA,EACA,KAAAC,KAAA,KAAAC,GACA,CACArM,IAAAqI,CAAA,EACA,QAAA+D,KAAA,CAAAE,GAAA,CAAAjE,GACA,YAAA+D,KAAA,CAAApM,GAAA,CAAAqI,GAEA,IAAA4D,EAAA,KAAAE,EAAA,CAAA9D,GAEA,OADA,KAAA+D,KAAA,CAAAjI,GAAA,CAAAkE,EAAA4D,GACAA,CACA,CACA,EAGAM,EAAA,MACAhI,YAAAiI,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,KAAAF,SAAA,CAAAA,EACA,KAAAC,SAAA,CAAAA,EACA,KAAAC,KAAA,CAAAA,EACA,KAAAC,gBAAA,KAAAT,EACA,QAAAQ,KAAA,CAAAxG,KAAA,CAAAL,GAEA,CACA,OAAA+G,mBAAAtC,CAAA,CAAAuC,CAAA,EACA,YAAAC,qBAAA,CAAAC,SA2HAzC,CAAA,EACA,IAAAA,GAGA,CAAAA,EAAA0C,QAAA,GAAAzR,MAAA6B,OAAA,CAAAkN,EAAA0C,QAAA,EAFA,SAKA,IAAAA,EAAA1C,EAAA0C,QAAA,CACA5B,EAAA,GAAA6B,EAAA,EACA,QAAAvS,EAAA,EAAAwS,EAAAF,EAAA9R,MAAA,CAAyCR,EAAAwS,EAASxS,IAAA,CAClD,IAIAyS,EAJAC,EAAAJ,CAAA,CAAAtS,EAAA,CACA,IAAA0S,EAAAJ,QAAA,CACA,SAGA,oBAAAI,EAAAC,KAAA,EACA,IAAAC,EAAAF,EAAAC,KAAA,CAGAF,EAAAG,CADAA,EAAAA,CADAA,EAAAA,EAAAtM,OAAA,cACAA,OAAA,cACAsD,KAAA,KACA,MACA6I,EADM5R,MAAA6B,OAAA,CAAAgQ,EAAAC,KAAA,EACND,EAAAC,KAAA,CAEA,KAEA,IAAAE,EAAA,GACA,oBAAAH,EAAAJ,QAAA,CAAAO,SAAA,EACAA,EAAA,EACA,IAAAC,EAAAJ,EAAAJ,QAAA,CAAAO,SAAA,CAAAjJ,KAAA,MACA,QAAAmJ,EAAA,EAAAC,EAAAF,EAAAtS,MAAA,CAA8CuS,EAAAC,EAAUD,IAExD,OADAD,CAAA,CAAAC,EAAA,EAEA,aACAF,GAAA,EACA,KACA,YACAA,GAAA,EACA,KACA,iBACAA,GAAA,EACA,KACA,qBACAA,GAAA,CAEA,CAEA,CACA,IAAAI,EAAA,IACA,kBAAAP,EAAAJ,QAAA,CAAAW,UAAA,EAAA7B,EAAAsB,EAAAJ,QAAA,CAAAW,UAAA,GACAA,CAAAA,EAAAP,EAAAJ,QAAA,CAAAW,UAAA,EAEA,IAAAC,EAAA,IACA,kBAAAR,EAAAJ,QAAA,CAAAY,UAAA,EAAA9B,EAAAsB,EAAAJ,QAAA,CAAAY,UAAA,GACAA,CAAAA,EAAAR,EAAAJ,QAAA,CAAAY,UAAA,EAEA,QAAAH,EAAA,EAAAC,EAAAP,EAAAjS,MAAA,CAA0CuS,EAAAC,EAAUD,IAAA,CAEpD,IAAAD,EAAAF,CADA,CAAAG,EAAA,CAAAxM,IAAA,GACAqD,KAAA,MACA+I,EAAAG,CAAA,CAAAA,EAAAtS,MAAA,IACA2S,EAAA,IACAL,CAAAA,EAAAtS,MAAA,IAEA2S,CADAA,EAAAL,EAAAnR,KAAA,GAAAmR,EAAAtS,MAAA,KACA4S,OAAA,GAEA1C,CAAA,CAAA6B,IAAA,KAAAc,EACAV,EACAQ,EACAnT,EACA6S,EACAI,EACAC,EAEA,CACA,CACA,OAAAxC,CACA,EAtMAd,GAAAuC,EACA,CACA,OAAAC,sBAAAxC,CAAA,CAAAuC,CAAA,EACA,OAAAmB,SAuNAC,CAAA,CAAAzB,CAAA,EACAyB,EAAAC,IAAA,EAAApT,EAAA4Q,SAvSA5Q,EAAA4Q,EAwSA,IAAAvR,EAvSA,CADAW,EAwSAA,EAAAuS,KAAA,GAxSA3B,EAwSAA,EAAA2B,KAAA,EAtSA,GAEAvS,EAAA4Q,EACA,EAEA,SAkSA,IAAAvR,GAIAA,IADAA,CAAAA,EAAAsR,EAAA3Q,EAAA+S,YAAA,CAAAnC,EAAAmC,YAAA,GAFA1T,EAMAW,EAAAkQ,KAAA,CAAAU,EAAAV,KAAA,GAEA,IAAAmD,EAAA,EACAC,EAAA,UACAC,EAAA,UACA,KAAAJ,EAAA/S,MAAA,KAAA+S,KAAAA,CAAA,IAAAZ,KAAA,GACA,IAAAiB,EAAAL,EAAAM,KAAA,EACA,MAAAD,EAAAf,SAAA,EACAY,CAAAA,EAAAG,EAAAf,SAAA,EAEA,OAAAe,EAAAX,UAAA,EACAS,CAAAA,EAAAE,EAAAX,UAAA,EAEA,OAAAW,EAAAV,UAAA,EACAS,CAAAA,EAAAC,EAAAV,UAAA,CAEA,CACA,IAAAf,EAAA,IAAA2B,EAAAhC,GACAiC,EAAA,IAAAC,EAAAP,EAAAtB,EAAA8B,KAAA,CAAAP,GAAAvB,EAAA8B,KAAA,CAAAN,IACAO,EAAA,IAAAC,EAAA,IAAAC,EAAA,mBACA,QAAApU,EAAA,EAAAwS,EAAAe,EAAA/S,MAAA,CAAiDR,EAAAwS,EAASxS,IAAA,CAC1D,IAAAqU,EAAAd,CAAA,CAAAvT,EAAA,CACAkU,EAAAI,MAAA,GAAAD,EAAA1B,KAAA,CAAA0B,EAAAlB,YAAA,CAAAkB,EAAAxB,SAAA,CAAAV,EAAA8B,KAAA,CAAAI,EAAApB,UAAA,EAAAd,EAAA8B,KAAA,CAAAI,EAAAnB,UAAA,EACA,CACA,WAAArB,EAAAM,EAAA4B,EAAAG,EACA,EA1PAtE,EAAAuC,EACA,CACAoC,aAAA,CACA,YAAAzC,SAAA,CAAAyC,WAAA,EACA,CACAC,aAAA,CACA,YAAAzC,SAAA,CAEAvG,MAAAiJ,CAAA,EACA,GAAAA,OAAAA,EACA,YAAA1C,SAAA,CAEA,IAAA5G,EAAAsJ,EAAAtJ,SAAA,CAEAuJ,EAAAC,IADA,CAAA1C,gBAAA,CAAA3M,GAAA,CAAA6F,GACAyJ,IAAA,CACA,GAAAC,CAiEA,SAAAJ,CAAA,CAAAtB,CAAA,EACA,GAAAA,IAAAA,EAAA3S,MAAA,CACA,SAEA,QAAA8P,EAAA,EAAsBA,EAAA6C,EAAA3S,MAAA,CAA6B8P,IAAA,KA0BnDnF,EAAA2J,EAzBA,IAAAA,EAAA3B,CAAA,CAAA7C,EAAA,CACAyE,EAAA,GACA,GAAAD,MAAAA,EAAA,CACA,GAAAxE,IAAA6C,EAAA3S,MAAA,GACA,SAEAsU,EAAA3B,CAAA,GAAA7C,EAAA,CACAyE,EAAA,EACA,CACA,KACA,IAeA5J,EAfAsJ,EAAAtJ,SAAA,EAgBA2J,CAAAA,CADAA,EAfAA,KAgBA3J,GAAAA,EAAA6J,UAAA,CAAAF,IAAA3J,MAAAA,CAAA,CAAA2J,EAAAtU,MAAA,KAjBA,CAIA,GAAAuU,EACA,SAEAN,EAAAA,EAAAQ,MAAA,CAEA,IAAAR,EACA,SAEAA,EAAAA,EAAAQ,MAAA,CAEA,QACA,GA9FAR,EAAAQ,MAAA,CAAAC,EAAA/B,YAAA,UAEA,EAGA,IAAAa,EACAU,EAAA7B,SAAA,CACA6B,EAAAzB,UAAA,CACAyB,EAAAxB,UAAA,EALA,IAOA,CACA,EACAiC,EAAA,MAAAC,EACAvL,YAAAoL,CAAA,CAAA9J,CAAA,EACA,KAAA8J,MAAA,CAAAA,EACA,KAAA9J,SAAA,CAAAA,CACA,CACA,OAAA1K,KAAA4U,CAAA,CAAAC,CAAA,EACA,QAAAxL,KAAAwL,EACAD,EAAA,IAAAD,EAAAC,EAAAvL,GAEA,OAAAuL,CACA,CACA,OAAA9T,KAAA,GAAAuR,CAAA,EACA,IAAApC,EAAA,KACA,QAAA1Q,EAAA,EAAoBA,EAAA8S,EAAAtS,MAAA,CAAqBR,IACzC0Q,EAAA,IAAA0E,EAAA1E,EAAAoC,CAAA,CAAA9S,EAAA,EAEA,OAAA0Q,CACA,CACAjQ,KAAA0K,CAAA,EACA,WAAAiK,EAAA,KAAAjK,EACA,CACAoK,aAAA,CACA,IAAAC,EAAA,KACA9E,EAAA,GACA,KAAA8E,GACA9E,EAAAjQ,IAAA,CAAA+U,EAAArK,SAAA,EACAqK,EAAAA,EAAAP,MAAA,CAGA,OADAvE,EAAA0C,OAAA,GACA1C,CACA,CACAxK,UAAA,CACA,YAAAqP,WAAA,GAAA5U,IAAA,KACA,CACA8U,QAAAC,CAAA,SACA,OAAAA,GAGA,YAAAT,MAAA,EAGA,KAAAA,MAAA,CAAAQ,OAAA,CAAAC,EACA,CACAC,sBAAAC,CAAA,EACA,IAAAlF,EAAA,GACA8E,EAAA,KACA,KAAAA,GAAAA,IAAAI,GACAlF,EAAAjQ,IAAA,CAAA+U,EAAArK,SAAA,EACAqK,EAAAA,EAAAP,MAAA,CAEA,OAAAO,IAAAI,EAAAlF,EAAA0C,OAAA,SACA,CACA,EAkCAY,EAAA,MACAnK,YAAAgJ,CAAA,CAAAgD,CAAA,CAAAC,CAAA,EACA,KAAAjD,SAAA,CAAAA,EACA,KAAAgD,YAAA,CAAAA,EACA,KAAAC,YAAA,CAAAA,CACA,CACA,EA6EAzC,EAAA,MACAxJ,YAAA8I,CAAA,CAAAQ,CAAA,CAAA7C,CAAA,CAAAuC,CAAA,CAAAI,CAAA,CAAAC,CAAA,EACA,KAAAP,KAAA,CAAAA,EACA,KAAAQ,YAAA,CAAAA,EACA,KAAA7C,KAAA,CAAAA,EACA,KAAAuC,SAAA,CAAAA,EACA,KAAAI,UAAA,CAAAA,EACA,KAAAC,UAAA,CAAAA,CACA,CACA,EACA6C,GACAjI,CADAA,EAQCiI,GAAA,GAPD,CAAAjI,EAAA,oBACAA,CAAA,CAAAA,EAAA,eACAA,CAAA,CAAAA,EAAA,mBACAA,CAAA,CAAAA,EAAA,eACAA,CAAA,CAAAA,EAAA,yBACAA,CAAA,CAAAA,EAAA,iCACAA,GAsCAgG,EAAA,MACAjK,YAAAiI,CAAA,EAIA,GAHA,KAAAkE,YAAA,GACA,KAAAC,SAAA,IACA,KAAAC,SAAA,CAAAhV,OAAAiV,MAAA,OACAtV,MAAA6B,OAAA,CAAAoP,GAAA,CACA,KAAAsE,SAAA,IACA,QAAApW,EAAA,EAAAwS,EAAAV,EAAAtR,MAAA,CAA8CR,EAAAwS,EAASxS,IACvD,KAAAkW,SAAA,CAAApE,CAAA,CAAA9R,EAAA,EAAAA,EACA,KAAAiW,SAAA,CAAAjW,EAAA,CAAA8R,CAAA,CAAA9R,EAAA,MAGA,KAAAoW,SAAA,GAEA,CACAnC,MAAAoC,CAAA,EACA,GAAAA,OAAAA,EACA,SAEAA,EAAAA,EAAAvF,WAAA,GACA,IAAAS,EAAA,KAAA2E,SAAA,CAAAG,EAAA,CACA,GAAA9E,EACA,OAAAA,EAEA,QAAA6E,SAAA,CACA,4CAAsDC,EAAM,GAK5D,OAHA9E,EAAA,OAAAyE,YAAA,CACA,KAAAE,SAAA,CAAAG,EAAA,CAAA9E,EACA,KAAA0E,SAAA,CAAA1E,EAAA,CAAA8E,EACA9E,CACA,CACAgD,aAAA,CACA,YAAA0B,SAAA,CAAAtU,KAAA,GACA,CACA,EACA2U,EAAApV,OAAAqV,MAAA,KACAnC,EAAA,MAAAoC,EACA3M,YAAA4M,CAAA,CAAAtD,CAAA,CAAAN,CAAA,CAAAI,CAAA,CAAAC,CAAA,EACA,KAAAuD,UAAA,CAAAA,EACA,KAAAtD,YAAA,CAAAA,GAAAmD,EACA,KAAAzD,SAAA,CAAAA,EACA,KAAAI,UAAA,CAAAA,EACA,KAAAC,UAAA,CAAAA,CACA,CACAwD,OAAA,CACA,WAAAF,EAAA,KAAAC,UAAA,MAAAtD,YAAA,MAAAN,SAAA,MAAAI,UAAA,MAAAC,UAAA,CACA,CACA,OAAAyD,SAAAC,CAAA,EACA,IAAAnX,EAAA,GACA,QAAAO,EAAA,EAAAwS,EAAAoE,EAAApW,MAAA,CAAsCR,EAAAwS,EAASxS,IAC/CP,CAAA,CAAAO,EAAA,CAAA4W,CAAA,CAAA5W,EAAA,CAAA0W,KAAA,GAEA,OAAAjX,CACA,CACAoX,gBAAAJ,CAAA,CAAA5D,CAAA,CAAAI,CAAA,CAAAC,CAAA,EACA,KAAAuD,UAAA,CAAAA,EACAvR,QAAAqF,GAAA,yBAEA,KAAAkM,UAAA,CAAAA,EAEA,KAAA5D,GACA,MAAAA,SAAA,CAAAA,CAAA,EAEA,IAAAI,GACA,MAAAA,UAAA,CAAAA,CAAA,EAEA,IAAAC,GACA,MAAAA,UAAA,CAAAA,CAAA,CAEA,CACA,EACAiB,EAAA,MAAA2C,EACAjN,YAAAkN,CAAA,CAAAC,EAAA,GAAAC,EAAA,EAAmE,EACnE,KAAAF,SAAA,CAAAA,EACA,KAAAE,SAAA,CAAAA,EACA,KAAAC,sBAAA,CAAAF,CACA,CACA,OAAAG,kBAAA/W,CAAA,CAAA4Q,CAAA,EACA,GAAA5Q,EAAAqW,UAAA,GAAAzF,EAAAyF,UAAA,CACA,OAAAzF,EAAAyF,UAAA,CAAArW,EAAAqW,UAAA,CAEA,IAAAW,EAAA,EACAC,EAAA,EACA,KACA,MAAAjX,EAAA+S,YAAA,CAAAiE,EAAA,EACAA,IAEA,MAAApG,EAAAmC,YAAA,CAAAkE,EAAA,EACAA,IAEAD,CAAAA,CAAAA,GAAAhX,EAAA+S,YAAA,CAAA3S,MAAA,IAAA6W,CAAAA,GAAArG,EAAAmC,YAAA,CAAA3S,MAAA,GAPA,CAUA,IAAA8W,EAAAtG,EAAAmC,YAAA,CAAAkE,EAAA,CAAA7W,MAAA,CAAAJ,EAAA+S,YAAA,CAAAiE,EAAA,CAAA5W,MAAA,CACA,GAAA8W,IAAAA,EACA,OAAAA,CAEAF,CAAAA,IACAC,GACA,CACA,OAAArG,EAAAmC,YAAA,CAAA3S,MAAA,CAAAJ,EAAA+S,YAAA,CAAA3S,MAAA,CAEAgL,MAAAmH,CAAA,EACA,GAAAA,KAAAA,EAAA,CACA,IACA4E,EACAC,EAFAC,EAAA9E,EAAA7R,OAAA,MAUA,GAPA2W,KAAAA,GACAF,EAAA5E,EACA6E,EAAA,KAEAD,EAAA5E,EAAAhC,SAAA,GAAA8G,GACAD,EAAA7E,EAAAhC,SAAA,CAAA8G,EAAA,IAEA,KAAAR,SAAA,CAAAS,cAAA,CAAAH,GACA,YAAAN,SAAA,CAAAM,EAAA,CAAA/L,KAAA,CAAAgM,EAEA,CACA,IAAAG,EAAA,KAAAT,sBAAA,CAAApR,MAAA,MAAAiR,SAAA,EAEA,OADAY,EAAAnE,IAAA,CAAAsD,EAAAK,iBAAA,EACAQ,CACA,CACArD,OAAAmC,CAAA,CAAA9D,CAAA,CAAAQ,CAAA,CAAAN,CAAA,CAAAI,CAAA,CAAAC,CAAA,MAMAqE,EACAC,EAQAI,EAdA,GAAAjF,KAAAA,EAAA,CACA,KAAAkF,aAAA,CAAApB,EAAAtD,EAAAN,EAAAI,EAAAC,GACA,MACA,CACA,IAAAuE,EAAA9E,EAAA7R,OAAA,KAGA2W,CAAA,KAAAA,GACAF,EAAA5E,EACA6E,EAAA,KAEAD,EAAA5E,EAAAhC,SAAA,GAAA8G,GACAD,EAAA7E,EAAAhC,SAAA,CAAA8G,EAAA,IAGA,KAAAR,SAAA,CAAAS,cAAA,CAAAH,GACAK,EAAA,KAAAX,SAAA,CAAAM,EAAA,EAEAK,EAAA,IAAAd,EAAA,KAAAC,SAAA,CAAAL,KAAA,GAAAtC,EAAAuC,QAAA,MAAAO,sBAAA,GACA,KAAAD,SAAA,CAAAM,EAAA,CAAAK,GAEAA,EAAAtD,MAAA,CAAAmC,EAAA,EAAAe,EAAArE,EAAAN,EAAAI,EAAAC,EACA,CACA2E,cAAApB,CAAA,CAAAtD,CAAA,CAAAN,CAAA,CAAAI,CAAA,CAAAC,CAAA,EACA,GAAAC,OAAAA,EAAA,CACA,KAAA4D,SAAA,CAAAF,eAAA,CAAAJ,EAAA5D,EAAAI,EAAAC,GACA,MACA,CACA,QAAAlT,EAAA,EAAAwS,EAAA,KAAA0E,sBAAA,CAAA1W,MAAA,CAA8DR,EAAAwS,EAASxS,IAAA,CACvE,IAAAqU,EAAA,KAAA6C,sBAAA,CAAAlX,EAAA,CACA,GAAA+Q,IAAAA,EAAAsD,EAAAlB,YAAA,CAAAA,GAAA,CACAkB,EAAAwC,eAAA,CAAAJ,EAAA5D,EAAAI,EAAAC,GACA,MACA,CACA,CACA,KAAAL,GACAA,CAAAA,EAAA,KAAAkE,SAAA,CAAAlE,SAAA,EAEA,IAAAI,GACAA,CAAAA,EAAA,KAAA8D,SAAA,CAAA9D,UAAA,EAEA,IAAAC,GACAA,CAAAA,EAAA,KAAA6D,SAAA,CAAA7D,UAAA,EAEA,KAAAgE,sBAAA,CAAAzW,IAAA,KAAA2T,EAAAqC,EAAAtD,EAAAN,EAAAI,EAAAC,GACA,CACA,EAGA4E,EAAA,MAAAC,EACA,OAAAC,YAAAC,CAAA,EACA,OAAAA,EAAA/R,QAAA,IAAAgS,QAAA,QACA,CACA,OAAAC,MAAAF,CAAA,EACA,IAAAG,EAAAL,EAAAM,aAAA,CAAAJ,GACAK,EAAAP,EAAAQ,YAAA,CAAAN,GAIA/S,QAAAqF,GAAA,EACA6N,WAAAA,EACAE,UAAAA,EACAzF,UANAkF,EAAAS,YAAA,CAAAP,GAOAhF,WANA8E,EAAAU,aAAA,CAAAR,GAOA/E,WANA6E,EAAAW,aAAA,CAAAT,EAOA,EACA,CACA,OAAAI,cAAAJ,CAAA,EACA,OAAAA,IAAAA,CAAA,KACA,CACA,OAAAM,aAAAN,CAAA,EACA,OAAAA,IAAAA,CAAA,KACA,CACA,OAAAU,yBAAAV,CAAA,EACA,OAAAA,KAAAA,CAAA,IACA,CACA,OAAAO,aAAAP,CAAA,EACA,OAAAA,MAAAA,CAAA,MACA,CACA,OAAAQ,cAAAR,CAAA,EACA,OAAAA,SAAAA,CAAA,MACA,CACA,OAAAS,cAAAT,CAAA,EACA,OAAAA,WAAAA,CAAA,MACA,CAKA,OAAAxO,IAAAwO,CAAA,CAAAG,CAAA,CAAAE,CAAA,CAAAK,CAAA,CAAA9F,CAAA,CAAAI,CAAA,CAAAC,CAAA,EACA,IAAA0F,EAAAb,EAAAM,aAAA,CAAAJ,GACAY,EAAAd,EAAAQ,YAAA,CAAAN,GACAa,EAAAf,EAAAY,wBAAA,CAAAV,GAAA,IACAc,EAAAhB,EAAAS,YAAA,CAAAP,GACAe,EAAAjB,EAAAU,aAAA,CAAAR,GACAgB,EAAAlB,EAAAW,aAAA,CAAAT,GAmBA,OAlBA,IAAAG,GACAQ,CAAAA,EAAAR,CAAA,EAEA,IAAAE,GACAO,CAAAA,EAAAP,CAAA,EAEA,OAAAK,GACAG,CAAAA,EAAAH,EAAA,KAEA,KAAA9F,GACAkG,CAAAA,EAAAlG,CAAA,EAEA,IAAAI,GACA+F,CAAAA,EAAA/F,CAAA,EAEA,IAAAC,GACA+F,CAAAA,EAAA/F,CAAA,EAEA,CAAA0F,GAAA,EAAAC,GAAA,EAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,GAAAC,GAAA,OACA,CACA,EASA,SAAAC,EAAAC,CAAA,CAAAC,CAAA,MAiFAC,EACA7N,EAjFA,IAAA8N,EAAA,GACAC,GAgFA/N,EAAA6N,CADAA,EAAA,2CACAG,IAAA,CAhFAL,GAiFA,CACAM,KAAA,KACA,IAAAjO,EACA,YAEA,IAAA2F,EAAA3F,CAAA,IAEA,OADAA,EAAA6N,EAAAG,IAAA,CAvFAL,GAwFAhI,CACA,CACA,GAzFAuI,EAAAH,EAAAE,IAAA,GACA,KAAAC,OAAAA,GAAA,CACA,IAAAC,EAAA,EACA,GAAAD,IAAAA,EAAAlZ,MAAA,EAAAkZ,MAAAA,EAAAE,MAAA,KACA,OAAAF,EAAAE,MAAA,KACA,QACAD,EAAA,EACA,KACA,SACAA,EAAA,GACA,KACA,SACAzU,QAAAqF,GAAA,qBAA0CmP,EAAA,kBAAO,EACjD,CACAA,EAAAH,EAAAE,IAAA,EACA,CACA,IAAAI,EAAAC,IAEA,GADAR,EAAA7Y,IAAA,EAAmBoZ,QAAAA,EAAAF,SAAAA,CAAA,GACnBD,MAAAA,EACA,MAEAA,EAAAH,EAAAE,IAAA,EACA,CACA,OAAAH,EACA,SAAAS,IACA,GAAAL,MAAAA,EAAA,CACAA,EAAAH,EAAAE,IAAA,GACA,IAAAO,EAAAD,IACA,YAAAC,GAAA,CAAAA,EAAAC,EACA,CACA,GAAAP,MAAAA,EAAA,CACAA,EAAAH,EAAAE,IAAA,GACA,IAAAS,EAAAC,WA0BA,IAAAC,EAAA,GACAP,EAAAC,IACA,KAEA,IADAM,EAAA3Z,IAAA,CAAAoZ,GACAH,MAAAA,GAAAA,MAAAA,IAFA,CAGA,GACAA,EAAAH,EAAAE,IAAA,SACUC,MAAAA,GAAAA,MAAAA,EAAA,CAIVG,EAAAC,GACA,CACA,UAAAM,EAAAC,IAAA,IAAAC,EAAAL,GACA,IApCA,MAHA,MAAAP,GACAA,CAAAA,EAAAH,EAAAE,IAAA,IAEAS,CACA,CACA,GAAAK,EAAAb,GAAA,CACA,IAAAc,EAAA,GACA,GACAA,EAAA/Z,IAAA,CAAAiZ,GACAA,EAAAH,EAAAE,IAAA,SACQc,EAAAb,GAAA,CACR,UAAAN,EAAAoB,EAAAP,EACA,CACA,WACA,CACA,SAAAH,IACA,IAAAM,EAAA,GACAP,EAAAE,IACA,KAAAF,GACAO,EAAA3Z,IAAA,CAAAoZ,GACAA,EAAAE,IAEA,UAAAK,EAAAK,KAAA,IAAAH,EAAAL,GACA,CAiBA,CACA,SAAAM,EAAAb,CAAA,EACA,QAAAA,GAAA,EAAAA,EAAAlO,KAAA,YACA,CAiBA,IAAAkP,GACA3M,CADAA,EAOC2M,GAAA,GAND,CAAA3M,EAAA,eACAA,CAAA,CAAAA,EAAA,mCACAA,CAAA,CAAAA,EAAA,+BACAA,CAAA,CAAAA,EAAA,uCACAA,CAAA,CAAAA,EAAA,yBACAA,GAEA,SAAA4M,EAAAC,CAAA,EACA,mBAAAA,EAAAC,OAAA,EACAD,EAAAC,OAAA,EAEA,CAGA,IAAAC,EAAA,MACAjR,YAAAsB,CAAA,EACA,KAAAA,SAAA,CAAAA,CACA,CACA4P,OAAA,CACA,YAAA5P,SAAA,CAEA,EACA6P,EAAA,MACAnR,YAAAsB,CAAA,CAAA8P,CAAA,EACA,KAAA9P,SAAA,CAAAA,EACA,KAAA8P,QAAA,CAAAA,CACA,CACAF,OAAA,CACA,SAAc,KAAA5P,SAAA,CAAe,GAAG,KAAA8P,QAAA,CAAc,EAE9C,EACAC,EAAA,MACArR,aAAA,CACA,KAAAsR,WAAA,IACA,KAAAC,kBAAA,KAAAC,IACA,KAAAC,WAAA,KAAAD,GACA,CACA,IAAAE,YAAA,CACA,YAAAJ,WAAA,CAEAK,IAAAC,CAAA,EACA,IAAA9N,EAAA8N,EAAAV,KAAA,GACA,KAAAK,kBAAA,CAAAxJ,GAAA,CAAAjE,KAGA,KAAAyN,kBAAA,CAAAI,GAAA,CAAA7N,GACA,KAAAwN,WAAA,CAAA1a,IAAA,CAAAgb,GACA,CACA,EACAC,EAAA,MACA7R,YAAA8R,CAAA,CAAAC,CAAA,EACA,KAAAD,IAAA,CAAAA,EACA,KAAAC,gBAAA,CAAAA,EACA,KAAAC,qBAAA,KAAAR,IACA,KAAAS,wBAAA,KAAAT,IACA,KAAAQ,qBAAA,CAAAL,GAAA,MAAAI,gBAAA,EACA,KAAAG,CAAA,MAAAjB,EAAA,KAAAc,gBAAA,GAEAI,cAAA,CACA,IAAAC,EAAA,KAAAF,CAAA,CACA,KAAAA,CAAA,IACA,IAAAG,EAAA,IAAAhB,EACA,QAAAiB,KAAAF,GACAG,SAsBAX,CAAA,CAAAY,CAAA,CAAAV,CAAA,CAAAjL,CAAA,EACA,IAAA4L,EAAAX,EAAAY,MAAA,CAAAd,EAAAtQ,SAAA,EACA,IAAAmR,EAAA,CACA,GAAAb,EAAAtQ,SAAA,GAAAkR,EACA,wCAAkDA,EAAqB,IAEvE,MACA,CACA,IAAAG,EAAAb,EAAAY,MAAA,CAAAF,EACAZ,CAAAA,aAAAX,EACA2B,EAAA,CAA8CD,YAAAA,EAAAF,YAAAA,CAAA,EAA0B5L,GAExEgM,EACAjB,EAAAR,QAAA,CACA,CAAQuB,YAAAA,EAAAF,YAAAA,EAAAhR,WAAAgR,EAAAhR,UAAA,EACRoF,GAGA,IAAAiM,EAAAhB,EAAAgB,UAAA,CAAAlB,EAAAtQ,SAAA,EACA,GAAAwR,EACA,QAAAC,KAAAD,EACAjM,EAAA8K,GAAA,KAAAV,EAAA8B,GAGA,EA9CAT,EAAA,KAAAP,gBAAA,MAAAD,IAAA,CAAAO,GAEA,QAAAC,KAAAD,EAAAX,UAAA,CACA,GAAAY,aAAArB,EAAA,CACA,QAAAe,qBAAA,CAAAjK,GAAA,CAAAuK,EAAAhR,SAAA,EACA,SAEA,KAAA0Q,qBAAA,CAAAL,GAAA,CAAAW,EAAAhR,SAAA,EACA,KAAA4Q,CAAA,CAAAtb,IAAA,CAAA0b,EACA,KAAQ,CACR,QAAAN,qBAAA,CAAAjK,GAAA,CAAAuK,EAAAhR,SAAA,GAGA,KAAA2Q,wBAAA,CAAAlK,GAAA,CAAAuK,EAAApB,KAAA,IAFA,SAKA,KAAAe,wBAAA,CAAAN,GAAA,CAAAW,EAAApB,KAAA,IACA,KAAAgB,CAAA,CAAAtb,IAAA,CAAA0b,EACA,CAEA,CACA,EA0BA,SAAAO,EAAAzB,CAAA,CAAA4B,CAAA,CAAAnM,CAAA,EACAmM,EAAAvR,UAAA,EAAAuR,EAAAvR,UAAA,CAAA2P,EAAA,EAEA6B,EAAA,CADAD,EAAAvR,UAAA,CAAA2P,EAAA,CACA,CAAA4B,EAAAnM,EAEA,CACA,SAAA+L,EAAAI,CAAA,CAAAnM,CAAA,EACAmM,EAAAP,WAAA,CAAAlR,QAAA,EAAAvK,MAAA6B,OAAA,CAAAma,EAAAP,WAAA,CAAAlR,QAAA,GACA0R,EACAD,EAAAP,WAAA,CAAAlR,QAAA,CACA,CAAQ,GAAAyR,CAAA,CAAAvR,WAAAuR,EAAAP,WAAA,CAAAhR,UAAA,EACRoF,GAGAmM,EAAAP,WAAA,CAAAK,UAAA,EACAG,EACA5b,OAAA6b,MAAA,CAAAF,EAAAP,WAAA,CAAAK,UAAA,EACA,CAAQ,GAAAE,CAAA,CAAAvR,WAAAuR,EAAAP,WAAA,CAAAhR,UAAA,EACRoF,EAGA,CACA,SAAAoM,EAAAnF,CAAA,CAAAkF,CAAA,CAAAnM,CAAA,EACA,QAAA2D,KAAAsD,EAAA,CACA,GAAAjH,EAAA4K,WAAA,CAAA1J,GAAA,CAAAyC,GACA,SAEA3D,EAAA4K,WAAA,CAAAE,GAAA,CAAAnH,GACA,IAAA2I,EAAA3I,EAAA/I,UAAA,CAAAkE,EAAA,GAA+DqN,EAAAvR,UAAA,CAAA+I,EAAA/I,UAAA,EAAAuR,EAAAvR,UAAA,CAC/DzK,MAAA6B,OAAA,CAAA2R,EAAAjJ,QAAA,GACA0R,EAAAzI,EAAAjJ,QAAA,EAAwD,GAAAyR,CAAA,CAAAvR,WAAA0R,CAAA,EAA2CtM,GAEnG,IAAArF,EAAAgJ,EAAAhJ,OAAA,CACA,IAAAA,EACA,SAEA,IAAAoQ,EAAAwB,EAAA5R,GACA,OAAAoQ,EAAAyB,IAAA,EACA,OACAT,EAAA,CAAkD,GAAAI,CAAA,CAAAP,YAAAO,EAAAL,WAAA,EAA8C9L,GAChG,KACA,QACA+L,EAAAI,EAAAnM,GACA,KACA,QACAgM,EAAAjB,EAAAR,QAAA,EAAgF,GAAA4B,CAAA,CAAAvR,WAAA0R,CAAA,EAA2CtM,GAC3H,KACA,QACA,OACA,IAAA4L,EAAAb,EAAAtQ,SAAA,GAAA0R,EAAAP,WAAA,CAAAnR,SAAA,CAAA0R,EAAAP,WAAA,CAAAb,EAAAtQ,SAAA,GAAA0R,EAAAL,WAAA,CAAArR,SAAA,CAAA0R,EAAAL,WAAA,QACA,GAAAF,EAAA,CACA,IAAAa,EAAA,CAA+BX,YAAAK,EAAAL,WAAA,CAAAF,YAAAA,EAAAhR,WAAA0R,CAAA,CAC/BvB,CAAA,IAAAA,EAAAyB,IAAA,CACAR,EAAAjB,EAAAR,QAAA,CAAAkC,EAAAzM,GAEA+L,EAAAU,EAAAzM,EAEA,MACA+K,IAAAA,EAAAyB,IAAA,CACAxM,EAAA8K,GAAA,KAAAR,EAAAS,EAAAtQ,SAAA,CAAAsQ,EAAAR,QAAA,GAEAvK,EAAA8K,GAAA,KAAAV,EAAAW,EAAAtQ,SAAA,EAIA,CACA,CACA,CACA,IAAAiS,EAAA,MACAvT,aAAA,CACA,KAAAqT,IAAA,EACA,CACA,EACAG,EAAA,MACAxT,aAAA,CACA,KAAAqT,IAAA,EACA,CACA,EACAI,EAAA,MACAzT,YAAAoR,CAAA,EACA,KAAAA,QAAA,CAAAA,EACA,KAAAiC,IAAA,EACA,CACA,EACAK,EAAA,MACA1T,YAAAsB,CAAA,EACA,KAAAA,SAAA,CAAAA,EACA,KAAA+R,IAAA,EACA,CACA,EACAM,EAAA,MACA3T,YAAAsB,CAAA,CAAA8P,CAAA,EACA,KAAA9P,SAAA,CAAAA,EACA,KAAA8P,QAAA,CAAAA,EACA,KAAAiC,IAAA,EACA,CACA,EACA,SAAAD,EAAA5R,CAAA,EACA,GAAAA,UAAAA,EACA,WAAA+R,EACI,GAAA/R,UAAAA,EACJ,WAAAgS,EAEA,IAAAI,EAAApS,EAAAvK,OAAA,aACA,KAAA2c,EACA,IAAAF,EAAAlS,GACIoS,IAAAA,EACJ,IAAAH,EAAAjS,EAAAsF,SAAA,KAIA,IAAA6M,EAFAnS,EAAAsF,SAAA,GAAA8M,GACApS,EAAAsF,SAAA,CAAA8M,EAAA,GAGA,CAGA,IAAAC,EAAA,UACAC,EAAA,WACA5c,OAAA,UASA,IAAA6c,EAAA,MACA/T,YAAAgU,CAAA,CAAApP,CAAA,CAAA3E,CAAA,CAAAgU,CAAA,EACA,KAAAD,SAAA,CAAAA,EACA,KAAApP,EAAA,CAAAA,EACA,KAAAsP,KAAA,CAAAjU,GAAA,KACA,KAAAkU,gBAAA,CAAAlO,EAAAC,WAAA,MAAAgO,KAAA,EACA,KAAAE,YAAA,CAAAH,GAAA,KACA,KAAAI,uBAAA,CAAApO,EAAAC,WAAA,MAAAkO,YAAA,CACA,CACA,IAAAE,WAAA,CACA,IAAAC,EAAA,KAAAP,SAAA,IAAyCQ,SAp8BzCA,EAAAhJ,CAAA,EACA,IAAAiJ,EAAA,CAAAjJ,EAAArR,WAAA,QAAAqR,EAAArR,WAAA,cACA,IAAAsa,EACAjJ,EACI,CAAAiJ,GAAAjJ,EAAA7U,MAAA,GACJ6d,EAAAhJ,EAAA1E,SAAA,GAAA0E,EAAA7U,MAAA,KAEA6U,EAAAxO,MAAA,EAAAyX,EAAA,EAEA,EA27ByC,KAAAT,SAAA,CAAAU,QAAA,EAAkC,GAAG,KAAAV,SAAA,CAAAW,IAAA,CAAoB,YAClG,SAAc,KAAA3U,WAAA,CAAAC,IAAA,CAAsB,GAAG,KAAA2E,EAAA,IAAS,EAAI2P,EAAS,EAE7DK,QAAAC,CAAA,CAAArO,CAAA,SACA,KAAA2N,gBAAA,cAAAD,KAAA,EAAAW,OAAAA,GAAArO,OAAAA,EAGAP,EAAAK,eAAA,MAAA4N,KAAA,CAAAW,EAAArO,GAFA,KAAA0N,KAAA,CAIAY,eAAAD,CAAA,CAAArO,CAAA,SACA,KAAA6N,uBAAA,cAAAD,YAAA,CAGAnO,EAAAK,eAAA,MAAA8N,YAAA,CAAAS,EAAArO,GAFA,KAAA4N,YAAA,CAIA,EACAW,GAAA,cAAAhB,EACA/T,YAAAgU,CAAA,CAAApP,CAAA,CAAA3E,CAAA,CAAAgU,CAAA,CAAAe,CAAA,EACA,MAAAhB,EAAApP,EAAA3E,EAAAgU,GACA,KAAAe,4BAAA,CAAAA,CACA,CACAhE,SAAA,CACA,CACAiE,gBAAAC,CAAA,CAAAC,CAAA,EACA,6BACA,CACAC,QAAAF,CAAA,CAAAG,CAAA,EACA,6BACA,CACAC,UAAAJ,CAAA,CAAAG,CAAA,CAAAE,CAAA,CAAAC,CAAA,EACA,6BACA,CACA,EACAC,GAAA,cAAA1B,EACA/T,YAAAgU,CAAA,CAAApP,CAAA,CAAA3E,CAAA,CAAA0B,CAAA,CAAA+T,CAAA,EACA,MAAA1B,EAAApP,EAAA3E,EAAA,MACA,KAAA0V,MAAA,KAAAC,GAAAjU,EAAA,KAAAiD,EAAA,EACA,KAAA8Q,QAAA,CAAAA,EACA,KAAAG,uBAAA,KACA,CACA7E,SAAA,CACA,KAAA6E,uBAAA,GACA,KAAAA,uBAAA,CAAA7E,OAAA,GACA,KAAA6E,uBAAA,MAEA,CACA,IAAAC,kBAAA,CACA,SAAc,KAAAH,MAAA,CAAA5P,MAAA,CAAmB,EAEjCkP,gBAAAC,CAAA,CAAAC,CAAA,EACAA,EAAAve,IAAA,MAAA+e,MAAA,CACA,CACAP,QAAAF,CAAA,CAAAG,CAAA,EACA,YAAAU,0BAAA,CAAAb,GAAAE,OAAA,CAAAF,EACA,CACAI,UAAAJ,CAAA,CAAAG,CAAA,CAAAE,CAAA,CAAAC,CAAA,EACA,YAAAO,0BAAA,CAAAb,GAAAI,SAAA,CAAAJ,EAAAK,EAAAC,EACA,CACAO,2BAAAb,CAAA,EAKA,OAJA,KAAAW,uBAAA,GACA,KAAAA,uBAAA,KAAAG,GACA,KAAAf,eAAA,CAAAC,EAAA,KAAAW,uBAAA,GAEA,KAAAA,uBAAA,CAEA,EACAI,GAAA,cAAAlC,EACA/T,YAAAgU,CAAA,CAAApP,CAAA,CAAA3E,CAAA,CAAAgU,CAAA,CAAA1S,CAAA,EACA,MAAAyS,EAAApP,EAAA3E,EAAAgU,GACA,KAAA1S,QAAA,CAAAA,EAAAA,QAAA,CACA,KAAA2U,kBAAA,CAAA3U,EAAA2U,kBAAA,CACA,KAAAL,uBAAA,KACA,CACA7E,SAAA,CACA,KAAA6E,uBAAA,GACA,KAAAA,uBAAA,CAAA7E,OAAA,GACA,KAAA6E,uBAAA,MAEA,CACAZ,gBAAAC,CAAA,CAAAC,CAAA,EACA,QAAAgB,KAAA,KAAA5U,QAAA,CAEAiJ,EADA4L,OAAA,CAAAD,GACAlB,eAAA,CAAAC,EAAAC,EAEA,CACAC,QAAAF,CAAA,CAAAG,CAAA,EACA,YAAAU,0BAAA,CAAAb,GAAAE,OAAA,CAAAF,EACA,CACAI,UAAAJ,CAAA,CAAAG,CAAA,CAAAE,CAAA,CAAAC,CAAA,EACA,YAAAO,0BAAA,CAAAb,GAAAI,SAAA,CAAAJ,EAAAK,EAAAC,EACA,CACAO,2BAAAb,CAAA,EAKA,OAJA,KAAAW,uBAAA,GACA,KAAAA,uBAAA,KAAAG,GACA,KAAAf,eAAA,CAAAC,EAAA,KAAAW,uBAAA,GAEA,KAAAA,uBAAA,CAEA,EACAQ,GAAA,cAAAtC,EACA/T,YAAAgU,CAAA,CAAApP,CAAA,CAAA3E,CAAA,CAAAgU,CAAA,CAAAqC,CAAA,CAAAC,CAAA,CAAAvP,CAAA,CAAAwP,CAAA,CAAAC,CAAA,CAAAlV,CAAA,EACA,MAAAyS,EAAApP,EAAA3E,EAAAgU,GACA,KAAAyC,MAAA,KAAAd,GAAAU,EAAA,KAAA1R,EAAA,EACA,KAAA2R,aAAA,CAAAA,EACA,KAAAI,IAAA,KAAAf,GAAA5O,GAAA,QACA,KAAA4P,oBAAA,MAAAD,IAAA,CAAAE,iBAAA,CACA,KAAAL,WAAA,CAAAA,EACA,KAAAC,mBAAA,CAAAA,GAAA,GACA,KAAAlV,QAAA,CAAAA,EAAAA,QAAA,CACA,KAAA2U,kBAAA,CAAA3U,EAAA2U,kBAAA,CACA,KAAAL,uBAAA,KACA,CACA7E,SAAA,CACA,KAAA6E,uBAAA,GACA,KAAAA,uBAAA,CAAA7E,OAAA,GACA,KAAA6E,uBAAA,MAEA,CACA,IAAAiB,kBAAA,CACA,SAAc,KAAAJ,MAAA,CAAA3Q,MAAA,CAAmB,EAEjC,IAAAgR,gBAAA,CACA,SAAc,KAAAJ,IAAA,CAAA5Q,MAAA,CAAiB,EAE/BiR,iCAAAnC,CAAA,CAAArO,CAAA,EACA,YAAAmQ,IAAA,CAAAM,qBAAA,CAAApC,EAAArO,EACA,CACAyO,gBAAAC,CAAA,CAAAC,CAAA,EACAA,EAAAve,IAAA,MAAA8f,MAAA,CACA,CACAtB,QAAAF,CAAA,CAAAG,CAAA,EACA,YAAAU,0BAAA,CAAAb,EAAAG,GAAAD,OAAA,CAAAF,EACA,CACAI,UAAAJ,CAAA,CAAAG,CAAA,CAAAE,CAAA,CAAAC,CAAA,EACA,YAAAO,0BAAA,CAAAb,EAAAG,GAAAC,SAAA,CAAAJ,EAAAK,EAAAC,EACA,CACAO,2BAAAb,CAAA,CAAAG,CAAA,EACA,SAAAQ,uBAAA,EAEA,QAAAM,KADA,KAAAN,uBAAA,KAAAG,GACA,KAAAzU,QAAA,EAEAiJ,EADA4L,OAAA,CAAAD,GACAlB,eAAA,CAAAC,EAAA,KAAAW,uBAAA,CAEA,MAAAY,mBAAA,CACA,KAAAZ,uBAAA,CAAAjf,IAAA,MAAA+f,IAAA,CAAAE,iBAAA,MAAAF,IAAA,CAAA9J,KAAA,QAAA8J,IAAA,EAEA,KAAAd,uBAAA,CAAAqB,OAAA,MAAAP,IAAA,CAAAE,iBAAA,MAAAF,IAAA,CAAA9J,KAAA,QAAA8J,IAAA,CAEA,CAQA,OAPA,KAAAA,IAAA,CAAAE,iBAAA,GACA,KAAAJ,mBAAA,CACA,KAAAZ,uBAAA,CAAAsB,SAAA,MAAAtB,uBAAA,CAAAlf,MAAA,KAAA0e,GAEA,KAAAQ,uBAAA,CAAAsB,SAAA,GAAA9B,IAGA,KAAAQ,uBAAA,CAEA,EACAuB,GAAA,cAAArD,EACA/T,YAAAgU,CAAA,CAAApP,CAAA,CAAA3E,CAAA,CAAAgU,CAAA,CAAAqC,CAAA,CAAAC,CAAA,CAAAc,CAAA,CAAAC,CAAA,CAAA/V,CAAA,EACA,MAAAyS,EAAApP,EAAA3E,EAAAgU,GACA,KAAAyC,MAAA,KAAAd,GAAAU,EAAA,KAAA1R,EAAA,EACA,KAAA2R,aAAA,CAAAA,EACA,KAAAe,aAAA,CAAAA,EACA,KAAAD,MAAA,KAAAzB,GAAAyB,EAtLA,IAuLA,KAAAE,sBAAA,MAAAF,MAAA,CAAAR,iBAAA,CACA,KAAAtV,QAAA,CAAAA,EAAAA,QAAA,CACA,KAAA2U,kBAAA,CAAA3U,EAAA2U,kBAAA,CACA,KAAAL,uBAAA,MACA,KAAA2B,4BAAA,KACA,CACAxG,SAAA,CACA,KAAA6E,uBAAA,GACA,KAAAA,uBAAA,CAAA7E,OAAA,GACA,KAAA6E,uBAAA,OAEA,KAAA2B,4BAAA,GACA,KAAAA,4BAAA,CAAAxG,OAAA,GACA,KAAAwG,4BAAA,MAEA,CACA,IAAAV,kBAAA,CACA,SAAc,KAAAJ,MAAA,CAAA3Q,MAAA,CAAmB,EAEjC,IAAA0R,kBAAA,CACA,SAAc,KAAAJ,MAAA,CAAAtR,MAAA,CAAmB,EAEjC2R,mCAAA7C,CAAA,CAAArO,CAAA,EACA,YAAA6Q,MAAA,CAAAJ,qBAAA,CAAApC,EAAArO,EACA,CACAyO,gBAAAC,CAAA,CAAAC,CAAA,EACAA,EAAAve,IAAA,MAAA8f,MAAA,CACA,CACAtB,QAAAF,CAAA,CAAAG,CAAA,EACA,YAAAU,0BAAA,CAAAb,GAAAE,OAAA,CAAAF,EACA,CACAI,UAAAJ,CAAA,CAAAG,CAAA,CAAAE,CAAA,CAAAC,CAAA,EACA,YAAAO,0BAAA,CAAAb,GAAAI,SAAA,CAAAJ,EAAAK,EAAAC,EACA,CACAO,2BAAAb,CAAA,EACA,SAAAW,uBAAA,CAEA,QAAAM,KADA,KAAAN,uBAAA,KAAAG,GACA,KAAAzU,QAAA,EAEAiJ,EADA4L,OAAA,CAAAD,GACAlB,eAAA,CAAAC,EAAA,KAAAW,uBAAA,EAGA,YAAAA,uBAAA,CAEA8B,aAAAzC,CAAA,CAAAG,CAAA,EACA,YAAAuC,+BAAA,CAAA1C,EAAAG,GAAAD,OAAA,CAAAF,EACA,CACA2C,eAAA3C,CAAA,CAAAG,CAAA,CAAAE,CAAA,CAAAC,CAAA,EACA,YAAAoC,+BAAA,CAAA1C,EAAAG,GAAAC,SAAA,CAAAJ,EAAAK,EAAAC,EACA,CACAoC,gCAAA1C,CAAA,CAAAG,CAAA,EAQA,OAPA,KAAAmC,4BAAA,GACA,KAAAA,4BAAA,KAAAxB,GACA,KAAAwB,4BAAA,CAAA5gB,IAAA,MAAAygB,MAAA,CAAAR,iBAAA,MAAAQ,MAAA,CAAAxK,KAAA,QAAAwK,MAAA,GAEA,KAAAA,MAAA,CAAAR,iBAAA,EACA,KAAAW,4BAAA,CAAAL,SAAA,GAAA9B,GAAA,KAEA,KAAAmC,4BAAA,CAEA,EACAM,GAAA,MAAAC,EACA,OAAAC,kBAAAC,CAAA,CAAAjE,CAAA,CAAA/T,CAAA,CAAAgU,CAAA,CAAAe,CAAA,EACA,OAAAiD,EAAAC,YAAA,IACA,IAAAnD,GAAAf,EAAApP,EAAA3E,EAAAgU,EAAAe,GAEA,CACA,OAAAmD,kBAAAC,CAAA,CAAAH,CAAA,CAAAxW,CAAA,EAwDA,OAvDA2W,EAAAxT,EAAA,EACAqT,EAAAC,YAAA,KAEA,GADAE,EAAAxT,EAAA,CAAAA,EACAwT,EAAAzW,KAAA,CACA,WAAA8T,GACA2C,EAAAC,uBAAA,CACAD,EAAAxT,EAAA,CACAwT,EAAAnY,IAAA,CACAmY,EAAAzW,KAAA,CACAoW,EAAAO,gBAAA,CAAAF,EAAA1C,QAAA,CAAAuC,EAAAxW,IAGA,YAAA2W,EAAA9B,KAAA,EACA8B,EAAA3W,UAAA,EACAA,CAAAA,EAAAkE,EAAA,GAAwClE,EAAA2W,EAAA3W,UAAA,GAExC,IAAAF,EAAA6W,EAAA7W,QAAA,CAIA,OAHA,SAAAA,GAAA6W,EAAA5W,OAAA,EACAD,CAAAA,EAAA,EAA0BC,QAAA4W,EAAA5W,OAAA,EAAuB,EAEjD,IAAAyU,GACAmC,EAAAC,uBAAA,CACAD,EAAAxT,EAAA,CACAwT,EAAAnY,IAAA,CACAmY,EAAAnE,WAAA,CACA8D,EAAAQ,gBAAA,CAAAhX,EAAA0W,EAAAxW,GAEA,QACA,EAAA+W,KAAA,CACA,IAAApB,GACAgB,EAAAC,uBAAA,CACAD,EAAAxT,EAAA,CACAwT,EAAAnY,IAAA,CACAmY,EAAAnE,WAAA,CACAmE,EAAA9B,KAAA,CACAyB,EAAAO,gBAAA,CAAAF,EAAA7B,aAAA,EAAA6B,EAAA1C,QAAA,CAAAuC,EAAAxW,GACA2W,EAAAI,KAAA,CACAT,EAAAO,gBAAA,CAAAF,EAAAd,aAAA,EAAAc,EAAA1C,QAAA,CAAAuC,EAAAxW,GACAsW,EAAAQ,gBAAA,CAAAH,EAAA7W,QAAA,CAAA0W,EAAAxW,IAGA,IAAA4U,GACA+B,EAAAC,uBAAA,CACAD,EAAAxT,EAAA,CACAwT,EAAAnY,IAAA,CACAmY,EAAAnE,WAAA,CACAmE,EAAA9B,KAAA,CACAyB,EAAAO,gBAAA,CAAAF,EAAA7B,aAAA,EAAA6B,EAAA1C,QAAA,CAAAuC,EAAAxW,GACA2W,EAAApR,GAAA,CACA+Q,EAAAO,gBAAA,CAAAF,EAAA5B,WAAA,EAAA4B,EAAA1C,QAAA,CAAAuC,EAAAxW,GACA2W,EAAA3B,mBAAA,CACAsB,EAAAQ,gBAAA,CAAAH,EAAA7W,QAAA,CAAA0W,EAAAxW,GAEA,GAEA2W,EAAAxT,EAAA,CAEA,OAAA0T,iBAAA5C,CAAA,CAAAuC,CAAA,CAAAxW,CAAA,EACA,IAAA7L,EAAA,GACA,GAAA8f,EAAA,CACA,IAAA+C,EAAA,EACA,QAAAC,KAAAhD,EAAA,CACA,GAAAgD,4BAAAA,EACA,SAEA,IAAAC,EAAA5b,SAAA2b,EAAA,IACAC,EAAAF,GACAA,CAAAA,EAAAE,CAAA,CAEA,CACA,QAAAxiB,EAAA,EAAsBA,GAAAsiB,EAAuBtiB,IAC7CP,CAAA,CAAAO,EAAA,MAEA,QAAAuiB,KAAAhD,EAAA,CACA,GAAAgD,4BAAAA,EACA,SAEA,IAAAC,EAAA5b,SAAA2b,EAAA,IACA1D,EAAA,CACAU,CAAAA,CAAA,CAAAgD,EAAA,CAAAnX,QAAA,EACAyT,CAAAA,EAAA+C,EAAAI,iBAAA,CAAAzC,CAAA,CAAAgD,EAAA,CAAAT,EAAAxW,EAAA,EAEA7L,CAAA,CAAA+iB,EAAA,CAAAZ,EAAAC,iBAAA,CAAAC,EAAAvC,CAAA,CAAAgD,EAAA,CAAAL,uBAAA,CAAA3C,CAAA,CAAAgD,EAAA,CAAAzY,IAAA,CAAAyV,CAAA,CAAAgD,EAAA,CAAAzE,WAAA,CAAAe,EACA,CACA,CACA,OAAApf,CACA,CACA,OAAA2iB,iBAAAhX,CAAA,CAAA0W,CAAA,CAAAxW,CAAA,EACA,IAAA7L,EAAA,GACA,GAAA2L,EACA,QAAApL,EAAA,EAAAwS,EAAApH,EAAA5K,MAAA,CAA6CR,EAAAwS,EAASxS,IAAA,CACtD,IAAAggB,EAAA5U,CAAA,CAAApL,EAAA,CACAyiB,EAAA,GACA,GAAAzC,EAAA3U,OAAA,EACA,IAAAoQ,EAAAwB,EAAA+C,EAAA3U,OAAA,EACA,OAAAoQ,EAAAyB,IAAA,EACA,OACA,OACAuF,EAAAb,EAAAI,iBAAA,CAAA1W,CAAA,CAAA0U,EAAA3U,OAAA,EAAAyW,EAAAxW,GACA,KACA,QACA,IAAAoX,EAAApX,CAAA,CAAAmQ,EAAAR,QAAA,EACAyH,GACAD,CAAAA,EAAAb,EAAAI,iBAAA,CAAAU,EAAAZ,EAAAxW,EAAA,EAGA,KACA,QACA,OACA,IAAAqX,EAAAlH,EAAAtQ,SAAA,CACAyX,EAAAnH,IAAAA,EAAAyB,IAAA,CAAAzB,EAAAR,QAAA,MACA4H,EAAAf,EAAAgB,kBAAA,CAAAH,EAAArX,GACA,GAAAuX,GACA,GAAAD,EAAA,CACA,IAAAG,EAAAF,EAAAvX,UAAA,CAAAsX,EAAA,CACAG,GACAN,CAAAA,EAAAb,EAAAI,iBAAA,CAAAe,EAAAjB,EAAAe,EAAAvX,UAAA,EAGA,MACAmX,EAAAb,EAAAI,iBAAA,CAAAa,EAAAvX,UAAA,CAAAU,KAAA,CAAA8V,EAAAe,EAAAvX,UAAA,EAKA,CACA,MACAmX,EAAAb,EAAAI,iBAAA,CAAAhC,EAAA8B,EAAAxW,GAEA,GAAAmX,KAAAA,EAAA,CACA,IAAApO,EAAAyN,EAAA7B,OAAA,CAAAwC,GACAO,EAAA,GAMA,GALA3O,CAAAA,aAAAyL,IAAAzL,aAAA6L,IAAA7L,aAAA4M,EAAA,GACA5M,EAAA0L,kBAAA,EAAA1L,IAAAA,EAAAjJ,QAAA,CAAA5K,MAAA,EACAwiB,CAAAA,EAAA,IAGAA,EACA,SAEAvjB,EAAAgB,IAAA,CAAAgiB,EACA,CACA,CAEA,OACArX,SAAA3L,EACAsgB,mBAAA,CAAA3U,EAAAA,EAAA5K,MAAA,MAAAf,EAAAe,MAAA,CAEA,CACA,EACAif,GAAA,MAAAwD,EACApZ,YAAAqZ,CAAA,CAAAT,CAAA,EACA,GAAAS,EAAA,CACA,IAAA1Q,EAAA0Q,EAAA1iB,MAAA,CACA2iB,EAAA,EACAC,EAAA,GACAC,EAAA,GACA,QAAAC,EAAA,EAAwBA,EAAA9Q,EAAW8Q,IAEnC,GAAAC,OADAL,EAAAtJ,MAAA,CAAA0J,IAEAA,EAAA,EAAA9Q,EAAA,CACA,IAAAgR,EAAAN,EAAAtJ,MAAA,CAAA0J,EAAA,EACAE,CAAA,MAAAA,GACAJ,EAAA3iB,IAAA,CAAAyiB,EAAAvS,SAAA,CAAAwS,EAAAG,IACAF,EAAA3iB,IAAA,qBACA0iB,EAAAG,EAAA,GACcE,CAAAA,MAAAA,GAAAA,MAAAA,CAAA,GACdH,CAAAA,EAAA,IAEAC,GACA,CAGA,KAAAD,SAAA,CAAAA,EACAF,IAAAA,EACA,KAAAvT,MAAA,CAAAsT,GAEAE,EAAA3iB,IAAA,CAAAyiB,EAAAvS,SAAA,CAAAwS,EAAA3Q,IACA,KAAA5C,MAAA,CAAAwT,EAAAziB,IAAA,KAEA,MACA,KAAA0iB,SAAA,IACA,KAAAzT,MAAA,CAAAsT,CAEA,MAAAG,SAAA,CACA,KAAAI,YAAA,MAAAC,iBAAA,GAEA,KAAAD,YAAA,MAEA,KAAAhB,MAAA,CAAAA,EACA,KAAA/B,iBAAA,CAAAhD,EAAAxN,IAAA,MAAAN,MAAA,CACA,CACA8G,OAAA,CACA,WAAAuM,EAAA,KAAArT,MAAA,MAAA6S,MAAA,CACA,CACAzB,UAAA2C,CAAA,EACA,KAAA/T,MAAA,GAAA+T,IAGA,KAAA/T,MAAA,CAAA+T,EACA,KAAAN,SAAA,EACA,MAAAI,YAAA,MAAAC,iBAAA,IAEA,CACA5C,sBAAApC,CAAA,CAAArO,CAAA,EACA,IAAAuT,EAAAvT,EAAA7B,GAAA,IACAkQ,EAAA/N,SAAA,CAAAF,EAAAG,KAAA,CAAAH,EAAAI,GAAA,GAGA,OADA8M,EAAA1N,SAAA,GACA,KAAAL,MAAA,CAAAtJ,OAAA,CAAAqX,EAAA,CAAAnS,EAAAqY,IACAvS,EAAAsS,CAAA,CAAAhd,SAAAid,EAAA,UAEA,CACAH,mBAAA,CACA,IAIAJ,EAAA9Q,EAAA+Q,EAAAC,EAJAM,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,GAEA,IAAAX,EAAA,EAAA9Q,EAAA,KAAA5C,MAAA,CAAApP,MAAA,CAA4C8iB,EAAA9Q,EAAW8Q,IACvDC,EAAA,KAAA3T,MAAA,CAAAgK,MAAA,CAAA0J,GACAQ,CAAA,CAAAR,EAAA,CAAAC,EACAQ,CAAA,CAAAT,EAAA,CAAAC,EACAS,CAAA,CAAAV,EAAA,CAAAC,EACAU,CAAA,CAAAX,EAAA,CAAAC,EACA,OAAAA,GACAD,EAAA,EAAA9Q,IAEAgR,MADAA,CAAAA,EAAA,KAAA5T,MAAA,CAAAgK,MAAA,CAAA0J,EAAA,KAEAQ,CAAA,CAAAR,EAAA,OACAS,CAAA,CAAAT,EAAA,OACAU,CAAA,CAAAV,EAAA,OACAW,CAAA,CAAAX,EAAA,QACYE,MAAAA,GACZM,CAAA,CAAAR,EAAA,OACAS,CAAA,CAAAT,EAAA,OACAU,CAAA,CAAAV,EAAA,OACAW,CAAA,CAAAX,EAAA,SAEAQ,CAAA,CAAAR,EAAA,GAAAE,EACAO,CAAA,CAAAT,EAAA,GAAAE,EACAQ,CAAA,CAAAV,EAAA,GAAAE,EACAS,CAAA,CAAAX,EAAA,GAAAE,GAEAF,KAIA,OACAY,MAAAJ,EAAAnjB,IAAA,KACAwjB,MAAAJ,EAAApjB,IAAA,KACAyjB,MAAAJ,EAAArjB,IAAA,KACA0jB,MAAAJ,EAAAtjB,IAAA,IACA,CACA,CACA2jB,eAAAlF,CAAA,CAAAC,CAAA,SACA,KAAAgE,SAAA,OAAAI,YAAA,CAGArE,EACA,EACA,KAAAqE,YAAA,CAAAY,KAAA,CAEA,KAAAZ,YAAA,CAAAW,KAAA,CAGA,EACA,KAAAX,YAAA,CAAAU,KAAA,CAEA,KAAAV,YAAA,CAAAS,KAAA,CAZA,KAAAtU,MAAA,CAgBA,EACAiQ,GAAA,MACAhW,aAAA,CACA,KAAA0a,MAAA,IACA,KAAAC,WAAA,IACA,KAAAC,OAAA,MACA,KAAAhB,YAAA,EACAS,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,MAAA,IACA,CACA,CACAxJ,SAAA,CACA,KAAA6J,cAAA,EACA,CACAA,gBAAA,CACA,KAAAD,OAAA,GACA,KAAAA,OAAA,CAAA5J,OAAA,GACA,KAAA4J,OAAA,OAEA,KAAAhB,YAAA,CAAAS,KAAA,GACA,KAAAT,YAAA,CAAAS,KAAA,CAAArJ,OAAA,GACA,KAAA4I,YAAA,CAAAS,KAAA,OAEA,KAAAT,YAAA,CAAAU,KAAA,GACA,KAAAV,YAAA,CAAAU,KAAA,CAAAtJ,OAAA,GACA,KAAA4I,YAAA,CAAAU,KAAA,OAEA,KAAAV,YAAA,CAAAW,KAAA,GACA,KAAAX,YAAA,CAAAW,KAAA,CAAAvJ,OAAA,GACA,KAAA4I,YAAA,CAAAW,KAAA,OAEA,KAAAX,YAAA,CAAAY,KAAA,GACA,KAAAZ,YAAA,CAAAY,KAAA,CAAAxJ,OAAA,GACA,KAAA4I,YAAA,CAAAY,KAAA,MAEA,CACA5jB,KAAA+U,CAAA,EACA,KAAA+O,MAAA,CAAA9jB,IAAA,CAAA+U,GACA,KAAAgP,WAAA,MAAAA,WAAA,EAAAhP,EAAA6N,SAAA,CAEAtC,QAAAvL,CAAA,EACA,KAAA+O,MAAA,CAAAxD,OAAA,CAAAvL,GACA,KAAAgP,WAAA,MAAAA,WAAA,EAAAhP,EAAA6N,SAAA,CAEA7iB,QAAA,CACA,YAAA+jB,MAAA,CAAA/jB,MAAA,CAEAwgB,UAAA1Q,CAAA,CAAAqT,CAAA,EACA,KAAAY,MAAA,CAAAjU,EAAA,CAAAV,MAAA,GAAA+T,IACA,KAAAe,cAAA,GACA,KAAAH,MAAA,CAAAjU,EAAA,CAAA0Q,SAAA,CAAA2C,GAEA,CACA1E,QAAA0F,CAAA,EACA,SAAAF,OAAA,EACA,IAAAG,EAAA,KAAAL,MAAA,CAAA/V,GAAA,IAAAhP,EAAAoQ,MAAA,CACA,MAAA6U,OAAA,KAAAI,GAAAF,EAAAC,EAAA,KAAAL,MAAA,CAAA/V,GAAA,IAAAhP,EAAAijB,MAAA,EACA,CACA,YAAAgC,OAAA,CAEAtF,UAAAwF,CAAA,CAAAvF,CAAA,CAAAC,CAAA,SACA,KAAAmF,WAAA,CAGApF,EACA,GACA,KAAAqE,YAAA,CAAAY,KAAA,EACA,MAAAZ,YAAA,CAAAY,KAAA,MAAAS,eAAA,CAAAH,EAAAvF,EAAAC,EAAA,EAEA,KAAAoE,YAAA,CAAAY,KAAA,GAEA,KAAAZ,YAAA,CAAAW,KAAA,EACA,MAAAX,YAAA,CAAAW,KAAA,MAAAU,eAAA,CAAAH,EAAAvF,EAAAC,EAAA,EAEA,KAAAoE,YAAA,CAAAW,KAAA,EAGA,GACA,KAAAX,YAAA,CAAAU,KAAA,EACA,MAAAV,YAAA,CAAAU,KAAA,MAAAW,eAAA,CAAAH,EAAAvF,EAAAC,EAAA,EAEA,KAAAoE,YAAA,CAAAU,KAAA,GAEA,KAAAV,YAAA,CAAAS,KAAA,EACA,MAAAT,YAAA,CAAAS,KAAA,MAAAY,eAAA,CAAAH,EAAAvF,EAAAC,EAAA,EAEA,KAAAoE,YAAA,CAAAS,KAAA,EAxBA,KAAAjF,OAAA,CAAA0F,EA4BA,CACAG,gBAAAH,CAAA,CAAAvF,CAAA,CAAAC,CAAA,EAEA,WAAAwF,GAAAF,EADA,KAAAJ,MAAA,CAAA/V,GAAA,IAAAhP,EAAA8kB,cAAA,CAAAlF,EAAAC,IACA,KAAAkF,MAAA,CAAA/V,GAAA,IAAAhP,EAAAijB,MAAA,EACA,CACA,EACAoC,GAAA,MACAhb,YAAA8a,CAAA,CAAAC,CAAA,CAAAjN,CAAA,EACA,KAAAiN,OAAA,CAAAA,EACA,KAAAjN,KAAA,CAAAA,EACA,KAAAoN,OAAA,CAAAJ,EAAAK,iBAAA,CAAAJ,EACA,CACA/J,SAAA,CACA,wBAAAkK,OAAA,CAAAlK,OAAA,EACA,KAAAkK,OAAA,CAAAlK,OAAA,EAEA,CACA3U,UAAA,CACA,IAAAzG,EAAA,GACA,QAAAO,EAAA,EAAAwS,EAAA,KAAAmF,KAAA,CAAAnX,MAAA,CAA6CR,EAAAwS,EAASxS,IACtDP,EAAAgB,IAAA,cAAAkX,KAAA,CAAA3X,EAAA,WAAA4kB,OAAA,CAAA5kB,EAAA,EAEA,OAAAP,EAAAkB,IAAA,MACA,CACAskB,kBAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,IAAA1U,EAAA,KAAAqU,OAAA,CAAAE,iBAAA,CAAAC,EAAAC,EAAAC,UACA,EAGA,CACA3C,OAAA,KAAA9K,KAAA,CAAAjH,EAAAJ,KAAA,EACAD,eAAAK,EAAAL,cAAA,EAJA,IAMA,CACA,EAGAgV,GAAA,MACAxb,YAAAuO,CAAA,CAAAE,CAAA,EACA,KAAAF,UAAA,CAAAA,EACA,KAAAE,SAAA,CAAAA,CACA,CACA,EACAgN,GAAA,MAAAA,EACAzb,YAAA0b,CAAA,CAAAC,CAAA,EACA,KAAAC,wBAAA,KAAAjU,EAAA,GAGA,IAAA6T,GAFA,KAAAK,gBAAA,CAAAva,GACA,KAAAwa,oBAAA,CAAAxa,KAGA,KAAAya,kBAAA,KAAAP,GAAAE,EAAA,GACA,KAAAM,yBAAA,KAAAC,GAAA5kB,OAAA6kB,OAAA,CAAAP,GAAA,IACA,CACAQ,sBAAA,CACA,YAAAJ,kBAAA,CAEAK,wBAAA9a,CAAA,SACA,OAAAA,EACAma,EAAAY,oBAAA,CAEA,KAAAT,wBAAA,CAAAngB,GAAA,CAAA6F,EACA,CAKAua,iBAAA/S,CAAA,EACA,YAAAkT,yBAAA,CAAAra,KAAA,CAAAmH,IAAA,CACA,CACAgT,qBAAAxa,CAAA,EACA,IAAAgb,EAAAhb,EAAAK,KAAA,CAAA8Z,EAAAc,0BAAA,EACA,IAAAD,EACA,SAEA,OAAAA,CAAA,KACA,cACA,QACA,cACA,QACA,aACA,QACA,qBACA,QACA,CACA,wDACA,CACA,CACAb,CAAAA,GAAAY,oBAAA,KAAAb,GAAA,KACAC,GAAAc,0BAAA,6CAEA,IAAAN,GAAA,MACAjc,YAAAkT,CAAA,EACA,GAAAA,IAAAA,EAAAvc,MAAA,CACA,KAAAuc,MAAA,MACA,KAAAsJ,YAAA,UACM,CACN,KAAAtJ,MAAA,KAAApL,IAAAoL,GACA,IAAAuJ,EAAAvJ,EAAAvO,GAAA,CACA,EAAArD,EAAAoG,EAAA,GAAAD,EAAAnG,IAEAmb,EAAA9S,IAAA,GACA8S,EAAAlT,OAAA,GACA,KAAAiT,YAAA,QACA,MAAcC,EAAA3lB,IAAA,QAA0B,WACxC,GAEA,CACA,CACA6K,MAAAmH,CAAA,EACA,SAAA0T,YAAA,CACA,OAEA,IAAAF,EAAAxT,EAAAnH,KAAA,MAAA6a,YAAA,EACA,GAAAF,EAGA,YAAApJ,MAAA,CAAAzX,GAAA,CAAA6gB,CAAA,IACA,CACA,CAIA,MAA6B,IAAPI,GAA6BA,EAAOC,GAAA,uBAK1D,IAAAC,GAAA,MACA5c,YAAA6c,CAAA,CAAAC,CAAA,EACA,KAAAD,KAAA,CAAAA,EACA,KAAAC,YAAA,CAAAA,CACA,CACA,EACA,SAAAC,GAAA7H,CAAA,CAAAL,CAAA,CAAAmI,CAAA,CAAAC,CAAA,CAAAJ,CAAA,CAAAK,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,IAAAC,EAAAxI,EAAAyI,OAAA,CAAA3mB,MAAA,CACA4mB,EAAA,GACAC,EAAA,GACA,GAAAL,EAAA,CACA,IAAAM,EAAAC,SAiOAxI,CAAA,CAAAL,CAAA,CAAAmI,CAAA,CAAAC,CAAA,CAAAJ,CAAA,CAAAK,CAAA,EACA,IAAAM,EAAAX,EAAAc,oBAAA,MACAC,EAAA,GACA,QAAAta,EAAAuZ,EAAyBvZ,EAAMA,EAAAA,EAAAua,GAAA,IAC/B,IAAAC,EAAAxa,EAAA8S,OAAA,CAAAlB,GACA4I,aAAA1G,IACAwG,EAAAhnB,IAAA,EACA4T,KAAAsT,EACAjB,MAAAvZ,CACA,EAEA,CACA,QAAAya,EAAAH,EAAAC,GAAA,GAAyCE,EAAWA,EAAAH,EAAAC,GAAA,QAoHpDrT,EAAA6K,EAAAE,EAAAC,EAnHA,IAAYwI,YAAAA,CAAA,CAAAC,YAAAA,CAAA,GAmHZzT,EAnHuCuT,EAAAvT,IAAA,CAmHvC6K,EAnHuC0I,EAAAlB,KAAA,CAAAqB,OAAA,CAmHvC3I,EAnHuCyH,EAmHvCxH,EAnHuCyH,IAAAO,EA0HvC,CAAWQ,YADXxT,EAAAqN,cAAA,CAzHuC3C,EAyHvCG,EAAAE,EAAAC,GACWyI,YAAA,IAzHXroB,EAAAooB,EAAA5C,iBAAA,CAAAvG,EAAAoI,EAAAgB,GAKA,GAAAroB,EAAA,CAEA,GAAAuoB,KADAvoB,EAAAgjB,MAAA,CACA,CACAiE,EAAAkB,EAAAlB,KAAA,CAAAgB,GAAA,GACA,KACA,CACAjoB,EAAA4Q,cAAA,EAAA5Q,EAAA4Q,cAAA,CAAA7P,MAAA,GACAumB,EAAAkB,OAAA,CAAAL,EAAAlB,KAAA,CAAAjnB,EAAA4Q,cAAA,IAAAO,KAAA,EACAsX,GAAAnJ,EAAAL,EAAAmI,EAAAe,EAAAlB,KAAA,CAAAK,EAAAa,EAAAvT,IAAA,CAAA8M,aAAA,CAAA1hB,EAAA4Q,cAAA,EACA0W,EAAAkB,OAAA,CAAAL,EAAAlB,KAAA,CAAAjnB,EAAA4Q,cAAA,IAAAQ,GAAA,EACAwW,EAAA5nB,EAAA4Q,cAAA,IAAAQ,GAAA,CACApR,EAAA4Q,cAAA,IAAAQ,GAAA,CAAAiW,IACAA,EAAArnB,EAAA4Q,cAAA,IAAAQ,GAAA,CACAgW,EAAA,IAGA,KAAM,CAINH,EAAAkB,EAAAlB,KAAA,CAAAgB,GAAA,GACA,KACA,CACA,CACA,OAAWhB,MAAAA,EAAAI,QAAAA,EAAAO,eAAAA,EAAAR,YAAAA,CAAA,CACX,EA5QA9H,EACAL,EACAmI,EACAC,EACAJ,EACAK,GAEAL,EAAAY,EAAAZ,KAAA,CACAI,EAAAQ,EAAAR,OAAA,CACAD,EAAAS,EAAAT,WAAA,CACAQ,EAAAC,EAAAD,cAAA,CAEA,IAAAc,EAAAC,KAAAC,GAAA,GACA,MAAAjB,GAAA,CACA,GAAAH,IAAAA,GAEAqB,KADAD,GAAA,GAAAF,EACAlB,EACA,WAAAR,GAAAC,EAAA,KAGA6B,WAUA,IAAA9oB,EAAA+oB,SA+OAzJ,CAAA,CAAAL,CAAA,CAAAmI,CAAA,CAAAC,CAAA,CAAAJ,CAAA,CAAAW,CAAA,EACA,IAAAoB,EAAAC,SAmBA3J,CAAA,CAAAL,CAAA,CAAAmI,CAAA,CAAAC,CAAA,CAAAJ,CAAA,CAAAW,CAAA,EAEA,IAAUQ,YAAAA,CAAA,CAAAC,YAAAA,CAAA,EAA2Ba,GADrCjC,EAAAzG,OAAA,CAAAlB,GACqCA,EAAA2H,EAAAqB,OAAA,CAAAlB,EAAAC,IAAAO,GACrC5nB,EAAAooB,EAAA5C,iBAAA,CAAAvG,EAAAoI,EAAAgB,UACA,EACA,CACAzX,eAAA5Q,EAAA4Q,cAAA,CACA2X,cAAAvoB,EAAAgjB,MAAA,EAGA,IACA,EA9BA1D,EAAAL,EAAAmI,EAAAC,EAAAJ,EAAAW,GACA1K,EAAAoC,EAAA6J,aAAA,GACA,GAAAjM,IAAAA,EAAAnc,MAAA,CACA,OAAAioB,EAEA,IAAAI,EAAAC,SA0BAnM,CAAA,CAAAoC,CAAA,CAAAL,CAAA,CAAAmI,CAAA,CAAAC,CAAA,CAAAJ,CAAA,CAAAW,CAAA,EACA,IAEA0B,EAFAC,EAAAriB,OAAAsiB,SAAA,CACAC,EAAA,KAEAC,EAAA,EACA1W,EAAAiU,EAAA0C,qBAAA,CAAAC,aAAA,GACA,QAAArpB,EAAA,EAAAwS,EAAAmK,EAAAnc,MAAA,CAA2CR,EAAAwS,EAASxS,IAAA,CACpD,IAAA4c,EAAAD,CAAA,CAAA3c,EAAA,CACA,IAAA4c,EAAA/C,OAAA,CAAApH,GACA,SAGA,IAAYoV,YAAAA,CAAA,CAAAC,YAAAA,CAAA,EAA2Ba,GADvC5J,EAAAkB,OAAA,CAAArD,EAAA6F,MAAA,EACuC1D,EAAA,KAAA8H,EAAAC,IAAAO,GACvCoB,EAAAZ,EAAA5C,iBAAA,CAAAvG,EAAAoI,EAAAgB,GACA,IAAAW,EACA,SAMA,IAAAa,EAAAb,EAAApY,cAAA,IAAAO,KAAA,CACA,IAAA0Y,CAAAA,GAAAN,CAAA,IAGAA,EAAAM,EACAJ,EAAAT,EAAApY,cAAA,CACA0Y,EAAAN,EAAAhG,MAAA,CACA0G,EAAAvM,EAAAjD,QAAA,CACAqP,IAAAlC,GACA,KAEA,QACA,EACA,CACAyC,cAAAJ,KAAAA,EACA9Y,eAAA6Y,EACAlB,cAAAe,CACA,EAEA,IACA,EAnEApM,EAAAoC,EAAAL,EAAAmI,EAAAC,EAAAJ,EAAAW,GACA,IAAAwB,EACA,OAAAJ,EAEA,IAAAA,EACA,OAAAI,EAEA,IAAAW,EAAAf,EAAApY,cAAA,IAAAO,KAAA,CACA6Y,EAAAZ,EAAAxY,cAAA,IAAAO,KAAA,QACA,EAAA4Y,GAAAX,EAAAU,aAAA,EAAAE,IAAAD,EACAX,EAEAJ,CACA,EAjQA1J,EACAL,EACAmI,EACAC,EACAJ,EACAW,GAEA,IAAA5nB,EAAA,CACAsnB,EAAAkB,OAAA,CAAAvB,EAAAQ,GACAE,EAAA,GACA,MACA,CACA,IAAA/W,EAAA5Q,EAAA4Q,cAAA,CACA2X,EAAAvoB,EAAAuoB,aAAA,CACA0B,EAAArZ,EAAAA,GAAAA,EAAA7P,MAAA,IAAA6P,CAAA,IAAAQ,GAAA,CAAAiW,EACA,GAAAkB,KAAAA,EAAA,CACA,IAAA2B,EAAAjD,EAAAzG,OAAA,CAAAlB,GAMAgI,EAAAkB,OAAA,CAAAvB,EAAArW,CAAA,IAAAO,KAAA,EACA8V,EAAAA,EAAAkD,yBAAA,CAAAlD,EAAAmD,cAAA,EACA3B,GACAnJ,EACAL,EACAmI,EACAH,EACAK,EACA4C,EAAAtJ,WAAA,CACAhQ,GAEA0W,EAAAkB,OAAA,CAAAvB,EAAArW,CAAA,IAAAQ,GAAA,EACA,IAAAiZ,EAAApD,EAGA,GAFAA,EAAAA,EAAAzR,MAAA,CACAoS,EAAAyC,EAAAC,YAAA,GACA,CAAAL,GAAAI,EAAAE,WAAA,KAAAlD,EAAA,CAMAJ,EAAAoD,EACA/C,EAAAkB,OAAA,CAAAvB,EAAAQ,GACAE,EAAA,GACA,MACA,CACA,KAAM,CACN,IAAA6C,EAAAlL,EAAAkB,OAAA,CAAA+H,GACAjB,EAAAkB,OAAA,CAAAvB,EAAArW,CAAA,IAAAO,KAAA,EACA,IAAAsZ,EAAAxD,EACAvb,EAAA8e,EAAAxL,OAAA,CAAAC,EAAAyI,OAAA,CAAA9W,GACAwZ,EAAAnD,EAAA0C,qBAAA,CAAAe,cAAA,CACAhf,EACA4T,GAWA,GATA2H,EAAAA,EAAAjmB,IAAA,CACAunB,EACAlB,EACAO,EACAhX,CAAA,IAAAQ,GAAA,GAAAqW,EACA,KACA2C,EACAA,GAEAI,aAAA/J,GAAA,CAOAgI,GACAnJ,EACAL,EACAmI,EACAH,EACAK,EACAqD,EAAAhK,aAAA,CACA/P,GAEA0W,EAAAkB,OAAA,CAAAvB,EAAArW,CAAA,IAAAQ,GAAA,EACAwW,EAAAhX,CAAA,IAAAQ,GAAA,CACA,IAAAiN,EAAAsM,EAAAzL,cAAA,CACAD,EAAAyI,OAAA,CACA9W,GAEA+Y,EAAAS,EAAAM,cAAA,CACArM,EACAiB,GAWA,GATA2H,EAAAA,EAAAkD,yBAAA,CAAAR,GACAgB,EAAA3J,oBAAA,EACAiG,CAAAA,EAAAA,EAAA2D,WAAA,CACAD,EAAAvJ,gCAAA,CACAnC,EAAAyI,OAAA,CACA9W,GAEA,EAEA,CAAAqZ,GAAAQ,EAAAI,aAAA,CAAA5D,GAAA,CAMAA,EAAAA,EAAAgB,GAAA,GACAX,EAAAkB,OAAA,CAAAvB,EAAAQ,GACAE,EAAA,GACA,MACA,CACA,MAAQ,GAAA6C,aAAAhJ,GAAA,CAKRiH,GACAnJ,EACAL,EACAmI,EACAH,EACAK,EACAqD,EAAAhK,aAAA,CACA/P,GAEA0W,EAAAkB,OAAA,CAAAvB,EAAArW,CAAA,IAAAQ,GAAA,EACAwW,EAAAhX,CAAA,IAAAQ,GAAA,CACA,IAAAiN,EAAAsM,EAAAzL,cAAA,CACAD,EAAAyI,OAAA,CACA9W,GAEA+Y,EAAAS,EAAAM,cAAA,CACArM,EACAiB,GAWA,GATA2H,EAAAA,EAAAkD,yBAAA,CAAAR,GACAgB,EAAAhJ,sBAAA,EACAsF,CAAAA,EAAAA,EAAA2D,WAAA,CACAD,EAAA7I,kCAAA,CACA7C,EAAAyI,OAAA,CACA9W,GAEA,EAEA,CAAAqZ,GAAAQ,EAAAI,aAAA,CAAA5D,GAAA,CAMAA,EAAAA,EAAAgB,GAAA,GACAX,EAAAkB,OAAA,CAAAvB,EAAAQ,GACAE,EAAA,GACA,MACA,CACA,MAkBA,GAXAc,GACAnJ,EACAL,EACAmI,EACAH,EACAK,EACAwD,EAAAhL,QAAA,CACAlP,GAEA0W,EAAAkB,OAAA,CAAAvB,EAAArW,CAAA,IAAAQ,GAAA,EACA6V,EAAAA,EAAAgB,GAAA,GACA,CAAAgC,EAAA,CAMAhD,EAAAA,EAAA8D,OAAA,GACAzD,EAAAkB,OAAA,CAAAvB,EAAAQ,GACAE,EAAA,GACA,MACA,CAEA,CACA/W,CAAA,IAAAQ,GAAA,CAAAiW,IACAA,EAAAzW,CAAA,IAAAQ,GAAA,CACAgW,EAAA,GAEA,GAzMA,CACA,WAAAJ,GAAAC,EAAA,GAyMA,CAwHA,SAAAiC,GAAAtU,CAAA,CAAA0K,CAAA,CAAAG,CAAA,CAAAE,CAAA,CAAAC,CAAA,EAOA,OAAWwI,YADXxT,EAAA8K,SAAA,CAAAJ,EAAAG,EAAAE,EAAAC,GACWyI,YAAA,EACX,CAoBA,SAAAI,GAAAnJ,CAAA,CAAAL,CAAA,CAAAmI,CAAA,CAAAH,CAAA,CAAAK,CAAA,CAAAxH,CAAA,CAAAlP,CAAA,EACA,GAAAkP,IAAAA,EAAA/e,MAAA,CACA,OAEA,IAAAiqB,EAAA/L,EAAAyI,OAAA,CACA3U,EAAAlP,KAAAC,GAAA,CAAAgc,EAAA/e,MAAA,CAAA6P,EAAA7P,MAAA,EACAkqB,EAAA,GACAC,EAAAta,CAAA,IAAAQ,GAAA,CACA,QAAA7Q,EAAA,EAAkBA,EAAAwS,EAASxS,IAAA,CAC3B,IAAA4qB,EAAArL,CAAA,CAAAvf,EAAA,CACA,GAAA4qB,OAAAA,EACA,SAEA,IAAAC,EAAAxa,CAAA,CAAArQ,EAAA,CACA,GAAA6qB,IAAAA,EAAArqB,MAAA,CACA,SAEA,GAAAqqB,EAAAja,KAAA,CAAA+Z,EACA,MAEA,KAAAD,EAAAlqB,MAAA,IAAAkqB,CAAA,CAAAA,EAAAlqB,MAAA,IAAAsqB,MAAA,EAAAD,EAAAja,KAAA,EACAmW,EAAAgE,iBAAA,CAAAL,CAAA,CAAAA,EAAAlqB,MAAA,IAAAiS,MAAA,CAAAiY,CAAA,CAAAA,EAAAlqB,MAAA,IAAAsqB,MAAA,EACAJ,EAAAhD,GAAA,GAOA,GALAgD,EAAAlqB,MAAA,GACAumB,EAAAgE,iBAAA,CAAAL,CAAA,CAAAA,EAAAlqB,MAAA,IAAAiS,MAAA,CAAAoY,EAAAja,KAAA,EAEAmW,EAAAkB,OAAA,CAAAvB,EAAAmE,EAAAja,KAAA,EAEAga,EAAA/L,4BAAA,EACA,IAAA1T,EAAAyf,EAAAnM,OAAA,CAAAgM,EAAApa,GACAwZ,EAAAnD,EAAA0C,qBAAA,CAAAe,cAAA,CAAAhf,EAAA4T,GACAjB,EAAA8M,EAAAjM,cAAA,CAAA8L,EAAApa,GACA+Y,EAAAS,EAAAM,cAAA,CAAArM,EAAAiB,GACAiM,EAAAtE,EAAAjmB,IAAA,CAAAmqB,EAAA/L,4BAAA,CAAAgM,EAAAja,KAAA,YAAAiZ,EAAAT,GACA6B,EAAAlM,EAAAmM,gBAAA,CAAAT,EAAA9Z,SAAA,GAAAka,EAAAha,GAAA,GACA+V,GACA7H,EACAkM,EACApE,GAAAgE,IAAAA,EAAAja,KAAA,CACAia,EAAAja,KAAA,CACAoa,EACAjE,EACA,GAEA,GAEApM,EAAAsQ,GACA,QACA,CACA,IAAAE,EAAAP,EAAAnM,OAAA,CAAAgM,EAAApa,GACA,GAAA8a,OAAAA,EAAA,CAEA,IAAAC,EAAAxV,CADA8U,EAAAlqB,MAAA,GAAAkqB,CAAA,CAAAA,EAAAlqB,MAAA,IAAAiS,MAAA,CAAAiU,EAAA0C,qBAAA,EACAe,cAAA,CAAAgB,EAAApM,GACA2L,EAAAjqB,IAAA,KAAA4qB,GAAAD,EAAAP,EAAAha,GAAA,EACA,CACA,CACA,KAAA6Z,EAAAlqB,MAAA,IACAumB,EAAAgE,iBAAA,CAAAL,CAAA,CAAAA,EAAAlqB,MAAA,IAAAiS,MAAA,CAAAiY,CAAA,CAAAA,EAAAlqB,MAAA,IAAAsqB,MAAA,EACAJ,EAAAhD,GAAA,EAEA,CACA,IAAA2D,GAAA,MACAxhB,YAAA4I,CAAA,CAAAqY,CAAA,EACA,KAAArY,MAAA,CAAAA,EACA,KAAAqY,MAAA,CAAAA,CACA,CACA,EAeA,SAAAQ,GAAA5a,CAAA,CAAAyI,CAAA,CAAA9E,CAAA,CAAAkX,CAAA,CAAAxM,CAAA,EACA,IAAA3E,EAAAlB,EAAAC,EAAAqS,IACA/I,EAAAd,GAAAK,iBAAA,CAAA3N,EAAAkX,EAAAxM,EAAAzT,UAAA,EACA,QAAAuO,KAAAO,EACA1J,EAAAjQ,IAAA,EACAgrB,cAAAtS,EACAU,QAAAA,EAAAA,OAAA,CACA4I,OAAAA,EACA1D,QAAAA,EACApF,SAAAE,EAAAF,QAAA,EAGA,CACA,SAAA6R,GAAAE,CAAA,CAAAjZ,CAAA,EACA,GAAAA,EAAAjS,MAAA,CAAAkrB,EAAAlrB,MAAA,CACA,SAEA,IAAAyP,EAAA,EACA,OAAAyb,EAAAjR,KAAA,KACA,QAAAza,EAAAiQ,EAA4BjQ,EAAAyS,EAAAjS,MAAA,CAAmBR,IAC/C,GAAA2rB,SAQAC,CAAA,CAAAzgB,CAAA,EACA,IAAAygB,EACA,SAEA,GAAAA,IAAAzgB,EACA,SAEA,IAAAqH,EAAArH,EAAA3K,MAAA,CACA,OAAAorB,EAAAprB,MAAA,CAAAgS,GAAAoZ,EAAA/kB,MAAA,GAAA2L,KAAArH,GAAAygB,MAAAA,CAAA,CAAApZ,EAAA,EAhBAC,CAAA,CAAAzS,EAAA,CAAA6rB,GAEA,OADA5b,EAAAjQ,EAAA,EACA,GAGA,QACA,EACA,CAWA,IAAA8rB,GAAA,MACAjiB,YAAAkiB,CAAA,CAAAhN,CAAA,CAAAiN,CAAA,CAAAxG,CAAA,CAAAyG,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EAgBA,GAfA,KAAAL,cAAA,CAAAA,EACA,KAAAG,wBAAA,CAAAA,EACA,KAAAE,QAAA,CAAAA,EACA,KAAAC,6BAAA,KAliBA/G,GAmiBA0G,EACAxG,GAEA,KAAA8G,OAAA,IACA,KAAAC,WAAA,GACA,KAAAC,YAAA,QACA,KAAAC,iBAAA,IACA,KAAAC,kBAAA,CAAAP,EACA,KAAAQ,QAAA,CAAAC,GAAA7N,EAAA,MACA,KAAA8N,WAAA,MACA,KAAAC,kBAAA,IACAb,EACA,QAAA9S,KAAAjY,OAAA6rB,IAAA,CAAAd,GAEA,QAAApS,KADAX,EAAAC,EAAAqS,IAEA,KAAAsB,kBAAA,CAAArsB,IAAA,EACAoZ,QAAAA,EAAAA,OAAA,CACApX,KAAAwpB,CAAA,CAAA9S,EAAA,EAKA,CACA,IAAA6T,eAAA,CACA,YAAAN,kBAAA,CAEA7R,SAAA,CACA,QAAAxG,KAAA,KAAAmY,YAAA,CACAnY,GACAA,EAAAwG,OAAA,EAGA,CACAmK,kBAAAtV,CAAA,EACA,YAAA0c,QAAA,CAAApH,iBAAA,CAAAtV,EACA,CACAwb,iBAAAxb,CAAA,EACA,YAAA0c,QAAA,CAAAlB,gBAAA,CAAAxb,EACA,CACAud,oBAAAta,CAAA,EACA,YAAA0Z,6BAAA,CAAApG,uBAAA,CAAAtT,EACA,CACAua,oBAAA,CAYA,IAAAxc,EAAA,GACAvF,EAAA,KAAA4gB,cAAA,CACAhN,EAAAoN,CAbA,CACA5P,OAAA,GACA,SAAAwP,cAAA,CACA,KAAAY,QAAA,CAEA,KAAA7J,kBAAA,CAAAqK,GAEAxQ,WAAA,GACA,KAAA+P,kBAAA,CAAA/P,UAAA,CAAAwQ,EAEA,GAGA5Q,MAAA,CAAApR,GACA,GAAA4T,EAAA,CACA,IAAAqO,EAAArO,EAAApC,UAAA,CACA,GAAAyQ,EACA,QAAAC,KAAAD,EACA9B,GACA5a,EACA2c,EACAD,CAAA,CAAAC,EAAA,CACA,KACAtO,GAIA,IAAAuO,EAAA,KAAAZ,kBAAA,CAAA/P,UAAA,CAAAxR,GACAmiB,GACAA,EAAA3d,OAAA,KACA,IAAA4d,EAAA,KAAAzK,kBAAA,CAAA0K,GACA,GAAAD,EAAA,CACA,IAAApU,EAAAoU,EAAAE,iBAAA,CACAtU,GACAmS,GACA5a,EACAyI,EACAoU,EACA,KACAA,EAGA,CACA,EAEA,CAEA,OADA7c,EAAA8C,IAAA,EAAAka,EAAAC,IAAAD,EAAA/T,QAAA,CAAAgU,EAAAhU,QAAA,EACAjJ,CACA,CACAkY,eAAA,CAIA,OAHA,YAAAiE,WAAA,EACA,MAAAA,WAAA,MAAAK,kBAAA,IAEA,KAAAL,WAAA,CAEA9K,aAAA6L,CAAA,EACA,IAAAnf,EAAA,OAAA8d,WAAA,CACA7b,EAAAkd,EAAAnf,GAEA,OADA,KAAA+d,YAAA,CAAA/d,EAAA,CAAAiC,EACAA,CACA,CACAuP,QAAAwC,CAAA,EACA,YAAA+J,YAAA,CAAA/J,EAAA,CAEAK,mBAAA3X,CAAA,CAAAG,CAAA,EACA,QAAAmhB,iBAAA,CAAAthB,EAAA,CACA,YAAAshB,iBAAA,CAAAthB,EAAA,CACM,QAAAuhB,kBAAA,EACN,IAAAmB,EAAA,KAAAnB,kBAAA,CAAAnQ,MAAA,CAAApR,GACA,GAAA0iB,EAKA,OAJA,KAAApB,iBAAA,CAAAthB,EAAA,CAAAyhB,GACAiB,EACAviB,GAAAA,EAAAW,KAAA,EAEA,KAAAwgB,iBAAA,CAAAthB,EAAA,CAIA,CACA2iB,aAAApP,CAAA,CAAAqP,CAAA,CAAA9G,EAAA,GACA,IAAAxnB,EAAA,KAAAuuB,SAAA,CAAAtP,EAAAqP,EAAA,GAAA9G,GACA,OACAgH,OAAAxuB,EAAAsnB,UAAA,CAAAmH,SAAA,CAAAzuB,EAAA0uB,SAAA,CAAA1uB,EAAAynB,UAAA,EACAiH,UAAA1uB,EAAA0uB,SAAA,CACAxH,aAAAlnB,EAAAknB,YAAA,CAEA,CACAyH,cAAA1P,CAAA,CAAAqP,CAAA,CAAA9G,EAAA,GACA,IAAAxnB,EAAA,KAAAuuB,SAAA,CAAAtP,EAAAqP,EAAA,GAAA9G,GACA,OACAgH,OAAAxuB,EAAAsnB,UAAA,CAAAsH,eAAA,CAAA5uB,EAAA0uB,SAAA,CAAA1uB,EAAAynB,UAAA,EACAiH,UAAA1uB,EAAA0uB,SAAA,CACAxH,aAAAlnB,EAAAknB,YAAA,CAEA,CACAqH,UAAAtP,CAAA,CAAAqP,CAAA,CAAAO,CAAA,CAAArH,CAAA,MASAJ,EACA,GATA,UAAAyF,OAAA,GACA,KAAAA,OAAA,CAAA3K,GAAAK,iBAAA,CACA,KAAA2K,QAAA,CAAArhB,UAAA,CAAAU,KAAA,CACA,KACA,KAAA2gB,QAAA,CAAArhB,UAAA,EAEA,KAAAsd,aAAA,IAGA,GAAAmF,IAAAQ,GAAAC,IAAA,CAyCA3H,EAAA,GACAkH,EAAAU,KAAA,OA1CA,KAiBAC,EAhBA7H,EAAA,GACA,IAAA8H,EAAA,KAAAtC,6BAAA,CAAArG,oBAAA,GACA4I,EAAA,KAAA5B,aAAA,CAAAxY,WAAA,GACAqa,EAAA/W,EAAArO,GAAA,CACA,EACAklB,EAAAvW,UAAA,CACAuW,EAAArW,SAAA,CACA,KACAsW,EAAA/b,SAAA,CACA+b,EAAA/Y,YAAA,CACA+Y,EAAA9Y,YAAA,EAEAgZ,EAAA,KAAA7O,OAAA,MAAAqM,OAAA,EAAA7N,OAAA,CACA,KACA,MAIAiQ,EADAI,EACAC,GAAAC,4BAAA,CACAF,EACAD,EACA,MAGAE,GAAAE,UAAA,CACA,UACAJ,GAGAd,EAAA,IAAAQ,GACA,KACA,KAAAjC,OAAA,CACA,GACA,GACA,GACA,KACAoC,EACAA,EAEA,CAIAhQ,GAAA,KACA,IAAAwQ,EAAA,KAAAhE,gBAAA,CAAAxM,GACAwI,EAAAgI,EAAA/H,OAAA,CAAA3mB,MAAA,CACAumB,EAAA,IAAAoI,GACAb,EACA5P,EACA,KAAAoO,kBAAA,CACA,KAAAZ,wBAAA,EAEAzsB,EAAAmnB,GACA,KACAsI,EACArI,EACA,EACAkH,EACAhH,EACA,GACAE,GAGA,OADAtM,EAAAuU,GACA,CACAhI,WAAAA,EACAH,WAAAA,EACAoH,UAAA1uB,EAAAinB,KAAA,CACAC,aAAAlnB,EAAAknB,YAAA,CAEA,CACA,EACA,SAAAiG,GAAA7N,CAAA,CAAAnJ,CAAA,EASA,MAPAmJ,CADAA,EAr5EAqQ,SAEAA,EAAAC,CAAA,SACA,MAAA3sB,OAAA,CAAA2sB,GACAC,SAOA1Y,CAAA,EACA,IAAAnX,EAAA,GACA,QAAAO,EAAA,EAAAwS,EAAAoE,EAAApW,MAAA,CAAoCR,EAAAwS,EAASxS,IAC7CP,CAAA,CAAAO,EAAA,CAAAovB,EAAAxY,CAAA,CAAA5W,EAAA,EAEA,OAAAP,CACA,EAbA4vB,GAEA,iBAAAA,EACAE,SAWAC,CAAA,EACA,IAAA/vB,EAAA,GACA,QAAAkO,KAAA6hB,EACA/vB,CAAA,CAAAkO,EAAA,CAAAyhB,EAAAI,CAAA,CAAA7hB,EAAA,EAEA,OAAAlO,CACA,EAjBA4vB,GAEAA,CACA,EA24EAtQ,EAAA,EACAzT,UAAA,CAAAyT,EAAAzT,UAAA,KACAyT,EAAAzT,UAAA,CAAAU,KAAA,EACAkW,wBAAAnD,EAAAmD,uBAAA,CACA9W,SAAA2T,EAAA3T,QAAA,CACAtB,KAAAiV,EAAA5T,SAAA,EAEA4T,EAAAzT,UAAA,CAAAW,KAAA,CAAA2J,GAAAmJ,EAAAzT,UAAA,CAAAU,KAAA,CACA+S,CACA,CACA,IAAAgQ,GAAA,MAAAU,EASA5lB,YAAAoL,CAAA,CAAAR,CAAA,CAAAib,CAAA,EACA,KAAAza,MAAA,CAAAA,EACA,KAAAR,SAAA,CAAAA,EACA,KAAAib,eAAA,CAAAA,CACA,CACA,OAAAC,cAAAC,CAAA,CAAAxG,CAAA,EACA,IAAAyG,EAAAD,EACAta,EAAAsa,GAAAnb,WAAA,KACA,QAAAqb,KAAA1G,EAEAyG,EAAA,IAAAJ,EAAAI,EADAva,EAAAH,EAAA1U,IAAA,CAAA6U,EAAAwa,EAAAxa,UAAA,EACAwa,EAAA7X,sBAAA,EAEA,OAAA4X,CACA,CACA,OAAAZ,WAAA9jB,CAAA,CAAAukB,CAAA,EACA,WAAAD,EAAA,SAAAta,EAAA,KAAAhK,GAAAukB,EACA,CACA,OAAAV,6BAAA7jB,CAAA,CAAAukB,CAAA,CAAA3Q,CAAA,EACA,IAAAgR,EAAAhR,EAAAkO,mBAAA,CAAA9hB,GACAsJ,EAAA,IAAAU,EAAA,KAAAhK,GACA6kB,EAAAjR,EAAAiO,aAAA,CAAAiD,UAAA,CAAAxb,GACAyb,EAAAT,EAAAU,eAAA,CACAT,EACAK,EACAC,GAEA,WAAAP,EAAA,KAAAhb,EAAAyb,EACA,CACA,IAAA/kB,WAAA,CACA,YAAAsJ,SAAA,CAAAtJ,SAAA,CAEAjF,UAAA,CACA,YAAAmjB,aAAA,GAAA1oB,IAAA,KACA,CACAyF,OAAAsP,CAAA,EACA,OAAA+Z,EAAArpB,MAAA,MAAAsP,EACA,CACA,OAAAtP,OAAAhG,CAAA,CAAA4Q,CAAA,EACA,QACA,GAAA5Q,IAAA4Q,GAGA,CAAA5Q,GAAA,CAAA4Q,EAFA,SAKA,IAAA5Q,GAAA,CAAA4Q,GAGA5Q,EAAA+K,SAAA,GAAA6F,EAAA7F,SAAA,EAAA/K,EAAAsvB,eAAA,GAAA1e,EAAA0e,eAAA,CAFA,SAKAtvB,EAAAA,EAAA6U,MAAA,CACAjE,EAAAA,EAAAiE,MAAA,CAEA,CACA,OAAAkb,gBAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,IAAAzd,EAAA,GACAI,EAAA,EACAC,EAAA,EAMA,OALA,OAAAod,IACAzd,EAAAyd,EAAAzd,SAAA,CACAI,EAAAqd,EAAAza,YAAA,CACA3C,EAAAod,EAAAxa,YAAA,EAEAgC,EAAArO,GAAA,CACA2mB,EACAC,EAAAjY,UAAA,CACAiY,EAAA/X,SAAA,CACA,KACAzF,EACAI,EACAC,EAEA,CACAiX,eAAA1V,CAAA,CAAAsK,CAAA,EACA,GAAAtK,OAAAA,EACA,YAEA,GAAAA,KAAAA,EAAA3T,OAAA,MACA,OAAA2uB,EAAAc,eAAA,MAAA9b,EAAAsK,GAEA,IAAAtM,EAAAgC,EAAA7K,KAAA,OACA8G,EAAA,KACA,QAAAiC,KAAAF,EACA/B,EAAA+e,EAAAc,eAAA,CAAA7f,EAAAiC,EAAAoM,GAEA,OAAArO,CACA,CACA,OAAA6f,gBAAA9gB,CAAA,CAAAtE,CAAA,CAAA4T,CAAA,EACA,IAAAyR,EAAAzR,EAAAkO,mBAAA,CAAA9hB,GACAslB,EAAAhhB,EAAAgF,SAAA,CAAAhU,IAAA,CAAA0K,GACAulB,EAAA3R,EAAAiO,aAAA,CAAAiD,UAAA,CAAAQ,GACAE,EAAAlB,EAAAU,eAAA,CACA1gB,EAAAigB,eAAA,CACAc,EACAE,GAEA,WAAAjB,EAAAhgB,EAAAghB,EAAAE,EACA,CACAtH,eAAA,CACA,YAAA5U,SAAA,CAAAc,WAAA,EACA,CACAI,sBAAAC,CAAA,EACA,IAAAlF,EAAA,GACAkgB,EAAA,KACA,KAAAA,GAAAA,IAAAhb,GACAlF,EAAAjQ,IAAA,EACAwX,uBAAA2Y,EAAAlB,eAAA,CACApa,WAAAsb,EAAAnc,SAAA,CAAAkB,qBAAA,CAAAib,EAAA3b,MAAA,EAAAR,WAAA,KACA,GACAmc,EAAAA,EAAA3b,MAAA,CAEA,OAAA2b,IAAAhb,EAAAlF,EAAA0C,OAAA,SACA,CACA,EACAyd,GAAA,MAAAA,EAYAhnB,YAAAoL,CAAA,CAAAwN,CAAA,CAAAqO,CAAA,CAAAC,CAAA,CAAAvJ,CAAA,CAAAO,CAAA,CAAA8B,CAAA,CAAAT,CAAA,EACA,KAAAnU,MAAA,CAAAA,EACA,KAAAwN,MAAA,CAAAA,EACA,KAAA+E,oBAAA,CAAAA,EACA,KAAAO,OAAA,CAAAA,EACA,KAAA8B,cAAA,CAAAA,EACA,KAAAT,qBAAA,CAAAA,EACA,KAAA4H,kBAAA,QACA,KAAAC,KAAA,MAAAhc,MAAA,MAAAA,MAAA,CAAAgc,KAAA,KACA,KAAAC,SAAA,CAAAJ,EACA,KAAAK,UAAA,CAAAJ,CACA,CACA3qB,OAAAsP,CAAA,SACA,OAAAA,GAGAmb,EAAAO,OAAA,MAAA1b,EACA,CACA,OAAA0b,QAAAhxB,CAAA,CAAA4Q,CAAA,SACA,IAAAA,KAGA,KAAAqgB,iBAAA,CAAAjxB,EAAA4Q,IAGA+d,GAAA3oB,MAAA,CAAAhG,EAAAgpB,qBAAA,CAAApY,EAAAoY,qBAAA,CACA,CAIA,OAAAiI,kBAAAjxB,CAAA,CAAA4Q,CAAA,EACA,QACA,GAAA5Q,IAAA4Q,GAGA,CAAA5Q,GAAA,CAAA4Q,EAFA,SAKA,IAAA5Q,GAAA,CAAA4Q,GAGA5Q,EAAA6wB,KAAA,GAAAjgB,EAAAigB,KAAA,EAAA7wB,EAAAqiB,MAAA,GAAAzR,EAAAyR,MAAA,EAAAriB,EAAA2nB,OAAA,GAAA/W,EAAA+W,OAAA,CAFA,SAKA3nB,EAAAA,EAAA6U,MAAA,CACAjE,EAAAA,EAAAiE,MAAA,CAEA,CACAyB,OAAA,CACA,YAEA,OAAA4a,OAAAC,CAAA,EACA,KAAAA,GACAA,EAAAL,SAAA,IACAK,EAAAJ,UAAA,IACAI,EAAAA,EAAAtc,MAAA,CAGAwZ,OAAA,CACAoC,EAAAS,MAAA,MACA,CACA5J,KAAA,CACA,YAAAzS,MAAA,CAEAuV,SAAA,QACA,KAAAvV,MAAA,CACA,KAAAA,MAAA,CAEA,KAEAxU,KAAAgiB,CAAA,CAAAqO,CAAA,CAAAC,CAAA,CAAAvJ,CAAA,CAAAO,CAAA,CAAA8B,CAAA,CAAAT,CAAA,EACA,WAAAyH,EACA,KACApO,EACAqO,EACAC,EACAvJ,EACAO,EACA8B,EACAT,EAEA,CACAY,aAAA,CACA,YAAAkH,SAAA,CAEAnH,cAAA,CACA,YAAAoH,UAAA,CAEAlR,QAAAlB,CAAA,EACA,OAAAA,EAAAkB,OAAA,MAAAwC,MAAA,CACA,CACAvc,UAAA,CACA,IAAAzG,EAAA,GAEA,OADA,KAAA+xB,YAAA,CAAA/xB,EAAA,GACA,IAAAA,EAAAkB,IAAA,SACA,CACA6wB,aAAArgB,CAAA,CAAAsgB,CAAA,EAKA,OAJA,KAAAxc,MAAA,EACAwc,CAAAA,EAAA,KAAAxc,MAAA,CAAAuc,YAAA,CAAArgB,EAAAsgB,EAAA,EAEAtgB,CAAA,CAAAsgB,IAAA,KAA0B,KAAAhP,MAAA,CAAY,IAAI,KAAAoH,cAAA,EAAA3jB,WAAgC,IAAI,KAAAkjB,qBAAA,EAAAljB,WAAuC,GACrHurB,CACA,CACA7H,0BAAA8H,CAAA,SACA,KAAAtI,qBAAA,GAAAsI,EACA,KAEA,KAAAzc,MAAA,CAAAxU,IAAA,CACA,KAAAgiB,MAAA,CACA,KAAAyO,SAAA,CACA,KAAAC,UAAA,CACA,KAAA3J,oBAAA,CACA,KAAAO,OAAA,CACA,KAAA8B,cAAA,CACA6H,EAEA,CACArH,YAAAtC,CAAA,SACA,KAAAA,OAAA,GAAAA,EACA,KAEA,IAAA8I,EACA,KAAA5b,MAAA,CACA,KAAAwN,MAAA,CACA,KAAAyO,SAAA,CACA,KAAAC,UAAA,CACA,KAAA3J,oBAAA,CACAO,EACA,KAAA8B,cAAA,CACA,KAAAT,qBAAA,CAEA,CAEAkB,cAAA5U,CAAA,EACA,IAAA6b,EAAA,KACA,KAAAA,GAAAA,EAAAL,SAAA,GAAAxb,EAAAwb,SAAA,GACA,GAAAK,EAAA9O,MAAA,GAAA/M,EAAA+M,MAAA,CACA,SAEA8O,EAAAA,EAAAtc,MAAA,CAEA,QACA,CACA0c,mBAAA,CACA,OACAlP,OAAA,KAAAA,MAAA,CACA+E,qBAAA,KAAAA,oBAAA,CACAO,QAAA,KAAAA,OAAA,CACA8B,eAAA,KAAAA,cAAA,EAAAlU,sBAAA,KAAAV,MAAA,EAAA4U,gBAAA,UACAT,sBAAA,KAAAA,qBAAA,EAAAzT,sBAAA,KAAAkU,cAAA,MAEA,CACA,OAAA+H,UAAAhB,CAAA,CAAAd,CAAA,EACA,IAAAF,EAAAb,GAAAY,aAAA,CAAAiB,GAAA/G,gBAAA,KAAAiG,EAAAjG,cAAA,EACA,WAAAgH,EACAD,EACAd,EAAArN,MAAA,CACAqN,EAAAgB,QAAA,KACAhB,EAAAiB,SAAA,KACAjB,EAAAtI,oBAAA,CACAsI,EAAA/H,OAAA,CACA6H,EACAb,GAAAY,aAAA,CAAAC,EAAAE,EAAA1G,qBAAA,EAEA,CACA,CAEAyH,CAAAA,GAAArC,IAAA,KAAAqC,GACA,KACA,EACA,EACA,EACA,GACA,KACA,KACA,MAEA,IAAAtC,GAAAsC,GACAgB,GAAA,MACAhoB,YAAAioB,CAAA,CAAAC,CAAA,EACA,KAAAC,QAAA,IACA,KAAAF,qBAAA,CAAAA,EAAAljB,OAAA,CACA,GACA,MAAAuK,GACA,KAAA6Y,QAAA,IACA,IAEA9Y,EAAAC,EAAAqS,IAAAhd,GAAA,IAAA2X,EAAAtM,OAAA,GAGA,KAAAkY,uBAAA,CAAAA,EAAAnjB,OAAA,CACA,GAAAsK,EAAAC,EAAAqS,IAAAhd,GAAA,IAAA2X,EAAAtM,OAAA,EAEA,CACA,IAAAoY,eAAA,CACA,YAAAD,QAAA,WAAAD,uBAAA,CAAAvxB,MAAA,CAEA,IAAA0xB,cAAA,CACA,gBAAAJ,qBAAA,CAAAtxB,MAAA,QAAAwxB,QAAA,CAEAxmB,MAAAiH,CAAA,EACA,QAAA0f,KAAA,KAAAJ,uBAAA,CACA,GAAAI,EAAA1f,GACA,SAGA,QAAA2f,KAAA,KAAAN,qBAAA,CACA,GAAAM,EAAA3f,GACA,SAGA,YAAAuf,QAAA,CAEA,EACA7C,GAAA,MACAtlB,YAAAykB,CAAA,CAAA5P,CAAA,CAAA2T,CAAA,CAAAnG,CAAA,EACA,KAAAA,wBAAA,CAAAA,EACA,KAAAoG,iBAAA,CAAAhE,EACA,KAAAiE,mBAAA,CAAAF,EAIA,KAAAG,SAAA,MAEA,KAAAC,OAAA,IACA,KAAAC,aAAA,IACA,KAAAC,kBAAA,EACA,CACA1K,QAAAvB,CAAA,CAAAkM,CAAA,EACA,KAAA7H,iBAAA,CAAArE,EAAA0C,qBAAA,CAAAwJ,EACA,CACA7H,kBAAA8H,CAAA,CAAAD,CAAA,EACA,QAAAD,kBAAA,EAAAC,EACA,OAEA,QAAAN,iBAAA,EACA,IAAA3B,EAAAkC,GAAAnD,iBAAA,EACA/W,EAAA,GAIA,GAHA,KAAAuT,wBAAA,EAAA+F,eACAtZ,CAAAA,EAAA,IAEA,KAAA4Z,mBAAA,CAAA/xB,MAAA,SAAA0rB,wBAAA,QAAAA,wBAAA,CAAA+F,aAAA,QAAA/F,wBAAA,CAAAgG,YAAA,EACA,IAAAY,EAAAD,GAAAxJ,iBAAA,GACA,QAAA/Q,KAAA,KAAAia,mBAAA,CACAja,EAAAuB,OAAA,CAAAiZ,IACAnC,CAAAA,EAAA7Y,EAAArO,GAAA,CACAknB,EACA,EACArY,EAAA7V,IAAA,CACA,KACA,GACA,EACA,EACA,CAGA,MAAAypB,wBAAA,EACAvT,CAAAA,EAAA,KAAAuT,wBAAA,CAAA1gB,KAAA,CAAAsnB,EAAA,CAEA,CAYA,GAXAna,GACAgY,CAAAA,EAAA7Y,EAAArO,GAAA,CACAknB,EACA,EACA,EACAhY,EACA,GACA,EACA,EACA,EAEA,KAAA+Z,aAAA,CAAAlyB,MAAA,SAAAkyB,aAAA,MAAAA,aAAA,CAAAlyB,MAAA,MAAAmwB,EAAA,CACA,KAAAgC,kBAAA,CAAAC,EACA,MACA,CACA,KAAAF,aAAA,CAAAjyB,IAAA,MAAAkyB,kBAAA,EACA,KAAAD,aAAA,CAAAjyB,IAAA,CAAAkwB,GACA,KAAAgC,kBAAA,CAAAC,EACA,MACA,CACA,IAAAngB,EAAAogB,GAAAxJ,iBAAA,GACA,KAAAoJ,OAAA,CAAAhyB,IAAA,EACAsyB,WAAA,KAAAJ,kBAAA,CACAC,SAAAA,EAEAngB,OAAAA,CACA,GACA,KAAAkgB,kBAAA,CAAAC,CACA,CACA1E,UAAAxH,CAAA,CAAAQ,CAAA,EASA,OARA,KAAAuL,OAAA,CAAAjyB,MAAA,SAAAiyB,OAAA,MAAAA,OAAA,CAAAjyB,MAAA,IAAAuyB,UAAA,GAAA7L,EAAA,GACA,KAAAuL,OAAA,CAAA/K,GAAA,GAEA,SAAA+K,OAAA,CAAAjyB,MAAA,GACA,KAAAmyB,kBAAA,IACA,KAAA1K,OAAA,CAAAvB,EAAAQ,GACA,KAAAuL,OAAA,MAAAA,OAAA,CAAAjyB,MAAA,IAAAuyB,UAAA,IAEA,KAAAN,OAAA,CAEApE,gBAAA3H,CAAA,CAAAQ,CAAA,EACA,KAAAwL,aAAA,CAAAlyB,MAAA,SAAAkyB,aAAA,MAAAA,aAAA,CAAAlyB,MAAA,MAAA0mB,EAAA,IACA,KAAAwL,aAAA,CAAAhL,GAAA,GACA,KAAAgL,aAAA,CAAAhL,GAAA,IAEA,SAAAgL,aAAA,CAAAlyB,MAAA,GACA,KAAAmyB,kBAAA,IACA,KAAA1K,OAAA,CAAAvB,EAAAQ,GACA,KAAAwL,aAAA,MAAAA,aAAA,CAAAlyB,MAAA,OAEA,IAAAkQ,EAAA,IAAAsiB,YAAA,KAAAN,aAAA,CAAAlyB,MAAA,EACA,QAAAR,EAAA,EAAAwS,EAAA,KAAAkgB,aAAA,CAAAlyB,MAAA,CAAqDR,EAAAwS,EAASxS,IAC9D0Q,CAAA,CAAA1Q,EAAA,MAAA0yB,aAAA,CAAA1yB,EAAA,CAEA,OAAA0Q,CACA,CACA,EAGAuiB,GAAA,MACAppB,YAAAqpB,CAAA,CAAA9G,CAAA,EACA,KAAAA,QAAA,CAAAA,EACA,KAAA+G,SAAA,KAAAxhB,IACA,KAAAyhB,YAAA,KAAAzhB,IACA,KAAA0hB,kBAAA,KAAA1hB,IACA,KAAA2hB,MAAA,CAAAJ,CACA,CACArY,SAAA,CACA,QAAAkE,KAAA,KAAAoU,SAAA,CAAApW,MAAA,GACAgC,EAAAlE,OAAA,EAEA,CACA0Y,SAAAL,CAAA,EACA,KAAAI,MAAA,CAAAJ,CACA,CACA3e,aAAA,CACA,YAAA+e,MAAA,CAAA/e,WAAA,EACA,CAIAif,WAAAzU,CAAA,CAAAuO,CAAA,EACA,KAAA8F,YAAA,CAAA3pB,GAAA,CAAAsV,EAAA5T,SAAA,CAAA4T,GACAuO,GACA,KAAA+F,kBAAA,CAAA5pB,GAAA,CAAAsV,EAAA5T,SAAA,CAAAmiB,EAEA,CAIA/Q,OAAApR,CAAA,EACA,YAAAioB,YAAA,CAAA9tB,GAAA,CAAA6F,EACA,CAIAwR,WAAA8W,CAAA,EACA,YAAAJ,kBAAA,CAAA/tB,GAAA,CAAAmuB,EACA,CAIAjf,aAAA,CACA,YAAA8e,MAAA,CAAA9e,WAAA,EACA,CAIAyb,WAAAxb,CAAA,EACA,YAAA6e,MAAA,CAAA9nB,KAAA,CAAAiJ,EACA,CAIAif,oBAAAvoB,CAAA,CAAA6gB,CAAA,CAAAxG,CAAA,CAAAyG,CAAA,CAAAC,CAAA,EACA,SAAAiH,SAAA,CAAAvhB,GAAA,CAAAzG,GAAA,CACA,IAAAwoB,EAAA,KAAAP,YAAA,CAAA9tB,GAAA,CAAA6F,GACA,IAAAwoB,EACA,YAEA,KAAAR,SAAA,CAAA1pB,GAAA,CAAA0B,EAlyBA,IAAA2gB,GAmyBA3gB,EACAwoB,EACA3H,EACAxG,EACAyG,EACAC,EACA,KACA,KAAAE,QAAA,EAEA,CACA,YAAA+G,SAAA,CAAA7tB,GAAA,CAAA6F,EACA,CACA,EAGIyoB,GAAQ,MACZ/pB,YAAAub,CAAA,EACA,KAAAyO,QAAA,CAAAzO,EACA,KAAA0O,aAAA,KAAAb,GACAphB,EAAAK,kBAAA,CAAAkT,EAAA8N,KAAA,CAAA9N,EAAAjT,QAAA,EACAiT,EAAAT,OAAA,EAEA,KAAAoP,mBAAA,KAAApiB,GACA,CACAkJ,SAAA,CACA,KAAAiZ,aAAA,CAAAjZ,OAAA,EACA,CAIA0Y,SAAAL,CAAA,CAAA/gB,CAAA,EACA,KAAA2hB,aAAA,CAAAP,QAAA,CAAA1hB,EAAAK,kBAAA,CAAAghB,EAAA/gB,GACA,CAIAoC,aAAA,CACA,YAAAuf,aAAA,CAAAvf,WAAA,EACA,CAKAyf,iCAAApY,CAAA,CAAAoQ,CAAA,CAAAxG,CAAA,EACA,YAAAyO,4BAAA,CAAArY,EAAAoQ,EAAA,CAAkFxG,kBAAAA,CAAA,EAClF,CAKAyO,6BAAArY,CAAA,CAAAoQ,CAAA,CAAAkI,CAAA,EACA,YAAAC,YAAA,CACAvY,EACAoQ,EACAkI,EAAA1O,iBAAA,CACA0O,EAAAjI,UAAA,CACA,IAAA4F,GACAqC,EAAAhI,wBAAA,KACAgI,EAAAE,0BAAA,MAGA,CAIAC,YAAAzY,CAAA,EACA,YAAAuY,YAAA,CAAAvY,EAAA,iBACA,CACAuY,aAAAvY,CAAA,CAAAoQ,CAAA,CAAAxG,CAAA,CAAAyG,CAAA,CAAAC,CAAA,EACA,IAAAoI,EAAA,IAAA5Y,EAAA,KAAAoY,aAAA,CAAAlY,GACA,KAAA0Y,EAAAvY,CAAA,CAAAvb,MAAA,IACA8zB,EAAAvY,CAAA,CAAAvN,GAAA,SAAA+lB,kBAAA,CAAAC,EAAArpB,SAAA,GACAmpB,EAAAtY,YAAA,GAEA,YAAAyY,oBAAA,CACA7Y,EACAoQ,EACAxG,EACAyG,EACAC,EAEA,CACAqI,mBAAAppB,CAAA,EACA,KAAA4oB,mBAAA,CAAAniB,GAAA,CAAAzG,KACA,KAAAupB,oBAAA,CAAAvpB,GACA,KAAA4oB,mBAAA,CAAAtqB,GAAA,CAAA0B,EAAA,IAEA,CACAupB,qBAAAvpB,CAAA,EACA,IAAA4T,EAAA,KAAA8U,QAAA,CAAAQ,WAAA,CAAAlpB,GACA,GAAA4T,EAAA,CACA,IAAApC,EAAA,wBAAAkX,QAAA,CAAAjL,aAAA,MAAAiL,QAAA,CAAAjL,aAAA,CAAAzd,GAAA,OACA,KAAA2oB,aAAA,CAAAN,UAAA,CAAAzU,EAAApC,EACA,CACA,CAIA6W,WAAAG,CAAA,CAAAhX,EAAA,GAAAqP,EAAA,EAAAxG,EAAA,MAEA,OADA,KAAAsO,aAAA,CAAAN,UAAA,CAAAG,EAAAhX,GACA,KAAA8X,oBAAA,CAAAd,EAAAxoB,SAAA,CAAA6gB,EAAAxG,EACA,CAIAiP,qBAAAtpB,CAAA,CAAA6gB,EAAA,EAAAxG,EAAA,KAAAyG,EAAA,KAAAC,EAAA,MACA,YAAA4H,aAAA,CAAAJ,mBAAA,CACAvoB,EACA6gB,EACAxG,EACAyG,EACAC,EAEA,CACA,EACAyI,GAAApG,GAAAC,IAAA,CCphGO,IAAAoG,GAAA,CACP,OACA,OACA,WACA,UACA,KACA,MACA,UACA,QACA,QACA,KACA,QACA,MACA,QACA,SACA,OACA,OACA,QACA,SACA,QACA,MACA,OCpBOC,GAOPhrB,YAAAirB,CAAA,CAAAC,CAAA,CAAAC,CAAA,EACA,KAAAF,QAAA,CAAAA,EACA,KAAAC,MAAA,CAAAA,EACAC,GACA,MAAAA,KAAA,CAAAA,CAAA,CAEA,CACA,CCRO,SAAAC,GAAAC,CAAA,CAAAF,CAAA,EAEP,IAAAF,EAAA,GAEAC,EAAA,GACAzkB,EAAA,GAEA,OAAAA,EAAA4kB,EAAA10B,MAAA,EACAU,OAAAi0B,MAAA,CAAAL,EAAAI,CAAA,CAAA5kB,EAAA,CAAAwkB,QAAA,EACA5zB,OAAAi0B,MAAA,CAAAJ,EAAAG,CAAA,CAAA5kB,EAAA,CAAAykB,MAAA,EAGA,WAAaF,GAAMC,EAAAC,EAAAC,EACnB,CCrBO,SAAAI,GAAA7jB,CAAA,EACP,OAAAA,EAAAtO,WAAA,EACA,CFiBA4xB,GAAAxzB,SAAA,CAAAyzB,QAAA,IAEAD,GAAAxzB,SAAA,CAAA0zB,MAAA,IAEAF,GAAAxzB,SAAA,CAAA2zB,KAAA,KG3BO,OAAAK,GAMPxrB,YAAAirB,CAAA,CAAAQ,CAAA,EAEA,KAAAR,QAAA,CAAAA,EAEA,KAAAQ,SAAA,CAAAA,CACA,CACA,CAGAD,GAAAh0B,SAAA,CAAA2zB,KAAA,MACAK,GAAAh0B,SAAA,CAAAk0B,OAAA,IACAF,GAAAh0B,SAAA,CAAAm0B,UAAA,IACAH,GAAAh0B,SAAA,CAAAo0B,iBAAA,IACAJ,GAAAh0B,SAAA,CAAAq0B,MAAA,IACAL,GAAAh0B,SAAA,CAAAs0B,cAAA,IACAN,GAAAh0B,SAAA,CAAAu0B,cAAA,IACAP,GAAAh0B,SAAA,CAAAw0B,qBAAA,IACAR,GAAAh0B,SAAA,CAAAy0B,eAAA,IACAT,GAAAh0B,SAAA,CAAA00B,OAAA,ICxBA,IAAAC,GAAA,EAEaC,GAAOC,KACbV,GAAAU,KACAT,GAAAS,KACAR,GAAAQ,KACAN,GAAAM,KACAP,GAAAO,KACAL,GAAAK,KAEP,SAAAA,KACA,YAAAF,EACA,CCPA,IAAAG,GAAAj1B,OAAA6rB,IAAA,CAA2BqJ,EAEpB,OAAAC,WAA0BhB,GAQjCxrB,YAAAirB,CAAA,CAAAQ,CAAA,CAAAgB,CAAA,CAAAtB,CAAA,EACA,IAAA1kB,EAAA,GAMA,GAJA,MAAAwkB,EAAAQ,GAEAiB,SAkBAxZ,CAAA,CAAApP,CAAA,CAAA4D,CAAA,EACAA,GAEAwL,CAAAA,CAAA,CAAApP,EAAA,CAAA4D,CAAA,CAEA,EAvBA,aAAAyjB,GAEA,iBAAAsB,EACA,OAAAhmB,EAAA6lB,GAAA31B,MAAA,GACA,IAAAg2B,EAAAL,EAAA,CAAA7lB,EAAA,EACAimB,SAaAxZ,CAAA,CAAApP,CAAA,CAAA4D,CAAA,EACAA,GAEAwL,CAAAA,CAAA,CAAApP,EAAA,CAAA4D,CAAA,CAEA,EAlBA,KAAA4kB,EAAA,CAAA7lB,EAAA,EAAAgmB,EAA0CF,CAAK,CAAAI,EAAA,IAAaJ,CAAK,CAAAI,EAAA,CACjE,CAEA,CACA,CAEAH,GAAAh1B,SAAA,CAAA00B,OAAA,ICbA,IAAAU,GAAA,GAAc/e,cAAA,CAMP,SAAAvB,GAAAugB,CAAA,MAMPC,EAJA,IAAA7B,EAAA,GAEAC,EAAA,GAIA,IAAA4B,KAAAD,EAAAE,UAAA,CACA,GAAAH,GAAA1yB,IAAA,CAAA2yB,EAAAE,UAAA,CAAAD,GAAA,CACA,IAAAplB,EAAAmlB,EAAAE,UAAA,CAAAD,EAAA,CACA3nB,EAAA,IAAuBqnB,GACvBM,EACAD,EAAAG,SAAA,CAAAH,EAAAI,UAAA,KAAwDH,GACxDplB,EACAmlB,EAAA1B,KAAA,CAIA0B,CAAAA,EAAAZ,eAAA,EACAY,EAAAZ,eAAA,CAAAtvB,QAAA,CAAAmwB,IAEA3nB,CAAAA,EAAA8mB,eAAA,KAGAhB,CAAA,CAAA6B,EAAA,CAAA3nB,EAEA+lB,CAAA,CAAaK,GAASuB,GAAA,CAAAA,EACtB5B,CAAA,CAAaK,GAASpmB,EAAAsmB,SAAA,GAAAqB,CACtB,CAGA,WAAa9B,GAAMC,EAAAC,EAAA2B,EAAA1B,KAAA,CACnB,CCvDO,IAAA+B,GAAc5gB,GAAM,CAC3B6e,MAAA,QACA6B,UAAAA,CAAAG,EAAAL,IACA,SAAAA,EAAAh1B,KAAA,IAAAsB,WAAA,GAEA2zB,WAAA,CACAK,aAAA,KACAC,aAAA,KACAC,UAAA,KACAC,UAAA,KACAC,UAAA,KACAC,WAAA,KACAC,UAAA,IACA,CACA,GCdOC,GAAYrhB,GAAM,CACzB6e,MAAA,MACA6B,UAAAA,CAAAG,EAAAL,IACA,OAAAA,EAAAh1B,KAAA,IAAAsB,WAAA,GAEA2zB,WAAA,CAAea,QAAA,KAAAC,QAAA,KAAAC,SAAA,KACf,GCHO,SAAAC,GAAAd,CAAA,CAAAxB,CAAA,EACP,OAAAA,KAAAwB,EAAAA,CAAA,CAAAxB,EAAA,CAAAA,CACA,CCAO,SAAAuC,GAAAf,CAAA,CAAAhC,CAAA,EACP,OAAS8C,GAAsBd,EAAAhC,EAAA7xB,WAAA,GAC/B,CCNO,IAAA60B,GAAc3hB,GAAM,CAC3B6e,MAAA,QACA8B,WAAA,CAAeiB,WAAA,eACflB,UAAagB,GACbjB,WAAA,CAAekB,MAAA,KAAAE,WAAA,KACf,GCLOC,GAAa9hB,GAAM,CAC1B0gB,UAAAA,CAAAG,EAAAL,IACAA,SAAAA,EAAAA,EAAA,QAAAA,EAAAh1B,KAAA,IAAAsB,WAAA,GAEA2zB,WAAA,CACAsB,qBAAA,KACAC,WAAgB3C,GAChB4C,iBAAA,KACAC,SAAc7C,GACd8C,YAAiB9C,GACjB+C,aAAkB7C,GAClB8C,aAAkB9C,GAClB+C,YAAiB/C,GACjBgD,aAAkB9C,GAClB+C,YAAA,KACAC,gBAAqBhD,GACrBiD,YAAA,KACAC,aAAkBtD,GAClBuD,eAAoBnD,GACpBoD,iBAAA,KACAC,aAAkBzD,GAClB0D,WAAgBtD,GAChBuD,YAAiB3D,GACjB4D,aAAA,KACAC,WAAgB7D,GAChB8D,YAAA,KACAC,iBAAA,KACAC,UAAA,KACAC,eAAoB7D,GACpB8D,UAAehE,GACfiE,SAAA,KACAC,UAAepE,GACfqE,cAAmBrE,GACnBsE,oBAAyBtE,GACzBuE,gBAAA,KACAC,SAAcpE,GACdqE,gBAAA,KACAC,aAAkBxE,GAClByE,YAAiB3E,GACjB4E,aAAkB5E,GAClB6E,aAAA,KACAC,aAAkB9E,GAClB+E,oBAAyB3E,GACzB4E,aAAkB9E,GAClB+E,aAAkB/E,GAClBgF,YAAiBhF,GACjBiF,aAAkBnF,GAClBoF,YAAiBlF,GACjBmF,SAAA,KACAC,aAAkBpF,GAClBqF,aAAkBrF,GAClBsF,aAAkBtF,GAClBuF,cAAA,KACAC,KAAA,IACA,CACA,GC/COvuB,GAAawJ,GAAM,CAC1B6e,MAAA,OACA8B,WAAA,CACAqE,cAAA,iBACAC,UAAA,QACAC,QAAA,MACAC,UAAA,YACA,EACAzE,UAAagB,GACb/B,gBAAA,0CACAc,WAAA,CAEA2E,KAAA,KACAC,OAAY7F,GACZ8F,cAAmB7F,GACnB8F,UAAe9F,GACf+F,OAAA,KACAC,MAAA,KACAC,gBAAqB5F,GACrB6F,oBAAyB7F,GACzB8F,eAAoB9F,GACpB+F,IAAA,KACAC,GAAA,KACAC,MAAWjG,GACXkG,eAAA,KACAC,aAAkBxG,GAClByG,UAAepG,GACfqG,SAAcrG,GACdsG,SAAc3G,GACdnlB,QAAA,KACA+rB,QAAA,KACAj6B,QAAa0zB,GACbwG,KAAA,KACAlwB,UAAeqpB,GACf8G,KAAUhH,GACViH,QAAA,KACAxV,QAAA,KACAyV,gBAAqBpH,GACrBqH,SAAc5G,GACd6G,aAAkBlH,GAClBmH,OAAYrH,GAASC,GACrBqH,YAAA,KACAr6B,KAAA,KACAs6B,SAAA,KACAC,SAAA,KACAhuB,QAAa+mB,GACbkH,MAAWlH,GACXmH,IAAA,KACAC,QAAA,KACAC,SAAcrH,GACdsH,SAAc9H,GACd+H,UAAehI,GACfiI,QAAA,KACAC,aAAA,KACAC,cAAA,KACAC,KAAA,KACAC,WAAA,KACAC,YAAA,KACAC,WAAA,KACAC,eAAoB/H,GACpBgI,WAAA,KACAC,QAAatI,GACbuI,OAAYzI,GACZ0I,OAAYnI,GACZoI,KAAU3I,GACV4I,KAAA,KACAC,SAAA,KACAC,QAAa5I,GACb6I,UAAe7I,GACfnnB,GAAA,KACAiwB,WAAA,KACAC,YAAA,KACAC,MAAW3I,GACX4I,UAAA,KACAC,UAAA,KACAC,GAAA,KACAC,MAAW/I,GACXgJ,OAAA,KACAC,SAActJ,GACduJ,QAAavJ,GACbwJ,UAAenJ,GACfoJ,SAAczJ,GACd1Y,KAAA,KACAoiB,MAAA,KACAjzB,KAAA,KACAkzB,SAAA,KACAC,KAAA,KACAC,QAAA,KACAC,KAAUzJ,GACV0J,IAASjK,GACTkK,SAAA,KACAC,IAAA,KACAC,UAAepK,GACfqK,MAAA,KACAC,OAAA,KACAz8B,IAAA,KACA08B,UAAevK,GACfwK,SAAcjK,GACdkK,MAAWlK,GACXnsB,KAAA,KACAs2B,MAAA,KACAC,SAAcpK,GACdqK,WAAgBrK,GAChBsK,QAAA,KACAC,aAAA,KACAC,WAAA,KACAC,cAAA,KACAC,cAAA,KACAC,eAAA,KACAC,eAAA,KACAC,OAAA,KACAC,SAAA,KACAC,UAAA,KACAC,iBAAA,KACAC,SAAA,KACAC,QAAA,KACAC,QAAA,KACAC,cAAA,KACAC,cAAA,KACAC,kBAAA,KACAC,OAAA,KACAC,YAAA,KACAC,MAAA,KACAC,WAAA,KACAC,OAAA,KACAC,UAAA,KACAC,YAAA,KACAC,WAAA,KACAC,YAAA,KACAC,WAAA,KACAC,YAAA,KACAC,OAAA,KACAC,iBAAA,KACAC,UAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,WAAA,KACAC,aAAA,KACAC,QAAA,KACAC,UAAA,KACAC,UAAA,KACAC,WAAA,KACAC,QAAA,KACAC,iBAAA,KACAC,OAAA,KACAC,aAAA,KACAC,iBAAA,KACAC,UAAA,KACAC,YAAA,KACAC,UAAA,KACAC,eAAA,KACAC,YAAA,KACAC,aAAA,KACAC,aAAA,KACAC,YAAA,KACAC,WAAA,KACAC,YAAA,KACAC,UAAA,KACAC,UAAA,KACAC,SAAA,KACAC,WAAA,KACAC,WAAA,KACAC,QAAA,KACAC,QAAA,KACAC,OAAA,KACAC,UAAA,KACAC,WAAA,KACAC,WAAA,KACAC,aAAA,KACAC,mBAAA,KACAC,QAAA,KACAC,SAAA,KACAC,SAAA,KACAC,YAAA,KACAC,0BAAA,KACAC,SAAA,KACAC,UAAA,KACAC,SAAA,KACAC,aAAA,KACAC,UAAA,KACAC,UAAA,KACAC,SAAA,KACAC,UAAA,KACAC,aAAA,KACAC,SAAA,KACAC,qBAAA,KACAC,SAAA,KACAC,eAAA,KACAC,UAAA,KACAC,QAAA,KACAC,KAAU9P,GACV+P,QAAatQ,GACb1V,QAAA,KACAimB,KAAUrQ,GACVsQ,YAAA,KACAC,YAAiBlQ,GACjBmQ,QAAA,KACAC,cAAA,KACAC,oBAAA,KACAC,OAAA,KACAC,QAAA,KACAC,SAAcxQ,GACdyQ,eAAA,KACAC,IAAS/Q,GACTgR,SAAc3Q,GACd4Q,SAAc5Q,GACd6Q,KAAUpR,GACVqR,QAAarR,GACbsR,QAAapR,GACbjjB,MAAA,KACAs0B,OAAYhR,GACZiR,SAAcjR,GACdkR,SAAclR,GACdmR,mBAAwBnR,GACxBoR,yBAA8BpR,GAC9BqR,eAAA,KACAC,MAAA,KACAC,KAAU9R,GACV+R,MAAA,KACAC,KAAA,KACAC,KAAUjS,GACVkS,WAAgBpS,GAChBqS,IAAA,KACAC,OAAA,KACAC,QAAA,KACAC,OAAA,KACAp3B,MAAW8kB,GACXuS,KAAA,KACA56B,MAAA,KACA66B,SAAcxS,GACdjmB,OAAA,KACA04B,MAAA,KACAC,UAAA,KACA3lC,KAAA,KACA4lC,cAAmBpS,GACnBqS,OAAA,KACA/2B,MAAWikB,GACX+S,MAAW7S,GACX8S,KAAA,KACAC,mBAAA,KAIAC,MAAA,KACAC,MAAA,KACAC,QAAahT,GACbiT,KAAA,KACA31B,WAAA,KACA41B,QAAA,KACAC,OAAYrT,GACZsT,YAAA,KACAC,aAAkBvT,GAClBwT,YAAA,KACAC,YAAA,KACAC,KAAA,KACAC,QAAA,KACAC,QAAA,KACAC,MAAA,KACAn9B,KAAA,KACAo9B,SAAA,KACAC,SAAA,KACApzB,MAAA,KACAqzB,QAAazT,GACb0T,QAAa1T,GACb2T,MAAA,KACAC,KAAA,KACA/Z,MAAA,KACAga,YAAA,KACAC,OAAYrU,GACZsU,WAAgBtU,GAChBuU,KAAA,KACAC,SAAA,KACAC,OAAA,KACAC,aAAkB1U,GAClB2U,YAAiB3U,GACjB4U,SAAcrU,GACdsU,OAAYtU,GACZuU,QAAavU,GACbwU,OAAYxU,GACZyU,OAAA,KACAC,QAAA,KACAC,OAAA,KACAC,IAAA,KACAC,YAAiBpV,GACjB/d,MAAA,KACAozB,OAAA,KACAC,UAAexV,GACfyV,QAAA,KACAC,QAAA,KACAC,KAAA,KACAC,UAAe1V,GACf2V,UAAA,KACAC,QAAA,KACAC,OAAA,KACAC,MAAA,KACAC,OAAY/V,GAGZgW,kBAAA,KACAC,YAAA,KACAC,SAAA,KACAC,wBAA6B5V,GAC7B6V,sBAA2B7V,GAC3B8V,OAAA,KACAjX,SAAA,KACAxb,QAAaoc,GACbsW,SAAA,KACAC,aAAA,IACA,CACA,GCvTOC,GAAY/1B,GAAM,CACzB6e,MAAA,MACA8B,WAAA,CACAqV,aAAA,gBACAC,kBAAA,qBACAC,WAAA,cACAC,cAAA,iBACAC,UAAA,aACAhgC,UAAA,QACAigC,SAAA,YACAC,SAAA,YACAC,mBAAA,sBACAC,0BAAA,8BACAC,aAAA,gBACAC,eAAA,kBACA7P,YAAA,cACA8P,SAAA,WACAC,iBAAA,oBACAC,iBAAA,oBACAC,YAAA,eACAC,SAAA,YACAC,WAAA,cACAC,aAAA,gBACAC,WAAA,cACAC,SAAA,YACAC,eAAA,mBACAC,YAAA,eACA36B,UAAA,aACA46B,YAAA,eACAC,WAAA,cACAC,UAAA,aACAC,2BAAA,+BACAC,yBAAA,6BACAtP,SAAA,WACAuP,UAAA,cACAC,aAAA,iBACAC,aAAA,iBACAC,eAAA,kBACAC,cAAA,iBACAC,cAAA,iBACAC,UAAA,aACAC,UAAA,aACAC,YAAA,eACAC,QAAA,WACAC,YAAA,gBACAC,aAAA,iBACAC,QAAA,WACAC,QAAA,WACAC,QAAA,WACAC,SAAA,YACAC,MAAA,SACAC,UAAA,cACAC,WAAA,eACAzO,QAAA,UACA0O,WAAA,aACAzO,aAAA,eACAG,cAAA,gBACAuO,QAAA,UACAnO,SAAA,WACAC,UAAA,YACAC,iBAAA,mBACAC,SAAA,WACAC,QAAA,UACAC,QAAA,UACAI,OAAA,SACAC,YAAA,cACAC,MAAA,QACAC,WAAA,aACAC,OAAA,SACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,YAAA,cACAC,WAAA,aACAC,YAAA,cACAC,OAAA,SACAC,iBAAA,mBACAC,UAAA,YACA8M,MAAA,QACA7M,QAAA,UACAC,QAAA,UACAC,QAAA,UACA4M,UAAA,YACAC,WAAA,aACA3M,aAAA,eACAC,QAAA,UACAC,UAAA,YACAC,UAAA,YACAC,WAAA,aACAC,QAAA,UACAE,OAAA,SACAC,aAAA,eACAC,iBAAA,mBACAE,YAAA,cACAC,UAAA,YACAE,YAAA,cACAC,aAAA,eACAC,aAAA,eACAC,YAAA,cACAC,WAAA,aACAC,YAAA,cACAC,UAAA,YACAwL,aAAA,eACAvL,UAAA,YACAC,SAAA,WACAC,WAAA,aACAC,WAAA,aACAC,QAAA,UACAC,QAAA,UACAC,OAAA,SACAC,UAAA,YACAC,WAAA,aACAC,WAAA,aACAC,aAAA,eACA8K,SAAA,WACA5K,QAAA,UACAC,SAAA,WACAC,SAAA,WACAG,SAAA,WACAC,UAAA,YACAC,SAAA,WACAsK,OAAA,SACApK,UAAA,YACAC,UAAA,YACAC,SAAA,WACAC,UAAA,YACAC,aAAA,eACAC,SAAA,WACAE,SAAA,WACAC,eAAA,iBACAC,UAAA,YACA4J,OAAA,SACAC,iBAAA,oBACAC,kBAAA,qBACAC,WAAA,cACAC,QAAA,WACAC,cAAA,iBACApJ,eAAA,iBACAqJ,gBAAA,mBACAC,eAAA,kBACAC,UAAA,aACAC,YAAA,eACAC,sBAAA,yBACAC,uBAAA,0BACAC,gBAAA,mBACAC,iBAAA,oBACAC,cAAA,iBACAC,eAAA,kBACAC,iBAAA,oBACAC,cAAA,iBACAC,YAAA,eACAzI,SAAA,WACA0I,WAAA,cACAC,eAAA,kBACAC,cAAA,iBACAC,gBAAA,mBACAC,OAAA,SACAC,kBAAA,qBACAC,mBAAA,sBACAC,YAAA,eACAC,aAAA,gBACAC,WAAA,eACAC,YAAA,eACAC,SAAA,YACAC,aAAA,gBACAC,cAAA,iBACAC,aAAA,gBACAC,SAAA,aACAC,YAAA,gBACAC,YAAA,gBACAC,YAAA,eACAC,YAAA,eACAC,QAAA,WAEAC,cAAA,gBACAC,cAAA,eACA,EACArb,UAAae,GACbhB,WAAA,CACAub,MAAWtc,GACXsW,aAAkBzW,GAClB0c,WAAA,KACAC,SAAA,KACAjG,kBAAA,KACAkG,WAAgB5c,GAChB6c,UAAe7c,GACf2W,WAAA,KACAmG,OAAY9c,GACZ+c,cAAA,KACAC,cAAA,KACAC,QAAajd,GACbkd,UAAA,KACAtG,cAAA,KACAuG,cAAA,KACAC,YAAA,KACAC,KAAA,KACA5yB,MAAA,KACA6yB,KAAUtd,GACVud,GAAA,KACAC,SAAA,KACA3G,UAAe7W,GACfnpB,UAAeqpB,GACfud,KAAA,KACA3G,SAAA,KACA4G,cAAA,KACA3G,SAAA,KACAp2B,MAAA,KACAq2B,mBAAA,KACAC,0BAAA,KACAC,aAAA,KACAC,eAAA,KACA1lB,QAAA,KACAksB,kBAAA,KACAC,iBAAA,KACAtW,YAAA,KACAuW,OAAA,KACAC,GAAA,KACAC,GAAA,KACAC,EAAA,KACA5G,SAAA,KACA6G,cAAA,KACAC,QAAale,GACbme,gBAAqBne,GACrBoe,UAAA,KACAC,QAAA,KACAC,IAAA,KACAC,QAAave,GACbqX,iBAAA,KACAxP,SAActH,GACdie,GAAA,KACAC,GAAA,KACAC,SAAA,KACAC,SAAA,KACAC,UAAe5e,GACfsX,iBAAA,KACAn8B,IAAA,KACA+4B,MAAA,KACA2K,SAAc7e,GACd8e,0BAAA,KACA/uC,KAAA,KACAwnC,YAAiBvX,GACjBwX,SAAA,KACAuH,OAAA,KACAC,UAAA,KACAC,YAAA,KACAxH,WAAA,KACAC,aAAA,KACAwH,UAAA,KACAC,eAAA,KACAxH,WAAA,KACAC,SAAA,KACAC,eAAA,KACAC,YAAA,KACA36B,UAAA,KACA46B,YAAA,KACAC,WAAA,KACAoH,OAAA,KACAC,GAAA,KACAxzC,KAAA,KACAyzC,GAAA,KACAC,GAAA,KACApxB,GAAQ8R,GACRuf,GAAQvf,GACRgY,UAAehY,GACfiY,2BAAA,KACAC,yBAAA,KACAsH,SAAA,KACAC,kBAAA,KACAC,cAAA,KACAC,QAAA,KACAC,QAAa7f,GACb8f,kBAAA,KACAC,WAAA,KACAtX,OAAA,KACAG,KAAA,KACAC,SAAA,KACAuP,UAAepY,GACfqY,aAAkBrY,GAClBsY,aAAkBtY,GAClBjnB,GAAA,KACAinC,YAAiBhgB,GACjBuY,eAAA,KACA0H,kBAAA,KACAC,GAAA,KACAC,IAAA,KACAC,UAAepgB,GACfqgB,EAAOrgB,GACPsgB,GAAQtgB,GACRugB,GAAQvgB,GACRwgB,GAAQxgB,GACRygB,GAAQzgB,GACR0gB,aAAkBvgB,GAClBwgB,iBAAA,KACAC,UAAA,KACAC,WAAA,KACAC,SAAA,KACAC,QAAA,KACApqC,KAAA,KACAqqC,aAAA,KACAxI,cAAA,KACAC,cAAA,KACAwI,kBAAuBjhB,GACvBkhB,MAAA,KACAxI,UAAA,KACAC,UAAA,KACAC,YAAA,KACAuI,aAAA,KACAC,YAAA,KACAC,YAAA,KACAzgB,KAAA,KACA0gB,iBAAA,KACAC,UAAA,KACAC,aAAA,KACArX,IAAA,KACAE,MAAA,KACAoX,uBAAA,KACAC,sBAAA,KACAC,UAAe3hB,GACf4hB,UAAA,KACAtX,OAAA,KACAz8B,IAAA,KACAg0C,KAAA,KACAztC,KAAA,KACAykC,QAAA,KACAC,YAAA,KACAC,aAAA,KACAC,QAAA,KACAC,QAAA,KACAC,QAAA,KACAC,SAAA,KACAC,MAAA,KACAC,UAAA,KACAC,WAAA,KACAwI,WAAA,KACAC,SAAA,KACA5xC,OAAA,KACA06B,QAAA,KACA0O,WAAA,KACAzO,aAAA,KACAG,cAAA,KACAuO,QAAA,KACAnO,SAAA,KACAC,UAAA,KACAC,iBAAA,KACAC,SAAA,KACAC,QAAA,KACAC,QAAA,KACAI,OAAA,KACAC,YAAA,KACAC,MAAA,KACAC,WAAA,KACAC,OAAA,KACAC,UAAA,KACAC,YAAA,KACAC,WAAA,KACAC,YAAA,KACAC,WAAA,KACAC,YAAA,KACAC,OAAA,KACAC,iBAAA,KACAC,UAAA,KACA8M,MAAA,KACA7M,QAAA,KACAC,QAAA,KACAC,QAAA,KACA4M,UAAA,KACAC,WAAA,KACA3M,aAAA,KACAC,QAAA,KACAC,UAAA,KACAC,UAAA,KACAC,WAAA,KACAC,QAAA,KACAE,OAAA,KACAC,aAAA,KACAC,iBAAA,KACAE,YAAA,KACAC,UAAA,KACAE,YAAA,KACAC,aAAA,KACAC,aAAA,KACAC,YAAA,KACAC,WAAA,KACAC,YAAA,KACAC,UAAA,KACAwL,aAAA,KACAvL,UAAA,KACAC,SAAA,KACAC,WAAA,KACAC,WAAA,KACAC,QAAA,KACAC,QAAA,KACAC,OAAA,KACAC,UAAA,KACAC,WAAA,KACAC,WAAA,KACAC,aAAA,KACA8K,SAAA,KACA5K,QAAA,KACAC,SAAA,KACAC,SAAA,KACAG,SAAA,KACAC,UAAA,KACAC,SAAA,KACAsK,OAAA,KACApK,UAAA,KACAC,UAAA,KACAC,SAAA,KACAC,UAAA,KACAC,aAAA,KACAC,SAAA,KACAE,SAAA,KACAC,eAAA,KACAC,UAAA,KACA4J,OAAA,KACAiI,QAAA,KACAC,SAAA,KACAC,MAAA,KACAC,OAAA,KACAC,YAAA,KACAC,OAAA,KACAC,SAAA,KACAC,QAAA,KACAvI,iBAAsBha,GACtBia,kBAAuBja,GACvBka,WAAA,KACAC,QAAA,KACAx6B,KAAA,KACA6iC,WAAgBxiB,GAChByiB,oBAAA,KACAC,iBAAA,KACAC,aAAA,KACAC,MAAA,KACArS,KAAUrQ,GACV2iB,MAAA,KACAtG,cAAA,KACAnC,cAAA,KACA0I,OAAA,KACAC,UAAe/iB,GACfgjB,UAAehjB,GACfijB,UAAejjB,GACfkjB,cAAA,KACAC,oBAAA,KACAC,eAAA,KACAC,UAAA,KACAjkB,SAAce,GACdp2B,EAAA,KACAu5C,OAAA,KACAtS,eAAA,KACAuS,KAAA,KACAC,KAAA,KACAvS,IAAS9Q,GACTgV,IAAShV,GACTka,gBAAA,KACAoJ,YAAA,KACAC,UAAA,KACAC,mBAAwBxjB,GACxByjB,iBAAsBzjB,GACtB0jB,cAAmB1jB,GACnB2jB,gBAAqB3jB,GACrB4jB,SAAA,KACAC,QAAA,KACAhpC,OAAA,KACAipC,OAAA,KACAC,GAAA,KACAC,GAAA,KACAC,MAAA,KACAC,KAAA,KACA/J,eAAA,KACAgK,KAAA,KACAC,MAAA,KACAC,aAAA,KACAC,iBAAsBzkB,GACtB0kB,iBAAsB1kB,GACtB2kB,aAAA,KACAC,QAAA,KACAC,YAAA,KACAC,aAAA,KACAC,MAAA,KACAC,MAAA,KACAC,YAAA,KACA1K,UAAA,KACAC,YAAA,KACAC,sBAA2Bza,GAC3B0a,uBAA4B1a,GAC5BxQ,OAAA,KACA01B,OAAA,KACAvK,gBAAqBxa,GACrBya,iBAAA,KACAC,cAAA,KACAC,eAAA,KACAC,iBAAsB/a,GACtBgb,cAAmBhb,GACnBib,YAAA,KACAtjC,MAAA,KACAwtC,aAAkBnlB,GAClBolB,aAAA,KACAC,oBAAA,KACAC,WAAA,KACAC,cAAA,KACAC,qBAAA,KACAC,eAAoBtlB,GACpBqS,SAAcxS,GACd0lB,YAAA,KACA3rC,OAAA,KACA4rC,QAAa3lB,GACb4lB,QAAa5lB,GACbkb,WAAA,KACAC,eAAA,KACAC,cAAA,KACAyK,WAAA,KACArJ,cAAA,KACA/J,MAAA,KACAqT,kBAAA,KACA/4C,KAAA,KACAuuC,OAAYnb,GACZ4lB,GAAA,KACA5kB,UAAA,KACAka,gBAAA,KACA2K,GAAA,KACAC,GAAA,KACA1K,kBAAuBvb,GACvBwb,mBAAwBxb,GACxBkmB,QAAA,KACAzK,YAAA,KACAC,aAAA,KACAC,WAAgB3b,GAChB3Y,OAAA,KACAu0B,YAAiB5b,GACjB+b,cAAmB/b,GACnBgc,aAAA,KACAH,SAAc7b,GACd8b,aAAkB9b,GAClB4V,QAAA,KACAqG,SAAcjc,GACdkc,YAAiBlc,GACjBmc,YAAiBnc,GACjBmmB,QAAA,KACAC,WAAA,KACAC,WAAA,KACAxT,MAAA,KACAyT,OAAA,KACAlK,YAAA,KACAC,YAAA,KACAkK,EAAA,KACAC,GAAA,KACAC,GAAA,KACAC,iBAAA,KACApK,QAAatc,GACbxrB,EAAA,KACAmyC,GAAA,KACAC,GAAA,KACAC,iBAAA,KACAC,EAAA,KACAC,WAAA,IACA,CACA,GCtiBaC,GAAOznB,GAAK,CAAEuC,GAAKT,GAAOe,GAAOG,GAAMtrB,GAAQ,SAC/CgwC,GAAM1nB,GAAK,CAAEuC,GAAKT,GAAOe,GAAOG,GAAMiU,GAAO,QCgCpD0Q,GAAG,GAAKllC,cAAA,CClCdmlC,GAAA,YACAC,GAAA,kCACAC,GAEA,6DACAC,GAAA,sBAGAC,GAAA,IAAAC,QCvBAC,GAAA,aCAAC,GAAA,KCKOC,GAAA,CACP,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,OACA,CC3GOC,GAAA,CACPC,KAAA,OACAC,MAAA,OACAC,KAAA,OACAC,MAAA,OACAC,OAAA,OACAC,IAAA,OACAC,OAAA,OACAC,KAAA,OACAC,IAAA,OACAv7C,KAAA,OACAw7C,KAAA,OACAC,MAAA,OACAC,IAAA,OACAC,IAAA,OACAC,IAAA,OACAC,KAAA,OACAC,IAAA,OACAC,OAAA,OACAC,KAAA,OACAC,KAAA,OACAC,MAAA,OACAC,MAAA,OACAC,KAAA,OACAC,OAAA,OACAC,MAAA,OACAC,KAAA,OACAC,KAAA,OACAC,MAAA,OACAC,OAAA,OACAC,OAAA,OACAC,OAAA,OACAC,OAAA,OACAC,OAAA,OACAC,OAAA,OACAC,MAAA,OACAC,OAAA,OACAC,KAAA,OACAC,MAAA,OACAC,MAAA,OACAC,OAAA,OACAC,OAAA,OACAC,OAAA,OACAC,MAAA,OACAC,KAAA,OACAC,OAAA,OACAC,OAAA,OACAC,MAAA,OACAC,KAAA,OACAC,IAAA,OACAC,OAAA,OACAC,OAAA,OACAC,OAAA,OACAC,MAAA,OACAC,OAAA,OACAC,KAAA,OACAC,MAAA,OACAC,OAAA,OACAC,OAAA,OACAC,OAAA,OACAC,MAAA,OACAC,KAAA,OACAC,OAAA,OACAC,MAAA,OACAC,MAAA,OACAC,OAAA,OACAC,OAAA,OACAC,MAAA,OACAC,OAAA,OACAC,KAAA,OACAC,MAAA,OACAC,MAAA,OACAC,OAAA,OACAC,OAAA,OACAC,OAAA,OACAC,MAAA,OACAC,KAAA,OACAC,OAAA,OACAC,OAAA,OACAC,MAAA,OACAC,KAAA,OACAC,IAAA,OACAC,OAAA,OACAC,OAAA,OACAC,OAAA,OACAC,MAAA,OACAC,OAAA,OAC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","sources":["webpack://_N_E/./node_modules/next/dist/compiled/buffer/index.js","webpack://_N_E/../src/code/highlight.tsx","webpack://_N_E/../src/code/srs.ts","webpack://_N_E/./node_modules/shiki/dist/langs.mjs","webpack://_N_E/./node_modules/shiki/dist/chunks/wasm-dynamic.mjs","webpack://_N_E/./node_modules/shiki/dist/themes.mjs","webpack://_N_E/./node_modules/@shikijs/types/dist/index.mjs","webpack://_N_E/./node_modules/@shikijs/vscode-textmate/dist/index.mjs","webpack://_N_E/./node_modules/html-void-elements/index.js","webpack://_N_E/./node_modules/property-information/lib/util/schema.js","webpack://_N_E/./node_modules/property-information/lib/util/merge.js","webpack://_N_E/./node_modules/property-information/lib/normalize.js","webpack://_N_E/./node_modules/property-information/lib/util/info.js","webpack://_N_E/./node_modules/property-information/lib/util/types.js","webpack://_N_E/./node_modules/property-information/lib/util/defined-info.js","webpack://_N_E/./node_modules/property-information/lib/util/create.js","webpack://_N_E/./node_modules/property-information/lib/xlink.js","webpack://_N_E/./node_modules/property-information/lib/xml.js","webpack://_N_E/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://_N_E/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://_N_E/./node_modules/property-information/lib/xmlns.js","webpack://_N_E/./node_modules/property-information/lib/aria.js","webpack://_N_E/./node_modules/property-information/lib/html.js","webpack://_N_E/./node_modules/property-information/lib/svg.js","webpack://_N_E/./node_modules/property-information/index.js","webpack://_N_E/./node_modules/zwitch/index.js","webpack://_N_E/./node_modules/stringify-entities/lib/core.js","webpack://_N_E/./node_modules/stringify-entities/lib/util/to-hexadecimal.js","webpack://_N_E/./node_modules/stringify-entities/lib/util/to-decimal.js","webpack://_N_E/./node_modules/character-entities-legacy/index.js","webpack://_N_E/./node_modules/character-entities-html4/index.js","webpack://_N_E/./node_modules/stringify-entities/lib/constant/dangerous.js","webpack://_N_E/./node_modules/stringify-entities/lib/util/to-named.js","webpack://_N_E/./node_modules/stringify-entities/lib/util/format-smart.js","webpack://_N_E/./node_modules/stringify-entities/lib/index.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/handle/comment.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/handle/doctype.js","webpack://_N_E/./node_modules/ccount/index.js","webpack://_N_E/./node_modules/comma-separated-tokens/index.js","webpack://_N_E/./node_modules/property-information/lib/find.js","webpack://_N_E/./node_modules/space-separated-tokens/index.js","webpack://_N_E/./node_modules/hast-util-whitespace/lib/index.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/omission/util/siblings.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/omission/omission.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/omission/closing.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/omission/opening.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/handle/element.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/handle/text.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/handle/raw.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/handle/root.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/handle/index.js","webpack://_N_E/./node_modules/hast-util-to-html/lib/index.js","webpack://_N_E/./node_modules/@shikijs/engine-oniguruma/dist/index.mjs","webpack://_N_E/./node_modules/@shikijs/core/dist/index.mjs","webpack://_N_E/./node_modules/shiki/dist/bundle-full.mjs"],"sourcesContent":["(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();","import { useMemo } from \"react\";\n\nimport clsx from \"clsx\";\nimport { createHighlighter } from \"shiki\";\n\n// @ts-ignore\nimport style from \"./code.module.css\";\nimport type { CodeProps } from \"./index\";\nimport srs from \"./srs\";\n\nconst highlighter = await createHighlighter({\n  themes: [\"github-light\", \"github-dark\"],\n  langs: [srs],\n});\n\nexport default function CodeHighlight({ code, lang, inline, className }: CodeProps) {\n  const loadedLangs = highlighter.getLoadedLanguages();\n  if (lang !== \"srs\" && lang !== \"text\" && !loadedLangs.includes(lang)) {\n    throw highlighter.loadLanguage(lang);\n  }\n\n  const html = useMemo(() => {\n    return highlighter.codeToHtml(code, {\n      lang,\n      themes: {\n        light: \"github-light\",\n        dark: \"github-dark\",\n      },\n      structure: inline ? \"inline\" : \"classic\",\n      transformers: [\n        {\n          pre(node) {\n            this.addClassToHast(node, style.pre);\n          },\n        },\n      ],\n    });\n  }, [code, lang, inline]);\n\n  return inline ? (\n    <span className=\"not-prose\">\n      <code dangerouslySetInnerHTML={{ __html: html }} className={clsx(\"shiki\", className)} />\n    </span>\n  ) : (\n    <div dangerouslySetInnerHTML={{ __html: html }} className={clsx(\"not-prose\", className)} />\n  );\n}\n","import type { LanguageRegistration } from \"shiki\";\n\n// https://macromates.com/manual/en/language_grammars\nconst srs: LanguageRegistration = {\n  displayName: \"Pseudocodice\",\n  name: \"srs\",\n  scopeName: \"source.srs\",\n  patterns: [\n    { include: \"#constant\" },\n    { include: \"#entity\" },\n    { include: \"#invalid\" },\n    { include: \"#keywords\" },\n    { include: \"#punctuation\" },\n    { include: \"#storage\" },\n    { include: \"#strings\" },\n    { include: \"#support\" },\n  ],\n  repository: {\n    constant: {\n      patterns: [\n        {\n          match: \"\\\\b-?\\\\d+(\\\\.\\\\d+)?\\\\b\",\n          name: \"constant.numeric\",\n        },\n      ],\n    },\n    entity: {\n      patterns: [\n        {\n          match: \"(?<=function\\\\s+)\\\\w+(?=\\\\()\",\n          name: \"entity.name.function\",\n        },\n      ],\n    },\n    invalid: {\n      patterns: [\n        {\n          match: \"\\\\[\\\\?+]\",\n          name: \"invalid.illegal\",\n        },\n      ],\n    },\n    keywords: {\n      patterns: [\n        {\n          match: \"\\\\b(return|end|if|then|else|for|in|while|do)\\\\b\",\n          name: \"keyword.control\",\n        },\n        {\n          match: \"[<>]|\\\\b(mod|and|or|not)\\\\b\",\n          name: \"keyword.operator\",\n        },\n        {\n          match: \"[+/=×…←→≠≤≥-]\",\n          name: \"keyword.operator\", // TODO: scale up\n        },\n      ],\n    },\n    punctuation: {\n      patterns: [\n        {\n          match: \"[\\\\[\\\\]()]\",\n          name: \"punctuation\",\n        },\n      ],\n    },\n    storage: {\n      patterns: [\n        {\n          match: \"\\\\b(integer|variable|function)\\\\b\",\n          name: \"storage.type\",\n        },\n      ],\n    },\n    strings: {\n      patterns: [\n        {\n          match: '\"(?:\\\\\\\\.|[^\\\\\\\\\"])*\"',\n          name: \"string.quoted.double\",\n        },\n      ],\n    },\n    support: {\n      patterns: [\n        {\n          match: \"\\\\b(max|min|output)\\\\b\",\n          name: \"support.function\",\n        },\n      ],\n    },\n    $self: {},\n    $base: {},\n  },\n};\n\nexport default srs;\n","const bundledLanguagesInfo = [\n  {\n    \"id\": \"abap\",\n    \"name\": \"ABAP\",\n    \"import\": () => import('./langs/abap.mjs')\n  },\n  {\n    \"id\": \"actionscript-3\",\n    \"name\": \"ActionScript\",\n    \"import\": () => import('./langs/actionscript-3.mjs')\n  },\n  {\n    \"id\": \"ada\",\n    \"name\": \"Ada\",\n    \"import\": () => import('./langs/ada.mjs')\n  },\n  {\n    \"id\": \"angular-html\",\n    \"name\": \"Angular HTML\",\n    \"import\": () => import('./langs/angular-html.mjs')\n  },\n  {\n    \"id\": \"angular-ts\",\n    \"name\": \"Angular TypeScript\",\n    \"import\": () => import('./langs/angular-ts.mjs')\n  },\n  {\n    \"id\": \"apache\",\n    \"name\": \"Apache Conf\",\n    \"import\": () => import('./langs/apache.mjs')\n  },\n  {\n    \"id\": \"apex\",\n    \"name\": \"Apex\",\n    \"import\": () => import('./langs/apex.mjs')\n  },\n  {\n    \"id\": \"apl\",\n    \"name\": \"APL\",\n    \"import\": () => import('./langs/apl.mjs')\n  },\n  {\n    \"id\": \"applescript\",\n    \"name\": \"AppleScript\",\n    \"import\": () => import('./langs/applescript.mjs')\n  },\n  {\n    \"id\": \"ara\",\n    \"name\": \"Ara\",\n    \"import\": () => import('./langs/ara.mjs')\n  },\n  {\n    \"id\": \"asciidoc\",\n    \"name\": \"AsciiDoc\",\n    \"aliases\": [\n      \"adoc\"\n    ],\n    \"import\": () => import('./langs/asciidoc.mjs')\n  },\n  {\n    \"id\": \"asm\",\n    \"name\": \"Assembly\",\n    \"import\": () => import('./langs/asm.mjs')\n  },\n  {\n    \"id\": \"astro\",\n    \"name\": \"Astro\",\n    \"import\": () => import('./langs/astro.mjs')\n  },\n  {\n    \"id\": \"awk\",\n    \"name\": \"AWK\",\n    \"import\": () => import('./langs/awk.mjs')\n  },\n  {\n    \"id\": \"ballerina\",\n    \"name\": \"Ballerina\",\n    \"import\": () => import('./langs/ballerina.mjs')\n  },\n  {\n    \"id\": \"bat\",\n    \"name\": \"Batch File\",\n    \"aliases\": [\n      \"batch\"\n    ],\n    \"import\": () => import('./langs/bat.mjs')\n  },\n  {\n    \"id\": \"beancount\",\n    \"name\": \"Beancount\",\n    \"import\": () => import('./langs/beancount.mjs')\n  },\n  {\n    \"id\": \"berry\",\n    \"name\": \"Berry\",\n    \"aliases\": [\n      \"be\"\n    ],\n    \"import\": () => import('./langs/berry.mjs')\n  },\n  {\n    \"id\": \"bibtex\",\n    \"name\": \"BibTeX\",\n    \"import\": () => import('./langs/bibtex.mjs')\n  },\n  {\n    \"id\": \"bicep\",\n    \"name\": \"Bicep\",\n    \"import\": () => import('./langs/bicep.mjs')\n  },\n  {\n    \"id\": \"blade\",\n    \"name\": \"Blade\",\n    \"import\": () => import('./langs/blade.mjs')\n  },\n  {\n    \"id\": \"c\",\n    \"name\": \"C\",\n    \"import\": () => import('./langs/c.mjs')\n  },\n  {\n    \"id\": \"cadence\",\n    \"name\": \"Cadence\",\n    \"aliases\": [\n      \"cdc\"\n    ],\n    \"import\": () => import('./langs/cadence.mjs')\n  },\n  {\n    \"id\": \"clarity\",\n    \"name\": \"Clarity\",\n    \"import\": () => import('./langs/clarity.mjs')\n  },\n  {\n    \"id\": \"clojure\",\n    \"name\": \"Clojure\",\n    \"aliases\": [\n      \"clj\"\n    ],\n    \"import\": () => import('./langs/clojure.mjs')\n  },\n  {\n    \"id\": \"cmake\",\n    \"name\": \"CMake\",\n    \"import\": () => import('./langs/cmake.mjs')\n  },\n  {\n    \"id\": \"cobol\",\n    \"name\": \"COBOL\",\n    \"import\": () => import('./langs/cobol.mjs')\n  },\n  {\n    \"id\": \"codeowners\",\n    \"name\": \"CODEOWNERS\",\n    \"import\": () => import('./langs/codeowners.mjs')\n  },\n  {\n    \"id\": \"codeql\",\n    \"name\": \"CodeQL\",\n    \"aliases\": [\n      \"ql\"\n    ],\n    \"import\": () => import('./langs/codeql.mjs')\n  },\n  {\n    \"id\": \"coffee\",\n    \"name\": \"CoffeeScript\",\n    \"aliases\": [\n      \"coffeescript\"\n    ],\n    \"import\": () => import('./langs/coffee.mjs')\n  },\n  {\n    \"id\": \"common-lisp\",\n    \"name\": \"Common Lisp\",\n    \"aliases\": [\n      \"lisp\"\n    ],\n    \"import\": () => import('./langs/common-lisp.mjs')\n  },\n  {\n    \"id\": \"coq\",\n    \"name\": \"Coq\",\n    \"import\": () => import('./langs/coq.mjs')\n  },\n  {\n    \"id\": \"cpp\",\n    \"name\": \"C++\",\n    \"aliases\": [\n      \"c++\"\n    ],\n    \"import\": () => import('./langs/cpp.mjs')\n  },\n  {\n    \"id\": \"crystal\",\n    \"name\": \"Crystal\",\n    \"import\": () => import('./langs/crystal.mjs')\n  },\n  {\n    \"id\": \"csharp\",\n    \"name\": \"C#\",\n    \"aliases\": [\n      \"c#\",\n      \"cs\"\n    ],\n    \"import\": () => import('./langs/csharp.mjs')\n  },\n  {\n    \"id\": \"css\",\n    \"name\": \"CSS\",\n    \"import\": () => import('./langs/css.mjs')\n  },\n  {\n    \"id\": \"csv\",\n    \"name\": \"CSV\",\n    \"import\": () => import('./langs/csv.mjs')\n  },\n  {\n    \"id\": \"cue\",\n    \"name\": \"CUE\",\n    \"import\": () => import('./langs/cue.mjs')\n  },\n  {\n    \"id\": \"cypher\",\n    \"name\": \"Cypher\",\n    \"aliases\": [\n      \"cql\"\n    ],\n    \"import\": () => import('./langs/cypher.mjs')\n  },\n  {\n    \"id\": \"d\",\n    \"name\": \"D\",\n    \"import\": () => import('./langs/d.mjs')\n  },\n  {\n    \"id\": \"dart\",\n    \"name\": \"Dart\",\n    \"import\": () => import('./langs/dart.mjs')\n  },\n  {\n    \"id\": \"dax\",\n    \"name\": \"DAX\",\n    \"import\": () => import('./langs/dax.mjs')\n  },\n  {\n    \"id\": \"desktop\",\n    \"name\": \"Desktop\",\n    \"import\": () => import('./langs/desktop.mjs')\n  },\n  {\n    \"id\": \"diff\",\n    \"name\": \"Diff\",\n    \"import\": () => import('./langs/diff.mjs')\n  },\n  {\n    \"id\": \"docker\",\n    \"name\": \"Dockerfile\",\n    \"aliases\": [\n      \"dockerfile\"\n    ],\n    \"import\": () => import('./langs/docker.mjs')\n  },\n  {\n    \"id\": \"dotenv\",\n    \"name\": \"dotEnv\",\n    \"import\": () => import('./langs/dotenv.mjs')\n  },\n  {\n    \"id\": \"dream-maker\",\n    \"name\": \"Dream Maker\",\n    \"import\": () => import('./langs/dream-maker.mjs')\n  },\n  {\n    \"id\": \"edge\",\n    \"name\": \"Edge\",\n    \"import\": () => import('./langs/edge.mjs')\n  },\n  {\n    \"id\": \"elixir\",\n    \"name\": \"Elixir\",\n    \"import\": () => import('./langs/elixir.mjs')\n  },\n  {\n    \"id\": \"elm\",\n    \"name\": \"Elm\",\n    \"import\": () => import('./langs/elm.mjs')\n  },\n  {\n    \"id\": \"emacs-lisp\",\n    \"name\": \"Emacs Lisp\",\n    \"aliases\": [\n      \"elisp\"\n    ],\n    \"import\": () => import('./langs/emacs-lisp.mjs')\n  },\n  {\n    \"id\": \"erb\",\n    \"name\": \"ERB\",\n    \"import\": () => import('./langs/erb.mjs')\n  },\n  {\n    \"id\": \"erlang\",\n    \"name\": \"Erlang\",\n    \"aliases\": [\n      \"erl\"\n    ],\n    \"import\": () => import('./langs/erlang.mjs')\n  },\n  {\n    \"id\": \"fennel\",\n    \"name\": \"Fennel\",\n    \"import\": () => import('./langs/fennel.mjs')\n  },\n  {\n    \"id\": \"fish\",\n    \"name\": \"Fish\",\n    \"import\": () => import('./langs/fish.mjs')\n  },\n  {\n    \"id\": \"fluent\",\n    \"name\": \"Fluent\",\n    \"aliases\": [\n      \"ftl\"\n    ],\n    \"import\": () => import('./langs/fluent.mjs')\n  },\n  {\n    \"id\": \"fortran-fixed-form\",\n    \"name\": \"Fortran (Fixed Form)\",\n    \"aliases\": [\n      \"f\",\n      \"for\",\n      \"f77\"\n    ],\n    \"import\": () => import('./langs/fortran-fixed-form.mjs')\n  },\n  {\n    \"id\": \"fortran-free-form\",\n    \"name\": \"Fortran (Free Form)\",\n    \"aliases\": [\n      \"f90\",\n      \"f95\",\n      \"f03\",\n      \"f08\",\n      \"f18\"\n    ],\n    \"import\": () => import('./langs/fortran-free-form.mjs')\n  },\n  {\n    \"id\": \"fsharp\",\n    \"name\": \"F#\",\n    \"aliases\": [\n      \"f#\",\n      \"fs\"\n    ],\n    \"import\": () => import('./langs/fsharp.mjs')\n  },\n  {\n    \"id\": \"gdresource\",\n    \"name\": \"GDResource\",\n    \"import\": () => import('./langs/gdresource.mjs')\n  },\n  {\n    \"id\": \"gdscript\",\n    \"name\": \"GDScript\",\n    \"import\": () => import('./langs/gdscript.mjs')\n  },\n  {\n    \"id\": \"gdshader\",\n    \"name\": \"GDShader\",\n    \"import\": () => import('./langs/gdshader.mjs')\n  },\n  {\n    \"id\": \"genie\",\n    \"name\": \"Genie\",\n    \"import\": () => import('./langs/genie.mjs')\n  },\n  {\n    \"id\": \"gherkin\",\n    \"name\": \"Gherkin\",\n    \"import\": () => import('./langs/gherkin.mjs')\n  },\n  {\n    \"id\": \"git-commit\",\n    \"name\": \"Git Commit Message\",\n    \"import\": () => import('./langs/git-commit.mjs')\n  },\n  {\n    \"id\": \"git-rebase\",\n    \"name\": \"Git Rebase Message\",\n    \"import\": () => import('./langs/git-rebase.mjs')\n  },\n  {\n    \"id\": \"gleam\",\n    \"name\": \"Gleam\",\n    \"import\": () => import('./langs/gleam.mjs')\n  },\n  {\n    \"id\": \"glimmer-js\",\n    \"name\": \"Glimmer JS\",\n    \"aliases\": [\n      \"gjs\"\n    ],\n    \"import\": () => import('./langs/glimmer-js.mjs')\n  },\n  {\n    \"id\": \"glimmer-ts\",\n    \"name\": \"Glimmer TS\",\n    \"aliases\": [\n      \"gts\"\n    ],\n    \"import\": () => import('./langs/glimmer-ts.mjs')\n  },\n  {\n    \"id\": \"glsl\",\n    \"name\": \"GLSL\",\n    \"import\": () => import('./langs/glsl.mjs')\n  },\n  {\n    \"id\": \"gnuplot\",\n    \"name\": \"Gnuplot\",\n    \"import\": () => import('./langs/gnuplot.mjs')\n  },\n  {\n    \"id\": \"go\",\n    \"name\": \"Go\",\n    \"import\": () => import('./langs/go.mjs')\n  },\n  {\n    \"id\": \"graphql\",\n    \"name\": \"GraphQL\",\n    \"aliases\": [\n      \"gql\"\n    ],\n    \"import\": () => import('./langs/graphql.mjs')\n  },\n  {\n    \"id\": \"groovy\",\n    \"name\": \"Groovy\",\n    \"import\": () => import('./langs/groovy.mjs')\n  },\n  {\n    \"id\": \"hack\",\n    \"name\": \"Hack\",\n    \"import\": () => import('./langs/hack.mjs')\n  },\n  {\n    \"id\": \"haml\",\n    \"name\": \"Ruby Haml\",\n    \"import\": () => import('./langs/haml.mjs')\n  },\n  {\n    \"id\": \"handlebars\",\n    \"name\": \"Handlebars\",\n    \"aliases\": [\n      \"hbs\"\n    ],\n    \"import\": () => import('./langs/handlebars.mjs')\n  },\n  {\n    \"id\": \"haskell\",\n    \"name\": \"Haskell\",\n    \"aliases\": [\n      \"hs\"\n    ],\n    \"import\": () => import('./langs/haskell.mjs')\n  },\n  {\n    \"id\": \"haxe\",\n    \"name\": \"Haxe\",\n    \"import\": () => import('./langs/haxe.mjs')\n  },\n  {\n    \"id\": \"hcl\",\n    \"name\": \"HashiCorp HCL\",\n    \"import\": () => import('./langs/hcl.mjs')\n  },\n  {\n    \"id\": \"hjson\",\n    \"name\": \"Hjson\",\n    \"import\": () => import('./langs/hjson.mjs')\n  },\n  {\n    \"id\": \"hlsl\",\n    \"name\": \"HLSL\",\n    \"import\": () => import('./langs/hlsl.mjs')\n  },\n  {\n    \"id\": \"html\",\n    \"name\": \"HTML\",\n    \"import\": () => import('./langs/html.mjs')\n  },\n  {\n    \"id\": \"html-derivative\",\n    \"name\": \"HTML (Derivative)\",\n    \"import\": () => import('./langs/html-derivative.mjs')\n  },\n  {\n    \"id\": \"http\",\n    \"name\": \"HTTP\",\n    \"import\": () => import('./langs/http.mjs')\n  },\n  {\n    \"id\": \"hxml\",\n    \"name\": \"HXML\",\n    \"import\": () => import('./langs/hxml.mjs')\n  },\n  {\n    \"id\": \"hy\",\n    \"name\": \"Hy\",\n    \"import\": () => import('./langs/hy.mjs')\n  },\n  {\n    \"id\": \"imba\",\n    \"name\": \"Imba\",\n    \"import\": () => import('./langs/imba.mjs')\n  },\n  {\n    \"id\": \"ini\",\n    \"name\": \"INI\",\n    \"aliases\": [\n      \"properties\"\n    ],\n    \"import\": () => import('./langs/ini.mjs')\n  },\n  {\n    \"id\": \"java\",\n    \"name\": \"Java\",\n    \"import\": () => import('./langs/java.mjs')\n  },\n  {\n    \"id\": \"javascript\",\n    \"name\": \"JavaScript\",\n    \"aliases\": [\n      \"js\"\n    ],\n    \"import\": () => import('./langs/javascript.mjs')\n  },\n  {\n    \"id\": \"jinja\",\n    \"name\": \"Jinja\",\n    \"import\": () => import('./langs/jinja.mjs')\n  },\n  {\n    \"id\": \"jison\",\n    \"name\": \"Jison\",\n    \"import\": () => import('./langs/jison.mjs')\n  },\n  {\n    \"id\": \"json\",\n    \"name\": \"JSON\",\n    \"import\": () => import('./langs/json.mjs')\n  },\n  {\n    \"id\": \"json5\",\n    \"name\": \"JSON5\",\n    \"import\": () => import('./langs/json5.mjs')\n  },\n  {\n    \"id\": \"jsonc\",\n    \"name\": \"JSON with Comments\",\n    \"import\": () => import('./langs/jsonc.mjs')\n  },\n  {\n    \"id\": \"jsonl\",\n    \"name\": \"JSON Lines\",\n    \"import\": () => import('./langs/jsonl.mjs')\n  },\n  {\n    \"id\": \"jsonnet\",\n    \"name\": \"Jsonnet\",\n    \"import\": () => import('./langs/jsonnet.mjs')\n  },\n  {\n    \"id\": \"jssm\",\n    \"name\": \"JSSM\",\n    \"aliases\": [\n      \"fsl\"\n    ],\n    \"import\": () => import('./langs/jssm.mjs')\n  },\n  {\n    \"id\": \"jsx\",\n    \"name\": \"JSX\",\n    \"import\": () => import('./langs/jsx.mjs')\n  },\n  {\n    \"id\": \"julia\",\n    \"name\": \"Julia\",\n    \"aliases\": [\n      \"jl\"\n    ],\n    \"import\": () => import('./langs/julia.mjs')\n  },\n  {\n    \"id\": \"kotlin\",\n    \"name\": \"Kotlin\",\n    \"aliases\": [\n      \"kt\",\n      \"kts\"\n    ],\n    \"import\": () => import('./langs/kotlin.mjs')\n  },\n  {\n    \"id\": \"kusto\",\n    \"name\": \"Kusto\",\n    \"aliases\": [\n      \"kql\"\n    ],\n    \"import\": () => import('./langs/kusto.mjs')\n  },\n  {\n    \"id\": \"latex\",\n    \"name\": \"LaTeX\",\n    \"import\": () => import('./langs/latex.mjs')\n  },\n  {\n    \"id\": \"lean\",\n    \"name\": \"Lean 4\",\n    \"aliases\": [\n      \"lean4\"\n    ],\n    \"import\": () => import('./langs/lean.mjs')\n  },\n  {\n    \"id\": \"less\",\n    \"name\": \"Less\",\n    \"import\": () => import('./langs/less.mjs')\n  },\n  {\n    \"id\": \"liquid\",\n    \"name\": \"Liquid\",\n    \"import\": () => import('./langs/liquid.mjs')\n  },\n  {\n    \"id\": \"log\",\n    \"name\": \"Log file\",\n    \"import\": () => import('./langs/log.mjs')\n  },\n  {\n    \"id\": \"logo\",\n    \"name\": \"Logo\",\n    \"import\": () => import('./langs/logo.mjs')\n  },\n  {\n    \"id\": \"lua\",\n    \"name\": \"Lua\",\n    \"import\": () => import('./langs/lua.mjs')\n  },\n  {\n    \"id\": \"luau\",\n    \"name\": \"Luau\",\n    \"import\": () => import('./langs/luau.mjs')\n  },\n  {\n    \"id\": \"make\",\n    \"name\": \"Makefile\",\n    \"aliases\": [\n      \"makefile\"\n    ],\n    \"import\": () => import('./langs/make.mjs')\n  },\n  {\n    \"id\": \"markdown\",\n    \"name\": \"Markdown\",\n    \"aliases\": [\n      \"md\"\n    ],\n    \"import\": () => import('./langs/markdown.mjs')\n  },\n  {\n    \"id\": \"marko\",\n    \"name\": \"Marko\",\n    \"import\": () => import('./langs/marko.mjs')\n  },\n  {\n    \"id\": \"matlab\",\n    \"name\": \"MATLAB\",\n    \"import\": () => import('./langs/matlab.mjs')\n  },\n  {\n    \"id\": \"mdc\",\n    \"name\": \"MDC\",\n    \"import\": () => import('./langs/mdc.mjs')\n  },\n  {\n    \"id\": \"mdx\",\n    \"name\": \"MDX\",\n    \"import\": () => import('./langs/mdx.mjs')\n  },\n  {\n    \"id\": \"mermaid\",\n    \"name\": \"Mermaid\",\n    \"import\": () => import('./langs/mermaid.mjs')\n  },\n  {\n    \"id\": \"mojo\",\n    \"name\": \"Mojo\",\n    \"import\": () => import('./langs/mojo.mjs')\n  },\n  {\n    \"id\": \"move\",\n    \"name\": \"Move\",\n    \"import\": () => import('./langs/move.mjs')\n  },\n  {\n    \"id\": \"narrat\",\n    \"name\": \"Narrat Language\",\n    \"aliases\": [\n      \"nar\"\n    ],\n    \"import\": () => import('./langs/narrat.mjs')\n  },\n  {\n    \"id\": \"nextflow\",\n    \"name\": \"Nextflow\",\n    \"aliases\": [\n      \"nf\"\n    ],\n    \"import\": () => import('./langs/nextflow.mjs')\n  },\n  {\n    \"id\": \"nginx\",\n    \"name\": \"Nginx\",\n    \"import\": () => import('./langs/nginx.mjs')\n  },\n  {\n    \"id\": \"nim\",\n    \"name\": \"Nim\",\n    \"import\": () => import('./langs/nim.mjs')\n  },\n  {\n    \"id\": \"nix\",\n    \"name\": \"Nix\",\n    \"import\": () => import('./langs/nix.mjs')\n  },\n  {\n    \"id\": \"nushell\",\n    \"name\": \"nushell\",\n    \"aliases\": [\n      \"nu\"\n    ],\n    \"import\": () => import('./langs/nushell.mjs')\n  },\n  {\n    \"id\": \"objective-c\",\n    \"name\": \"Objective-C\",\n    \"aliases\": [\n      \"objc\"\n    ],\n    \"import\": () => import('./langs/objective-c.mjs')\n  },\n  {\n    \"id\": \"objective-cpp\",\n    \"name\": \"Objective-C++\",\n    \"import\": () => import('./langs/objective-cpp.mjs')\n  },\n  {\n    \"id\": \"ocaml\",\n    \"name\": \"OCaml\",\n    \"import\": () => import('./langs/ocaml.mjs')\n  },\n  {\n    \"id\": \"pascal\",\n    \"name\": \"Pascal\",\n    \"import\": () => import('./langs/pascal.mjs')\n  },\n  {\n    \"id\": \"perl\",\n    \"name\": \"Perl\",\n    \"import\": () => import('./langs/perl.mjs')\n  },\n  {\n    \"id\": \"php\",\n    \"name\": \"PHP\",\n    \"import\": () => import('./langs/php.mjs')\n  },\n  {\n    \"id\": \"plsql\",\n    \"name\": \"PL/SQL\",\n    \"import\": () => import('./langs/plsql.mjs')\n  },\n  {\n    \"id\": \"po\",\n    \"name\": \"Gettext PO\",\n    \"aliases\": [\n      \"pot\",\n      \"potx\"\n    ],\n    \"import\": () => import('./langs/po.mjs')\n  },\n  {\n    \"id\": \"postcss\",\n    \"name\": \"PostCSS\",\n    \"import\": () => import('./langs/postcss.mjs')\n  },\n  {\n    \"id\": \"powerquery\",\n    \"name\": \"PowerQuery\",\n    \"import\": () => import('./langs/powerquery.mjs')\n  },\n  {\n    \"id\": \"powershell\",\n    \"name\": \"PowerShell\",\n    \"aliases\": [\n      \"ps\",\n      \"ps1\"\n    ],\n    \"import\": () => import('./langs/powershell.mjs')\n  },\n  {\n    \"id\": \"prisma\",\n    \"name\": \"Prisma\",\n    \"import\": () => import('./langs/prisma.mjs')\n  },\n  {\n    \"id\": \"prolog\",\n    \"name\": \"Prolog\",\n    \"import\": () => import('./langs/prolog.mjs')\n  },\n  {\n    \"id\": \"proto\",\n    \"name\": \"Protocol Buffer 3\",\n    \"aliases\": [\n      \"protobuf\"\n    ],\n    \"import\": () => import('./langs/proto.mjs')\n  },\n  {\n    \"id\": \"pug\",\n    \"name\": \"Pug\",\n    \"aliases\": [\n      \"jade\"\n    ],\n    \"import\": () => import('./langs/pug.mjs')\n  },\n  {\n    \"id\": \"puppet\",\n    \"name\": \"Puppet\",\n    \"import\": () => import('./langs/puppet.mjs')\n  },\n  {\n    \"id\": \"purescript\",\n    \"name\": \"PureScript\",\n    \"import\": () => import('./langs/purescript.mjs')\n  },\n  {\n    \"id\": \"python\",\n    \"name\": \"Python\",\n    \"aliases\": [\n      \"py\"\n    ],\n    \"import\": () => import('./langs/python.mjs')\n  },\n  {\n    \"id\": \"qml\",\n    \"name\": \"QML\",\n    \"import\": () => import('./langs/qml.mjs')\n  },\n  {\n    \"id\": \"qmldir\",\n    \"name\": \"QML Directory\",\n    \"import\": () => import('./langs/qmldir.mjs')\n  },\n  {\n    \"id\": \"qss\",\n    \"name\": \"Qt Style Sheets\",\n    \"import\": () => import('./langs/qss.mjs')\n  },\n  {\n    \"id\": \"r\",\n    \"name\": \"R\",\n    \"import\": () => import('./langs/r.mjs')\n  },\n  {\n    \"id\": \"racket\",\n    \"name\": \"Racket\",\n    \"import\": () => import('./langs/racket.mjs')\n  },\n  {\n    \"id\": \"raku\",\n    \"name\": \"Raku\",\n    \"aliases\": [\n      \"perl6\"\n    ],\n    \"import\": () => import('./langs/raku.mjs')\n  },\n  {\n    \"id\": \"razor\",\n    \"name\": \"ASP.NET Razor\",\n    \"import\": () => import('./langs/razor.mjs')\n  },\n  {\n    \"id\": \"reg\",\n    \"name\": \"Windows Registry Script\",\n    \"import\": () => import('./langs/reg.mjs')\n  },\n  {\n    \"id\": \"regexp\",\n    \"name\": \"RegExp\",\n    \"aliases\": [\n      \"regex\"\n    ],\n    \"import\": () => import('./langs/regexp.mjs')\n  },\n  {\n    \"id\": \"rel\",\n    \"name\": \"Rel\",\n    \"import\": () => import('./langs/rel.mjs')\n  },\n  {\n    \"id\": \"riscv\",\n    \"name\": \"RISC-V\",\n    \"import\": () => import('./langs/riscv.mjs')\n  },\n  {\n    \"id\": \"rst\",\n    \"name\": \"reStructuredText\",\n    \"import\": () => import('./langs/rst.mjs')\n  },\n  {\n    \"id\": \"ruby\",\n    \"name\": \"Ruby\",\n    \"aliases\": [\n      \"rb\"\n    ],\n    \"import\": () => import('./langs/ruby.mjs')\n  },\n  {\n    \"id\": \"rust\",\n    \"name\": \"Rust\",\n    \"aliases\": [\n      \"rs\"\n    ],\n    \"import\": () => import('./langs/rust.mjs')\n  },\n  {\n    \"id\": \"sas\",\n    \"name\": \"SAS\",\n    \"import\": () => import('./langs/sas.mjs')\n  },\n  {\n    \"id\": \"sass\",\n    \"name\": \"Sass\",\n    \"import\": () => import('./langs/sass.mjs')\n  },\n  {\n    \"id\": \"scala\",\n    \"name\": \"Scala\",\n    \"import\": () => import('./langs/scala.mjs')\n  },\n  {\n    \"id\": \"scheme\",\n    \"name\": \"Scheme\",\n    \"import\": () => import('./langs/scheme.mjs')\n  },\n  {\n    \"id\": \"scss\",\n    \"name\": \"SCSS\",\n    \"import\": () => import('./langs/scss.mjs')\n  },\n  {\n    \"id\": \"shaderlab\",\n    \"name\": \"ShaderLab\",\n    \"aliases\": [\n      \"shader\"\n    ],\n    \"import\": () => import('./langs/shaderlab.mjs')\n  },\n  {\n    \"id\": \"shellscript\",\n    \"name\": \"Shell\",\n    \"aliases\": [\n      \"bash\",\n      \"sh\",\n      \"shell\",\n      \"zsh\"\n    ],\n    \"import\": () => import('./langs/shellscript.mjs')\n  },\n  {\n    \"id\": \"shellsession\",\n    \"name\": \"Shell Session\",\n    \"aliases\": [\n      \"console\"\n    ],\n    \"import\": () => import('./langs/shellsession.mjs')\n  },\n  {\n    \"id\": \"smalltalk\",\n    \"name\": \"Smalltalk\",\n    \"import\": () => import('./langs/smalltalk.mjs')\n  },\n  {\n    \"id\": \"solidity\",\n    \"name\": \"Solidity\",\n    \"import\": () => import('./langs/solidity.mjs')\n  },\n  {\n    \"id\": \"soy\",\n    \"name\": \"Closure Templates\",\n    \"aliases\": [\n      \"closure-templates\"\n    ],\n    \"import\": () => import('./langs/soy.mjs')\n  },\n  {\n    \"id\": \"sparql\",\n    \"name\": \"SPARQL\",\n    \"import\": () => import('./langs/sparql.mjs')\n  },\n  {\n    \"id\": \"splunk\",\n    \"name\": \"Splunk Query Language\",\n    \"aliases\": [\n      \"spl\"\n    ],\n    \"import\": () => import('./langs/splunk.mjs')\n  },\n  {\n    \"id\": \"sql\",\n    \"name\": \"SQL\",\n    \"import\": () => import('./langs/sql.mjs')\n  },\n  {\n    \"id\": \"ssh-config\",\n    \"name\": \"SSH Config\",\n    \"import\": () => import('./langs/ssh-config.mjs')\n  },\n  {\n    \"id\": \"stata\",\n    \"name\": \"Stata\",\n    \"import\": () => import('./langs/stata.mjs')\n  },\n  {\n    \"id\": \"stylus\",\n    \"name\": \"Stylus\",\n    \"aliases\": [\n      \"styl\"\n    ],\n    \"import\": () => import('./langs/stylus.mjs')\n  },\n  {\n    \"id\": \"svelte\",\n    \"name\": \"Svelte\",\n    \"import\": () => import('./langs/svelte.mjs')\n  },\n  {\n    \"id\": \"swift\",\n    \"name\": \"Swift\",\n    \"import\": () => import('./langs/swift.mjs')\n  },\n  {\n    \"id\": \"system-verilog\",\n    \"name\": \"SystemVerilog\",\n    \"import\": () => import('./langs/system-verilog.mjs')\n  },\n  {\n    \"id\": \"systemd\",\n    \"name\": \"Systemd Units\",\n    \"import\": () => import('./langs/systemd.mjs')\n  },\n  {\n    \"id\": \"tasl\",\n    \"name\": \"Tasl\",\n    \"import\": () => import('./langs/tasl.mjs')\n  },\n  {\n    \"id\": \"tcl\",\n    \"name\": \"Tcl\",\n    \"import\": () => import('./langs/tcl.mjs')\n  },\n  {\n    \"id\": \"templ\",\n    \"name\": \"Templ\",\n    \"import\": () => import('./langs/templ.mjs')\n  },\n  {\n    \"id\": \"terraform\",\n    \"name\": \"Terraform\",\n    \"aliases\": [\n      \"tf\",\n      \"tfvars\"\n    ],\n    \"import\": () => import('./langs/terraform.mjs')\n  },\n  {\n    \"id\": \"tex\",\n    \"name\": \"TeX\",\n    \"import\": () => import('./langs/tex.mjs')\n  },\n  {\n    \"id\": \"toml\",\n    \"name\": \"TOML\",\n    \"import\": () => import('./langs/toml.mjs')\n  },\n  {\n    \"id\": \"ts-tags\",\n    \"name\": \"TypeScript with Tags\",\n    \"aliases\": [\n      \"lit\"\n    ],\n    \"import\": () => import('./langs/ts-tags.mjs')\n  },\n  {\n    \"id\": \"tsv\",\n    \"name\": \"TSV\",\n    \"import\": () => import('./langs/tsv.mjs')\n  },\n  {\n    \"id\": \"tsx\",\n    \"name\": \"TSX\",\n    \"import\": () => import('./langs/tsx.mjs')\n  },\n  {\n    \"id\": \"turtle\",\n    \"name\": \"Turtle\",\n    \"import\": () => import('./langs/turtle.mjs')\n  },\n  {\n    \"id\": \"twig\",\n    \"name\": \"Twig\",\n    \"import\": () => import('./langs/twig.mjs')\n  },\n  {\n    \"id\": \"typescript\",\n    \"name\": \"TypeScript\",\n    \"aliases\": [\n      \"ts\"\n    ],\n    \"import\": () => import('./langs/typescript.mjs')\n  },\n  {\n    \"id\": \"typespec\",\n    \"name\": \"TypeSpec\",\n    \"aliases\": [\n      \"tsp\"\n    ],\n    \"import\": () => import('./langs/typespec.mjs')\n  },\n  {\n    \"id\": \"typst\",\n    \"name\": \"Typst\",\n    \"aliases\": [\n      \"typ\"\n    ],\n    \"import\": () => import('./langs/typst.mjs')\n  },\n  {\n    \"id\": \"v\",\n    \"name\": \"V\",\n    \"import\": () => import('./langs/v.mjs')\n  },\n  {\n    \"id\": \"vala\",\n    \"name\": \"Vala\",\n    \"import\": () => import('./langs/vala.mjs')\n  },\n  {\n    \"id\": \"vb\",\n    \"name\": \"Visual Basic\",\n    \"aliases\": [\n      \"cmd\"\n    ],\n    \"import\": () => import('./langs/vb.mjs')\n  },\n  {\n    \"id\": \"verilog\",\n    \"name\": \"Verilog\",\n    \"import\": () => import('./langs/verilog.mjs')\n  },\n  {\n    \"id\": \"vhdl\",\n    \"name\": \"VHDL\",\n    \"import\": () => import('./langs/vhdl.mjs')\n  },\n  {\n    \"id\": \"viml\",\n    \"name\": \"Vim Script\",\n    \"aliases\": [\n      \"vim\",\n      \"vimscript\"\n    ],\n    \"import\": () => import('./langs/viml.mjs')\n  },\n  {\n    \"id\": \"vue\",\n    \"name\": \"Vue\",\n    \"import\": () => import('./langs/vue.mjs')\n  },\n  {\n    \"id\": \"vue-html\",\n    \"name\": \"Vue HTML\",\n    \"import\": () => import('./langs/vue-html.mjs')\n  },\n  {\n    \"id\": \"vyper\",\n    \"name\": \"Vyper\",\n    \"aliases\": [\n      \"vy\"\n    ],\n    \"import\": () => import('./langs/vyper.mjs')\n  },\n  {\n    \"id\": \"wasm\",\n    \"name\": \"WebAssembly\",\n    \"import\": () => import('./langs/wasm.mjs')\n  },\n  {\n    \"id\": \"wenyan\",\n    \"name\": \"Wenyan\",\n    \"aliases\": [\n      \"\\u6587\\u8A00\"\n    ],\n    \"import\": () => import('./langs/wenyan.mjs')\n  },\n  {\n    \"id\": \"wgsl\",\n    \"name\": \"WGSL\",\n    \"import\": () => import('./langs/wgsl.mjs')\n  },\n  {\n    \"id\": \"wikitext\",\n    \"name\": \"Wikitext\",\n    \"aliases\": [\n      \"mediawiki\",\n      \"wiki\"\n    ],\n    \"import\": () => import('./langs/wikitext.mjs')\n  },\n  {\n    \"id\": \"wolfram\",\n    \"name\": \"Wolfram\",\n    \"aliases\": [\n      \"wl\"\n    ],\n    \"import\": () => import('./langs/wolfram.mjs')\n  },\n  {\n    \"id\": \"xml\",\n    \"name\": \"XML\",\n    \"import\": () => import('./langs/xml.mjs')\n  },\n  {\n    \"id\": \"xsl\",\n    \"name\": \"XSL\",\n    \"import\": () => import('./langs/xsl.mjs')\n  },\n  {\n    \"id\": \"yaml\",\n    \"name\": \"YAML\",\n    \"aliases\": [\n      \"yml\"\n    ],\n    \"import\": () => import('./langs/yaml.mjs')\n  },\n  {\n    \"id\": \"zenscript\",\n    \"name\": \"ZenScript\",\n    \"import\": () => import('./langs/zenscript.mjs')\n  },\n  {\n    \"id\": \"zig\",\n    \"name\": \"Zig\",\n    \"import\": () => import('./langs/zig.mjs')\n  }\n];\nconst bundledLanguagesBase = Object.fromEntries(bundledLanguagesInfo.map((i) => [i.id, i.import]));\nconst bundledLanguagesAlias = Object.fromEntries(bundledLanguagesInfo.flatMap((i) => i.aliases?.map((a) => [a, i.import]) || []));\nconst bundledLanguages = {\n  ...bundledLanguagesBase,\n  ...bundledLanguagesAlias\n};\n\nexport { bundledLanguages, bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo };\n","const getWasmInlined = async (info) => {\n  return import('shiki/wasm').then((wasm) => wasm.default(info));\n};\n\nexport { getWasmInlined as g };\n","const bundledThemesInfo = [\n  {\n    \"id\": \"andromeeda\",\n    \"displayName\": \"Andromeeda\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/andromeeda.mjs')\n  },\n  {\n    \"id\": \"aurora-x\",\n    \"displayName\": \"Aurora X\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/aurora-x.mjs')\n  },\n  {\n    \"id\": \"ayu-dark\",\n    \"displayName\": \"Ayu Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/ayu-dark.mjs')\n  },\n  {\n    \"id\": \"catppuccin-frappe\",\n    \"displayName\": \"Catppuccin Frapp\\xE9\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-frappe.mjs')\n  },\n  {\n    \"id\": \"catppuccin-latte\",\n    \"displayName\": \"Catppuccin Latte\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/catppuccin-latte.mjs')\n  },\n  {\n    \"id\": \"catppuccin-macchiato\",\n    \"displayName\": \"Catppuccin Macchiato\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-macchiato.mjs')\n  },\n  {\n    \"id\": \"catppuccin-mocha\",\n    \"displayName\": \"Catppuccin Mocha\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/catppuccin-mocha.mjs')\n  },\n  {\n    \"id\": \"dark-plus\",\n    \"displayName\": \"Dark Plus\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dark-plus.mjs')\n  },\n  {\n    \"id\": \"dracula\",\n    \"displayName\": \"Dracula Theme\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dracula.mjs')\n  },\n  {\n    \"id\": \"dracula-soft\",\n    \"displayName\": \"Dracula Theme Soft\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/dracula-soft.mjs')\n  },\n  {\n    \"id\": \"everforest-dark\",\n    \"displayName\": \"Everforest Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/everforest-dark.mjs')\n  },\n  {\n    \"id\": \"everforest-light\",\n    \"displayName\": \"Everforest Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/everforest-light.mjs')\n  },\n  {\n    \"id\": \"github-dark\",\n    \"displayName\": \"GitHub Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark.mjs')\n  },\n  {\n    \"id\": \"github-dark-default\",\n    \"displayName\": \"GitHub Dark Default\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark-default.mjs')\n  },\n  {\n    \"id\": \"github-dark-dimmed\",\n    \"displayName\": \"GitHub Dark Dimmed\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark-dimmed.mjs')\n  },\n  {\n    \"id\": \"github-dark-high-contrast\",\n    \"displayName\": \"GitHub Dark High Contrast\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/github-dark-high-contrast.mjs')\n  },\n  {\n    \"id\": \"github-light\",\n    \"displayName\": \"GitHub Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/github-light.mjs')\n  },\n  {\n    \"id\": \"github-light-default\",\n    \"displayName\": \"GitHub Light Default\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/github-light-default.mjs')\n  },\n  {\n    \"id\": \"github-light-high-contrast\",\n    \"displayName\": \"GitHub Light High Contrast\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/github-light-high-contrast.mjs')\n  },\n  {\n    \"id\": \"houston\",\n    \"displayName\": \"Houston\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/houston.mjs')\n  },\n  {\n    \"id\": \"laserwave\",\n    \"displayName\": \"LaserWave\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/laserwave.mjs')\n  },\n  {\n    \"id\": \"light-plus\",\n    \"displayName\": \"Light Plus\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/light-plus.mjs')\n  },\n  {\n    \"id\": \"material-theme\",\n    \"displayName\": \"Material Theme\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme.mjs')\n  },\n  {\n    \"id\": \"material-theme-darker\",\n    \"displayName\": \"Material Theme Darker\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-darker.mjs')\n  },\n  {\n    \"id\": \"material-theme-lighter\",\n    \"displayName\": \"Material Theme Lighter\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/material-theme-lighter.mjs')\n  },\n  {\n    \"id\": \"material-theme-ocean\",\n    \"displayName\": \"Material Theme Ocean\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-ocean.mjs')\n  },\n  {\n    \"id\": \"material-theme-palenight\",\n    \"displayName\": \"Material Theme Palenight\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/material-theme-palenight.mjs')\n  },\n  {\n    \"id\": \"min-dark\",\n    \"displayName\": \"Min Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/min-dark.mjs')\n  },\n  {\n    \"id\": \"min-light\",\n    \"displayName\": \"Min Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/min-light.mjs')\n  },\n  {\n    \"id\": \"monokai\",\n    \"displayName\": \"Monokai\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/monokai.mjs')\n  },\n  {\n    \"id\": \"night-owl\",\n    \"displayName\": \"Night Owl\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/night-owl.mjs')\n  },\n  {\n    \"id\": \"nord\",\n    \"displayName\": \"Nord\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/nord.mjs')\n  },\n  {\n    \"id\": \"one-dark-pro\",\n    \"displayName\": \"One Dark Pro\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/one-dark-pro.mjs')\n  },\n  {\n    \"id\": \"one-light\",\n    \"displayName\": \"One Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/one-light.mjs')\n  },\n  {\n    \"id\": \"plastic\",\n    \"displayName\": \"Plastic\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/plastic.mjs')\n  },\n  {\n    \"id\": \"poimandres\",\n    \"displayName\": \"Poimandres\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/poimandres.mjs')\n  },\n  {\n    \"id\": \"red\",\n    \"displayName\": \"Red\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/red.mjs')\n  },\n  {\n    \"id\": \"rose-pine\",\n    \"displayName\": \"Ros\\xE9 Pine\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/rose-pine.mjs')\n  },\n  {\n    \"id\": \"rose-pine-dawn\",\n    \"displayName\": \"Ros\\xE9 Pine Dawn\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/rose-pine-dawn.mjs')\n  },\n  {\n    \"id\": \"rose-pine-moon\",\n    \"displayName\": \"Ros\\xE9 Pine Moon\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/rose-pine-moon.mjs')\n  },\n  {\n    \"id\": \"slack-dark\",\n    \"displayName\": \"Slack Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/slack-dark.mjs')\n  },\n  {\n    \"id\": \"slack-ochin\",\n    \"displayName\": \"Slack Ochin\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/slack-ochin.mjs')\n  },\n  {\n    \"id\": \"snazzy-light\",\n    \"displayName\": \"Snazzy Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/snazzy-light.mjs')\n  },\n  {\n    \"id\": \"solarized-dark\",\n    \"displayName\": \"Solarized Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/solarized-dark.mjs')\n  },\n  {\n    \"id\": \"solarized-light\",\n    \"displayName\": \"Solarized Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/solarized-light.mjs')\n  },\n  {\n    \"id\": \"synthwave-84\",\n    \"displayName\": \"Synthwave '84\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/synthwave-84.mjs')\n  },\n  {\n    \"id\": \"tokyo-night\",\n    \"displayName\": \"Tokyo Night\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/tokyo-night.mjs')\n  },\n  {\n    \"id\": \"vesper\",\n    \"displayName\": \"Vesper\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vesper.mjs')\n  },\n  {\n    \"id\": \"vitesse-black\",\n    \"displayName\": \"Vitesse Black\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vitesse-black.mjs')\n  },\n  {\n    \"id\": \"vitesse-dark\",\n    \"displayName\": \"Vitesse Dark\",\n    \"type\": \"dark\",\n    \"import\": () => import('./themes/vitesse-dark.mjs')\n  },\n  {\n    \"id\": \"vitesse-light\",\n    \"displayName\": \"Vitesse Light\",\n    \"type\": \"light\",\n    \"import\": () => import('./themes/vitesse-light.mjs')\n  }\n];\nconst bundledThemes = Object.fromEntries(bundledThemesInfo.map((i) => [i.id, i.import]));\n\nexport { bundledThemes, bundledThemesInfo };\n","class ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nexport { ShikiError };\n","// src/utils.ts\nfunction clone(something) {\n  return doClone(something);\n}\nfunction doClone(something) {\n  if (Array.isArray(something)) {\n    return cloneArray(something);\n  }\n  if (typeof something === \"object\") {\n    return cloneObj(something);\n  }\n  return something;\n}\nfunction cloneArray(arr) {\n  let r = [];\n  for (let i = 0, len = arr.length; i < len; i++) {\n    r[i] = doClone(arr[i]);\n  }\n  return r;\n}\nfunction cloneObj(obj) {\n  let r = {};\n  for (let key in obj) {\n    r[key] = doClone(obj[key]);\n  }\n  return r;\n}\nfunction mergeObjects(target, ...sources) {\n  sources.forEach((source) => {\n    for (let key in source) {\n      target[key] = source[key];\n    }\n  });\n  return target;\n}\nfunction basename(path) {\n  const idx = ~path.lastIndexOf(\"/\") || ~path.lastIndexOf(\"\\\\\");\n  if (idx === 0) {\n    return path;\n  } else if (~idx === path.length - 1) {\n    return basename(path.substring(0, path.length - 1));\n  } else {\n    return path.substr(~idx + 1);\n  }\n}\nvar CAPTURING_REGEX_SOURCE = /\\$(\\d+)|\\${(\\d+):\\/(downcase|upcase)}/g;\nvar RegexSource = class {\n  static hasCaptures(regexSource) {\n    if (regexSource === null) {\n      return false;\n    }\n    CAPTURING_REGEX_SOURCE.lastIndex = 0;\n    return CAPTURING_REGEX_SOURCE.test(regexSource);\n  }\n  static replaceCaptures(regexSource, captureSource, captureIndices) {\n    return regexSource.replace(CAPTURING_REGEX_SOURCE, (match, index, commandIndex, command) => {\n      let capture = captureIndices[parseInt(index || commandIndex, 10)];\n      if (capture) {\n        let result = captureSource.substring(capture.start, capture.end);\n        while (result[0] === \".\") {\n          result = result.substring(1);\n        }\n        switch (command) {\n          case \"downcase\":\n            return result.toLowerCase();\n          case \"upcase\":\n            return result.toUpperCase();\n          default:\n            return result;\n        }\n      } else {\n        return match;\n      }\n    });\n  }\n};\nfunction strcmp(a, b) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\nfunction strArrCmp(a, b) {\n  if (a === null && b === null) {\n    return 0;\n  }\n  if (!a) {\n    return -1;\n  }\n  if (!b) {\n    return 1;\n  }\n  let len1 = a.length;\n  let len2 = b.length;\n  if (len1 === len2) {\n    for (let i = 0; i < len1; i++) {\n      let res = strcmp(a[i], b[i]);\n      if (res !== 0) {\n        return res;\n      }\n    }\n    return 0;\n  }\n  return len1 - len2;\n}\nfunction isValidHexColor(hex) {\n  if (/^#[0-9a-f]{6}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{8}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{3}$/i.test(hex)) {\n    return true;\n  }\n  if (/^#[0-9a-f]{4}$/i.test(hex)) {\n    return true;\n  }\n  return false;\n}\nfunction escapeRegExpCharacters(value) {\n  return value.replace(/[\\-\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, \"\\\\$&\");\n}\nvar CachedFn = class {\n  constructor(fn) {\n    this.fn = fn;\n    this.cache = /* @__PURE__ */ new Map();\n  }\n  get(key) {\n    if (this.cache.has(key)) {\n      return this.cache.get(key);\n    }\n    const value = this.fn(key);\n    this.cache.set(key, value);\n    return value;\n  }\n};\n\n// src/theme.ts\nvar Theme = class {\n  constructor(_colorMap, _defaults, _root) {\n    this._colorMap = _colorMap;\n    this._defaults = _defaults;\n    this._root = _root;\n    this._cachedMatchRoot = new CachedFn(\n      (scopeName) => this._root.match(scopeName)\n    );\n  }\n  static createFromRawTheme(source, colorMap) {\n    return this.createFromParsedTheme(parseTheme(source), colorMap);\n  }\n  static createFromParsedTheme(source, colorMap) {\n    return resolveParsedThemeRules(source, colorMap);\n  }\n  getColorMap() {\n    return this._colorMap.getColorMap();\n  }\n  getDefaults() {\n    return this._defaults;\n  }\n  match(scopePath) {\n    if (scopePath === null) {\n      return this._defaults;\n    }\n    const scopeName = scopePath.scopeName;\n    const matchingTrieElements = this._cachedMatchRoot.get(scopeName);\n    const effectiveRule = matchingTrieElements.find(\n      (v) => _scopePathMatchesParentScopes(scopePath.parent, v.parentScopes)\n    );\n    if (!effectiveRule) {\n      return null;\n    }\n    return new StyleAttributes(\n      effectiveRule.fontStyle,\n      effectiveRule.foreground,\n      effectiveRule.background\n    );\n  }\n};\nvar ScopeStack = class _ScopeStack {\n  constructor(parent, scopeName) {\n    this.parent = parent;\n    this.scopeName = scopeName;\n  }\n  static push(path, scopeNames) {\n    for (const name of scopeNames) {\n      path = new _ScopeStack(path, name);\n    }\n    return path;\n  }\n  static from(...segments) {\n    let result = null;\n    for (let i = 0; i < segments.length; i++) {\n      result = new _ScopeStack(result, segments[i]);\n    }\n    return result;\n  }\n  push(scopeName) {\n    return new _ScopeStack(this, scopeName);\n  }\n  getSegments() {\n    let item = this;\n    const result = [];\n    while (item) {\n      result.push(item.scopeName);\n      item = item.parent;\n    }\n    result.reverse();\n    return result;\n  }\n  toString() {\n    return this.getSegments().join(\" \");\n  }\n  extends(other) {\n    if (this === other) {\n      return true;\n    }\n    if (this.parent === null) {\n      return false;\n    }\n    return this.parent.extends(other);\n  }\n  getExtensionIfDefined(base) {\n    const result = [];\n    let item = this;\n    while (item && item !== base) {\n      result.push(item.scopeName);\n      item = item.parent;\n    }\n    return item === base ? result.reverse() : void 0;\n  }\n};\nfunction _scopePathMatchesParentScopes(scopePath, parentScopes) {\n  if (parentScopes.length === 0) {\n    return true;\n  }\n  for (let index = 0; index < parentScopes.length; index++) {\n    let scopePattern = parentScopes[index];\n    let scopeMustMatch = false;\n    if (scopePattern === \">\") {\n      if (index === parentScopes.length - 1) {\n        return false;\n      }\n      scopePattern = parentScopes[++index];\n      scopeMustMatch = true;\n    }\n    while (scopePath) {\n      if (_matchesScope(scopePath.scopeName, scopePattern)) {\n        break;\n      }\n      if (scopeMustMatch) {\n        return false;\n      }\n      scopePath = scopePath.parent;\n    }\n    if (!scopePath) {\n      return false;\n    }\n    scopePath = scopePath.parent;\n  }\n  return true;\n}\nfunction _matchesScope(scopeName, scopePattern) {\n  return scopePattern === scopeName || scopeName.startsWith(scopePattern) && scopeName[scopePattern.length] === \".\";\n}\nvar StyleAttributes = class {\n  constructor(fontStyle, foregroundId, backgroundId) {\n    this.fontStyle = fontStyle;\n    this.foregroundId = foregroundId;\n    this.backgroundId = backgroundId;\n  }\n};\nfunction parseTheme(source) {\n  if (!source) {\n    return [];\n  }\n  if (!source.settings || !Array.isArray(source.settings)) {\n    return [];\n  }\n  let settings = source.settings;\n  let result = [], resultLen = 0;\n  for (let i = 0, len = settings.length; i < len; i++) {\n    let entry = settings[i];\n    if (!entry.settings) {\n      continue;\n    }\n    let scopes;\n    if (typeof entry.scope === \"string\") {\n      let _scope = entry.scope;\n      _scope = _scope.replace(/^[,]+/, \"\");\n      _scope = _scope.replace(/[,]+$/, \"\");\n      scopes = _scope.split(\",\");\n    } else if (Array.isArray(entry.scope)) {\n      scopes = entry.scope;\n    } else {\n      scopes = [\"\"];\n    }\n    let fontStyle = -1 /* NotSet */;\n    if (typeof entry.settings.fontStyle === \"string\") {\n      fontStyle = 0 /* None */;\n      let segments = entry.settings.fontStyle.split(\" \");\n      for (let j = 0, lenJ = segments.length; j < lenJ; j++) {\n        let segment = segments[j];\n        switch (segment) {\n          case \"italic\":\n            fontStyle = fontStyle | 1 /* Italic */;\n            break;\n          case \"bold\":\n            fontStyle = fontStyle | 2 /* Bold */;\n            break;\n          case \"underline\":\n            fontStyle = fontStyle | 4 /* Underline */;\n            break;\n          case \"strikethrough\":\n            fontStyle = fontStyle | 8 /* Strikethrough */;\n            break;\n        }\n      }\n    }\n    let foreground = null;\n    if (typeof entry.settings.foreground === \"string\" && isValidHexColor(entry.settings.foreground)) {\n      foreground = entry.settings.foreground;\n    }\n    let background = null;\n    if (typeof entry.settings.background === \"string\" && isValidHexColor(entry.settings.background)) {\n      background = entry.settings.background;\n    }\n    for (let j = 0, lenJ = scopes.length; j < lenJ; j++) {\n      let _scope = scopes[j].trim();\n      let segments = _scope.split(\" \");\n      let scope = segments[segments.length - 1];\n      let parentScopes = null;\n      if (segments.length > 1) {\n        parentScopes = segments.slice(0, segments.length - 1);\n        parentScopes.reverse();\n      }\n      result[resultLen++] = new ParsedThemeRule(\n        scope,\n        parentScopes,\n        i,\n        fontStyle,\n        foreground,\n        background\n      );\n    }\n  }\n  return result;\n}\nvar ParsedThemeRule = class {\n  constructor(scope, parentScopes, index, fontStyle, foreground, background) {\n    this.scope = scope;\n    this.parentScopes = parentScopes;\n    this.index = index;\n    this.fontStyle = fontStyle;\n    this.foreground = foreground;\n    this.background = background;\n  }\n};\nvar FontStyle = /* @__PURE__ */ ((FontStyle2) => {\n  FontStyle2[FontStyle2[\"NotSet\"] = -1] = \"NotSet\";\n  FontStyle2[FontStyle2[\"None\"] = 0] = \"None\";\n  FontStyle2[FontStyle2[\"Italic\"] = 1] = \"Italic\";\n  FontStyle2[FontStyle2[\"Bold\"] = 2] = \"Bold\";\n  FontStyle2[FontStyle2[\"Underline\"] = 4] = \"Underline\";\n  FontStyle2[FontStyle2[\"Strikethrough\"] = 8] = \"Strikethrough\";\n  return FontStyle2;\n})(FontStyle || {});\nfunction resolveParsedThemeRules(parsedThemeRules, _colorMap) {\n  parsedThemeRules.sort((a, b) => {\n    let r = strcmp(a.scope, b.scope);\n    if (r !== 0) {\n      return r;\n    }\n    r = strArrCmp(a.parentScopes, b.parentScopes);\n    if (r !== 0) {\n      return r;\n    }\n    return a.index - b.index;\n  });\n  let defaultFontStyle = 0 /* None */;\n  let defaultForeground = \"#000000\";\n  let defaultBackground = \"#ffffff\";\n  while (parsedThemeRules.length >= 1 && parsedThemeRules[0].scope === \"\") {\n    let incomingDefaults = parsedThemeRules.shift();\n    if (incomingDefaults.fontStyle !== -1 /* NotSet */) {\n      defaultFontStyle = incomingDefaults.fontStyle;\n    }\n    if (incomingDefaults.foreground !== null) {\n      defaultForeground = incomingDefaults.foreground;\n    }\n    if (incomingDefaults.background !== null) {\n      defaultBackground = incomingDefaults.background;\n    }\n  }\n  let colorMap = new ColorMap(_colorMap);\n  let defaults = new StyleAttributes(defaultFontStyle, colorMap.getId(defaultForeground), colorMap.getId(defaultBackground));\n  let root = new ThemeTrieElement(new ThemeTrieElementRule(0, null, -1 /* NotSet */, 0, 0), []);\n  for (let i = 0, len = parsedThemeRules.length; i < len; i++) {\n    let rule = parsedThemeRules[i];\n    root.insert(0, rule.scope, rule.parentScopes, rule.fontStyle, colorMap.getId(rule.foreground), colorMap.getId(rule.background));\n  }\n  return new Theme(colorMap, defaults, root);\n}\nvar ColorMap = class {\n  constructor(_colorMap) {\n    this._lastColorId = 0;\n    this._id2color = [];\n    this._color2id = /* @__PURE__ */ Object.create(null);\n    if (Array.isArray(_colorMap)) {\n      this._isFrozen = true;\n      for (let i = 0, len = _colorMap.length; i < len; i++) {\n        this._color2id[_colorMap[i]] = i;\n        this._id2color[i] = _colorMap[i];\n      }\n    } else {\n      this._isFrozen = false;\n    }\n  }\n  getId(color) {\n    if (color === null) {\n      return 0;\n    }\n    color = color.toUpperCase();\n    let value = this._color2id[color];\n    if (value) {\n      return value;\n    }\n    if (this._isFrozen) {\n      throw new Error(`Missing color in color map - ${color}`);\n    }\n    value = ++this._lastColorId;\n    this._color2id[color] = value;\n    this._id2color[value] = color;\n    return value;\n  }\n  getColorMap() {\n    return this._id2color.slice(0);\n  }\n};\nvar emptyParentScopes = Object.freeze([]);\nvar ThemeTrieElementRule = class _ThemeTrieElementRule {\n  constructor(scopeDepth, parentScopes, fontStyle, foreground, background) {\n    this.scopeDepth = scopeDepth;\n    this.parentScopes = parentScopes || emptyParentScopes;\n    this.fontStyle = fontStyle;\n    this.foreground = foreground;\n    this.background = background;\n  }\n  clone() {\n    return new _ThemeTrieElementRule(this.scopeDepth, this.parentScopes, this.fontStyle, this.foreground, this.background);\n  }\n  static cloneArr(arr) {\n    let r = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n      r[i] = arr[i].clone();\n    }\n    return r;\n  }\n  acceptOverwrite(scopeDepth, fontStyle, foreground, background) {\n    if (this.scopeDepth > scopeDepth) {\n      console.log(\"how did this happen?\");\n    } else {\n      this.scopeDepth = scopeDepth;\n    }\n    if (fontStyle !== -1 /* NotSet */) {\n      this.fontStyle = fontStyle;\n    }\n    if (foreground !== 0) {\n      this.foreground = foreground;\n    }\n    if (background !== 0) {\n      this.background = background;\n    }\n  }\n};\nvar ThemeTrieElement = class _ThemeTrieElement {\n  constructor(_mainRule, rulesWithParentScopes = [], _children = {}) {\n    this._mainRule = _mainRule;\n    this._children = _children;\n    this._rulesWithParentScopes = rulesWithParentScopes;\n  }\n  static _cmpBySpecificity(a, b) {\n    if (a.scopeDepth !== b.scopeDepth) {\n      return b.scopeDepth - a.scopeDepth;\n    }\n    let aParentIndex = 0;\n    let bParentIndex = 0;\n    while (true) {\n      if (a.parentScopes[aParentIndex] === \">\") {\n        aParentIndex++;\n      }\n      if (b.parentScopes[bParentIndex] === \">\") {\n        bParentIndex++;\n      }\n      if (aParentIndex >= a.parentScopes.length || bParentIndex >= b.parentScopes.length) {\n        break;\n      }\n      const parentScopeLengthDiff = b.parentScopes[bParentIndex].length - a.parentScopes[aParentIndex].length;\n      if (parentScopeLengthDiff !== 0) {\n        return parentScopeLengthDiff;\n      }\n      aParentIndex++;\n      bParentIndex++;\n    }\n    return b.parentScopes.length - a.parentScopes.length;\n  }\n  match(scope) {\n    if (scope !== \"\") {\n      let dotIndex = scope.indexOf(\".\");\n      let head;\n      let tail;\n      if (dotIndex === -1) {\n        head = scope;\n        tail = \"\";\n      } else {\n        head = scope.substring(0, dotIndex);\n        tail = scope.substring(dotIndex + 1);\n      }\n      if (this._children.hasOwnProperty(head)) {\n        return this._children[head].match(tail);\n      }\n    }\n    const rules = this._rulesWithParentScopes.concat(this._mainRule);\n    rules.sort(_ThemeTrieElement._cmpBySpecificity);\n    return rules;\n  }\n  insert(scopeDepth, scope, parentScopes, fontStyle, foreground, background) {\n    if (scope === \"\") {\n      this._doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background);\n      return;\n    }\n    let dotIndex = scope.indexOf(\".\");\n    let head;\n    let tail;\n    if (dotIndex === -1) {\n      head = scope;\n      tail = \"\";\n    } else {\n      head = scope.substring(0, dotIndex);\n      tail = scope.substring(dotIndex + 1);\n    }\n    let child;\n    if (this._children.hasOwnProperty(head)) {\n      child = this._children[head];\n    } else {\n      child = new _ThemeTrieElement(this._mainRule.clone(), ThemeTrieElementRule.cloneArr(this._rulesWithParentScopes));\n      this._children[head] = child;\n    }\n    child.insert(scopeDepth + 1, tail, parentScopes, fontStyle, foreground, background);\n  }\n  _doInsertHere(scopeDepth, parentScopes, fontStyle, foreground, background) {\n    if (parentScopes === null) {\n      this._mainRule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n      return;\n    }\n    for (let i = 0, len = this._rulesWithParentScopes.length; i < len; i++) {\n      let rule = this._rulesWithParentScopes[i];\n      if (strArrCmp(rule.parentScopes, parentScopes) === 0) {\n        rule.acceptOverwrite(scopeDepth, fontStyle, foreground, background);\n        return;\n      }\n    }\n    if (fontStyle === -1 /* NotSet */) {\n      fontStyle = this._mainRule.fontStyle;\n    }\n    if (foreground === 0) {\n      foreground = this._mainRule.foreground;\n    }\n    if (background === 0) {\n      background = this._mainRule.background;\n    }\n    this._rulesWithParentScopes.push(new ThemeTrieElementRule(scopeDepth, parentScopes, fontStyle, foreground, background));\n  }\n};\n\n// src/encodedTokenAttributes.ts\nvar EncodedTokenMetadata = class _EncodedTokenMetadata {\n  static toBinaryStr(encodedTokenAttributes) {\n    return encodedTokenAttributes.toString(2).padStart(32, \"0\");\n  }\n  static print(encodedTokenAttributes) {\n    const languageId = _EncodedTokenMetadata.getLanguageId(encodedTokenAttributes);\n    const tokenType = _EncodedTokenMetadata.getTokenType(encodedTokenAttributes);\n    const fontStyle = _EncodedTokenMetadata.getFontStyle(encodedTokenAttributes);\n    const foreground = _EncodedTokenMetadata.getForeground(encodedTokenAttributes);\n    const background = _EncodedTokenMetadata.getBackground(encodedTokenAttributes);\n    console.log({\n      languageId,\n      tokenType,\n      fontStyle,\n      foreground,\n      background\n    });\n  }\n  static getLanguageId(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 255 /* LANGUAGEID_MASK */) >>> 0 /* LANGUAGEID_OFFSET */;\n  }\n  static getTokenType(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 768 /* TOKEN_TYPE_MASK */) >>> 8 /* TOKEN_TYPE_OFFSET */;\n  }\n  static containsBalancedBrackets(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 1024 /* BALANCED_BRACKETS_MASK */) !== 0;\n  }\n  static getFontStyle(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 30720 /* FONT_STYLE_MASK */) >>> 11 /* FONT_STYLE_OFFSET */;\n  }\n  static getForeground(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 16744448 /* FOREGROUND_MASK */) >>> 15 /* FOREGROUND_OFFSET */;\n  }\n  static getBackground(encodedTokenAttributes) {\n    return (encodedTokenAttributes & 4278190080 /* BACKGROUND_MASK */) >>> 24 /* BACKGROUND_OFFSET */;\n  }\n  /**\n   * Updates the fields in `metadata`.\n   * A value of `0`, `NotSet` or `null` indicates that the corresponding field should be left as is.\n   */\n  static set(encodedTokenAttributes, languageId, tokenType, containsBalancedBrackets, fontStyle, foreground, background) {\n    let _languageId = _EncodedTokenMetadata.getLanguageId(encodedTokenAttributes);\n    let _tokenType = _EncodedTokenMetadata.getTokenType(encodedTokenAttributes);\n    let _containsBalancedBracketsBit = _EncodedTokenMetadata.containsBalancedBrackets(encodedTokenAttributes) ? 1 : 0;\n    let _fontStyle = _EncodedTokenMetadata.getFontStyle(encodedTokenAttributes);\n    let _foreground = _EncodedTokenMetadata.getForeground(encodedTokenAttributes);\n    let _background = _EncodedTokenMetadata.getBackground(encodedTokenAttributes);\n    if (languageId !== 0) {\n      _languageId = languageId;\n    }\n    if (tokenType !== 8 /* NotSet */) {\n      _tokenType = fromOptionalTokenType(tokenType);\n    }\n    if (containsBalancedBrackets !== null) {\n      _containsBalancedBracketsBit = containsBalancedBrackets ? 1 : 0;\n    }\n    if (fontStyle !== -1 /* NotSet */) {\n      _fontStyle = fontStyle;\n    }\n    if (foreground !== 0) {\n      _foreground = foreground;\n    }\n    if (background !== 0) {\n      _background = background;\n    }\n    return (_languageId << 0 /* LANGUAGEID_OFFSET */ | _tokenType << 8 /* TOKEN_TYPE_OFFSET */ | _containsBalancedBracketsBit << 10 /* BALANCED_BRACKETS_OFFSET */ | _fontStyle << 11 /* FONT_STYLE_OFFSET */ | _foreground << 15 /* FOREGROUND_OFFSET */ | _background << 24 /* BACKGROUND_OFFSET */) >>> 0;\n  }\n};\nfunction toOptionalTokenType(standardType) {\n  return standardType;\n}\nfunction fromOptionalTokenType(standardType) {\n  return standardType;\n}\n\n// src/matcher.ts\nfunction createMatchers(selector, matchesName) {\n  const results = [];\n  const tokenizer = newTokenizer(selector);\n  let token = tokenizer.next();\n  while (token !== null) {\n    let priority = 0;\n    if (token.length === 2 && token.charAt(1) === \":\") {\n      switch (token.charAt(0)) {\n        case \"R\":\n          priority = 1;\n          break;\n        case \"L\":\n          priority = -1;\n          break;\n        default:\n          console.log(`Unknown priority ${token} in scope selector`);\n      }\n      token = tokenizer.next();\n    }\n    let matcher = parseConjunction();\n    results.push({ matcher, priority });\n    if (token !== \",\") {\n      break;\n    }\n    token = tokenizer.next();\n  }\n  return results;\n  function parseOperand() {\n    if (token === \"-\") {\n      token = tokenizer.next();\n      const expressionToNegate = parseOperand();\n      return (matcherInput) => !!expressionToNegate && !expressionToNegate(matcherInput);\n    }\n    if (token === \"(\") {\n      token = tokenizer.next();\n      const expressionInParents = parseInnerExpression();\n      if (token === \")\") {\n        token = tokenizer.next();\n      }\n      return expressionInParents;\n    }\n    if (isIdentifier(token)) {\n      const identifiers = [];\n      do {\n        identifiers.push(token);\n        token = tokenizer.next();\n      } while (isIdentifier(token));\n      return (matcherInput) => matchesName(identifiers, matcherInput);\n    }\n    return null;\n  }\n  function parseConjunction() {\n    const matchers = [];\n    let matcher = parseOperand();\n    while (matcher) {\n      matchers.push(matcher);\n      matcher = parseOperand();\n    }\n    return (matcherInput) => matchers.every((matcher2) => matcher2(matcherInput));\n  }\n  function parseInnerExpression() {\n    const matchers = [];\n    let matcher = parseConjunction();\n    while (matcher) {\n      matchers.push(matcher);\n      if (token === \"|\" || token === \",\") {\n        do {\n          token = tokenizer.next();\n        } while (token === \"|\" || token === \",\");\n      } else {\n        break;\n      }\n      matcher = parseConjunction();\n    }\n    return (matcherInput) => matchers.some((matcher2) => matcher2(matcherInput));\n  }\n}\nfunction isIdentifier(token) {\n  return !!token && !!token.match(/[\\w\\.:]+/);\n}\nfunction newTokenizer(input) {\n  let regex = /([LR]:|[\\w\\.:][\\w\\.:\\-]*|[\\,\\|\\-\\(\\)])/g;\n  let match = regex.exec(input);\n  return {\n    next: () => {\n      if (!match) {\n        return null;\n      }\n      const res = match[0];\n      match = regex.exec(input);\n      return res;\n    }\n  };\n}\n\n// src/onigLib.ts\nvar FindOption = /* @__PURE__ */ ((FindOption2) => {\n  FindOption2[FindOption2[\"None\"] = 0] = \"None\";\n  FindOption2[FindOption2[\"NotBeginString\"] = 1] = \"NotBeginString\";\n  FindOption2[FindOption2[\"NotEndString\"] = 2] = \"NotEndString\";\n  FindOption2[FindOption2[\"NotBeginPosition\"] = 4] = \"NotBeginPosition\";\n  FindOption2[FindOption2[\"DebugCall\"] = 8] = \"DebugCall\";\n  return FindOption2;\n})(FindOption || {});\nfunction disposeOnigString(str) {\n  if (typeof str.dispose === \"function\") {\n    str.dispose();\n  }\n}\n\n// src/grammar/grammarDependencies.ts\nvar TopLevelRuleReference = class {\n  constructor(scopeName) {\n    this.scopeName = scopeName;\n  }\n  toKey() {\n    return this.scopeName;\n  }\n};\nvar TopLevelRepositoryRuleReference = class {\n  constructor(scopeName, ruleName) {\n    this.scopeName = scopeName;\n    this.ruleName = ruleName;\n  }\n  toKey() {\n    return `${this.scopeName}#${this.ruleName}`;\n  }\n};\nvar ExternalReferenceCollector = class {\n  constructor() {\n    this._references = [];\n    this._seenReferenceKeys = /* @__PURE__ */ new Set();\n    this.visitedRule = /* @__PURE__ */ new Set();\n  }\n  get references() {\n    return this._references;\n  }\n  add(reference) {\n    const key = reference.toKey();\n    if (this._seenReferenceKeys.has(key)) {\n      return;\n    }\n    this._seenReferenceKeys.add(key);\n    this._references.push(reference);\n  }\n};\nvar ScopeDependencyProcessor = class {\n  constructor(repo, initialScopeName) {\n    this.repo = repo;\n    this.initialScopeName = initialScopeName;\n    this.seenFullScopeRequests = /* @__PURE__ */ new Set();\n    this.seenPartialScopeRequests = /* @__PURE__ */ new Set();\n    this.seenFullScopeRequests.add(this.initialScopeName);\n    this.Q = [new TopLevelRuleReference(this.initialScopeName)];\n  }\n  processQueue() {\n    const q = this.Q;\n    this.Q = [];\n    const deps = new ExternalReferenceCollector();\n    for (const dep of q) {\n      collectReferencesOfReference(dep, this.initialScopeName, this.repo, deps);\n    }\n    for (const dep of deps.references) {\n      if (dep instanceof TopLevelRuleReference) {\n        if (this.seenFullScopeRequests.has(dep.scopeName)) {\n          continue;\n        }\n        this.seenFullScopeRequests.add(dep.scopeName);\n        this.Q.push(dep);\n      } else {\n        if (this.seenFullScopeRequests.has(dep.scopeName)) {\n          continue;\n        }\n        if (this.seenPartialScopeRequests.has(dep.toKey())) {\n          continue;\n        }\n        this.seenPartialScopeRequests.add(dep.toKey());\n        this.Q.push(dep);\n      }\n    }\n  }\n};\nfunction collectReferencesOfReference(reference, baseGrammarScopeName, repo, result) {\n  const selfGrammar = repo.lookup(reference.scopeName);\n  if (!selfGrammar) {\n    if (reference.scopeName === baseGrammarScopeName) {\n      throw new Error(`No grammar provided for <${baseGrammarScopeName}>`);\n    }\n    return;\n  }\n  const baseGrammar = repo.lookup(baseGrammarScopeName);\n  if (reference instanceof TopLevelRuleReference) {\n    collectExternalReferencesInTopLevelRule({ baseGrammar, selfGrammar }, result);\n  } else {\n    collectExternalReferencesInTopLevelRepositoryRule(\n      reference.ruleName,\n      { baseGrammar, selfGrammar, repository: selfGrammar.repository },\n      result\n    );\n  }\n  const injections = repo.injections(reference.scopeName);\n  if (injections) {\n    for (const injection of injections) {\n      result.add(new TopLevelRuleReference(injection));\n    }\n  }\n}\nfunction collectExternalReferencesInTopLevelRepositoryRule(ruleName, context, result) {\n  if (context.repository && context.repository[ruleName]) {\n    const rule = context.repository[ruleName];\n    collectExternalReferencesInRules([rule], context, result);\n  }\n}\nfunction collectExternalReferencesInTopLevelRule(context, result) {\n  if (context.selfGrammar.patterns && Array.isArray(context.selfGrammar.patterns)) {\n    collectExternalReferencesInRules(\n      context.selfGrammar.patterns,\n      { ...context, repository: context.selfGrammar.repository },\n      result\n    );\n  }\n  if (context.selfGrammar.injections) {\n    collectExternalReferencesInRules(\n      Object.values(context.selfGrammar.injections),\n      { ...context, repository: context.selfGrammar.repository },\n      result\n    );\n  }\n}\nfunction collectExternalReferencesInRules(rules, context, result) {\n  for (const rule of rules) {\n    if (result.visitedRule.has(rule)) {\n      continue;\n    }\n    result.visitedRule.add(rule);\n    const patternRepository = rule.repository ? mergeObjects({}, context.repository, rule.repository) : context.repository;\n    if (Array.isArray(rule.patterns)) {\n      collectExternalReferencesInRules(rule.patterns, { ...context, repository: patternRepository }, result);\n    }\n    const include = rule.include;\n    if (!include) {\n      continue;\n    }\n    const reference = parseInclude(include);\n    switch (reference.kind) {\n      case 0 /* Base */:\n        collectExternalReferencesInTopLevelRule({ ...context, selfGrammar: context.baseGrammar }, result);\n        break;\n      case 1 /* Self */:\n        collectExternalReferencesInTopLevelRule(context, result);\n        break;\n      case 2 /* RelativeReference */:\n        collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, { ...context, repository: patternRepository }, result);\n        break;\n      case 3 /* TopLevelReference */:\n      case 4 /* TopLevelRepositoryReference */:\n        const selfGrammar = reference.scopeName === context.selfGrammar.scopeName ? context.selfGrammar : reference.scopeName === context.baseGrammar.scopeName ? context.baseGrammar : void 0;\n        if (selfGrammar) {\n          const newContext = { baseGrammar: context.baseGrammar, selfGrammar, repository: patternRepository };\n          if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n            collectExternalReferencesInTopLevelRepositoryRule(reference.ruleName, newContext, result);\n          } else {\n            collectExternalReferencesInTopLevelRule(newContext, result);\n          }\n        } else {\n          if (reference.kind === 4 /* TopLevelRepositoryReference */) {\n            result.add(new TopLevelRepositoryRuleReference(reference.scopeName, reference.ruleName));\n          } else {\n            result.add(new TopLevelRuleReference(reference.scopeName));\n          }\n        }\n        break;\n    }\n  }\n}\nvar BaseReference = class {\n  constructor() {\n    this.kind = 0 /* Base */;\n  }\n};\nvar SelfReference = class {\n  constructor() {\n    this.kind = 1 /* Self */;\n  }\n};\nvar RelativeReference = class {\n  constructor(ruleName) {\n    this.ruleName = ruleName;\n    this.kind = 2 /* RelativeReference */;\n  }\n};\nvar TopLevelReference = class {\n  constructor(scopeName) {\n    this.scopeName = scopeName;\n    this.kind = 3 /* TopLevelReference */;\n  }\n};\nvar TopLevelRepositoryReference = class {\n  constructor(scopeName, ruleName) {\n    this.scopeName = scopeName;\n    this.ruleName = ruleName;\n    this.kind = 4 /* TopLevelRepositoryReference */;\n  }\n};\nfunction parseInclude(include) {\n  if (include === \"$base\") {\n    return new BaseReference();\n  } else if (include === \"$self\") {\n    return new SelfReference();\n  }\n  const indexOfSharp = include.indexOf(\"#\");\n  if (indexOfSharp === -1) {\n    return new TopLevelReference(include);\n  } else if (indexOfSharp === 0) {\n    return new RelativeReference(include.substring(1));\n  } else {\n    const scopeName = include.substring(0, indexOfSharp);\n    const ruleName = include.substring(indexOfSharp + 1);\n    return new TopLevelRepositoryReference(scopeName, ruleName);\n  }\n}\n\n// src/rule.ts\nvar HAS_BACK_REFERENCES = /\\\\(\\d+)/;\nvar BACK_REFERENCING_END = /\\\\(\\d+)/g;\nvar ruleIdSymbol = Symbol(\"RuleId\");\nvar endRuleId = -1;\nvar whileRuleId = -2;\nfunction ruleIdFromNumber(id) {\n  return id;\n}\nfunction ruleIdToNumber(id) {\n  return id;\n}\nvar Rule = class {\n  constructor($location, id, name, contentName) {\n    this.$location = $location;\n    this.id = id;\n    this._name = name || null;\n    this._nameIsCapturing = RegexSource.hasCaptures(this._name);\n    this._contentName = contentName || null;\n    this._contentNameIsCapturing = RegexSource.hasCaptures(this._contentName);\n  }\n  get debugName() {\n    const location = this.$location ? `${basename(this.$location.filename)}:${this.$location.line}` : \"unknown\";\n    return `${this.constructor.name}#${this.id} @ ${location}`;\n  }\n  getName(lineText, captureIndices) {\n    if (!this._nameIsCapturing || this._name === null || lineText === null || captureIndices === null) {\n      return this._name;\n    }\n    return RegexSource.replaceCaptures(this._name, lineText, captureIndices);\n  }\n  getContentName(lineText, captureIndices) {\n    if (!this._contentNameIsCapturing || this._contentName === null) {\n      return this._contentName;\n    }\n    return RegexSource.replaceCaptures(this._contentName, lineText, captureIndices);\n  }\n};\nvar CaptureRule = class extends Rule {\n  constructor($location, id, name, contentName, retokenizeCapturedWithRuleId) {\n    super($location, id, name, contentName);\n    this.retokenizeCapturedWithRuleId = retokenizeCapturedWithRuleId;\n  }\n  dispose() {\n  }\n  collectPatterns(grammar, out) {\n    throw new Error(\"Not supported!\");\n  }\n  compile(grammar, endRegexSource) {\n    throw new Error(\"Not supported!\");\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    throw new Error(\"Not supported!\");\n  }\n};\nvar MatchRule = class extends Rule {\n  constructor($location, id, name, match, captures) {\n    super($location, id, name, null);\n    this._match = new RegExpSource(match, this.id);\n    this.captures = captures;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  get debugMatchRegExp() {\n    return `${this._match.source}`;\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._match);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      this.collectPatterns(grammar, this._cachedCompiledPatterns);\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar IncludeOnlyRule = class extends Rule {\n  constructor($location, id, name, contentName, patterns) {\n    super($location, id, name, contentName);\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  collectPatterns(grammar, out) {\n    for (const pattern of this.patterns) {\n      const rule = grammar.getRule(pattern);\n      rule.collectPatterns(grammar, out);\n    }\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      this.collectPatterns(grammar, this._cachedCompiledPatterns);\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar BeginEndRule = class extends Rule {\n  constructor($location, id, name, contentName, begin, beginCaptures, end, endCaptures, applyEndPatternLast, patterns) {\n    super($location, id, name, contentName);\n    this._begin = new RegExpSource(begin, this.id);\n    this.beginCaptures = beginCaptures;\n    this._end = new RegExpSource(end ? end : \"\\uFFFF\", -1);\n    this.endHasBackReferences = this._end.hasBackReferences;\n    this.endCaptures = endCaptures;\n    this.applyEndPatternLast = applyEndPatternLast || false;\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n  }\n  get debugBeginRegExp() {\n    return `${this._begin.source}`;\n  }\n  get debugEndRegExp() {\n    return `${this._end.source}`;\n  }\n  getEndWithResolvedBackReferences(lineText, captureIndices) {\n    return this._end.resolveBackReferences(lineText, captureIndices);\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._begin);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar, endRegexSource).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar, endRegexSource) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      for (const pattern of this.patterns) {\n        const rule = grammar.getRule(pattern);\n        rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n      }\n      if (this.applyEndPatternLast) {\n        this._cachedCompiledPatterns.push(this._end.hasBackReferences ? this._end.clone() : this._end);\n      } else {\n        this._cachedCompiledPatterns.unshift(this._end.hasBackReferences ? this._end.clone() : this._end);\n      }\n    }\n    if (this._end.hasBackReferences) {\n      if (this.applyEndPatternLast) {\n        this._cachedCompiledPatterns.setSource(this._cachedCompiledPatterns.length() - 1, endRegexSource);\n      } else {\n        this._cachedCompiledPatterns.setSource(0, endRegexSource);\n      }\n    }\n    return this._cachedCompiledPatterns;\n  }\n};\nvar BeginWhileRule = class extends Rule {\n  constructor($location, id, name, contentName, begin, beginCaptures, _while, whileCaptures, patterns) {\n    super($location, id, name, contentName);\n    this._begin = new RegExpSource(begin, this.id);\n    this.beginCaptures = beginCaptures;\n    this.whileCaptures = whileCaptures;\n    this._while = new RegExpSource(_while, whileRuleId);\n    this.whileHasBackReferences = this._while.hasBackReferences;\n    this.patterns = patterns.patterns;\n    this.hasMissingPatterns = patterns.hasMissingPatterns;\n    this._cachedCompiledPatterns = null;\n    this._cachedCompiledWhilePatterns = null;\n  }\n  dispose() {\n    if (this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns.dispose();\n      this._cachedCompiledPatterns = null;\n    }\n    if (this._cachedCompiledWhilePatterns) {\n      this._cachedCompiledWhilePatterns.dispose();\n      this._cachedCompiledWhilePatterns = null;\n    }\n  }\n  get debugBeginRegExp() {\n    return `${this._begin.source}`;\n  }\n  get debugWhileRegExp() {\n    return `${this._while.source}`;\n  }\n  getWhileWithResolvedBackReferences(lineText, captureIndices) {\n    return this._while.resolveBackReferences(lineText, captureIndices);\n  }\n  collectPatterns(grammar, out) {\n    out.push(this._begin);\n  }\n  compile(grammar, endRegexSource) {\n    return this._getCachedCompiledPatterns(grammar).compile(grammar);\n  }\n  compileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledPatterns(grammar).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledPatterns(grammar) {\n    if (!this._cachedCompiledPatterns) {\n      this._cachedCompiledPatterns = new RegExpSourceList();\n      for (const pattern of this.patterns) {\n        const rule = grammar.getRule(pattern);\n        rule.collectPatterns(grammar, this._cachedCompiledPatterns);\n      }\n    }\n    return this._cachedCompiledPatterns;\n  }\n  compileWhile(grammar, endRegexSource) {\n    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compile(grammar);\n  }\n  compileWhileAG(grammar, endRegexSource, allowA, allowG) {\n    return this._getCachedCompiledWhilePatterns(grammar, endRegexSource).compileAG(grammar, allowA, allowG);\n  }\n  _getCachedCompiledWhilePatterns(grammar, endRegexSource) {\n    if (!this._cachedCompiledWhilePatterns) {\n      this._cachedCompiledWhilePatterns = new RegExpSourceList();\n      this._cachedCompiledWhilePatterns.push(this._while.hasBackReferences ? this._while.clone() : this._while);\n    }\n    if (this._while.hasBackReferences) {\n      this._cachedCompiledWhilePatterns.setSource(0, endRegexSource ? endRegexSource : \"\\uFFFF\");\n    }\n    return this._cachedCompiledWhilePatterns;\n  }\n};\nvar RuleFactory = class _RuleFactory {\n  static createCaptureRule(helper, $location, name, contentName, retokenizeCapturedWithRuleId) {\n    return helper.registerRule((id) => {\n      return new CaptureRule($location, id, name, contentName, retokenizeCapturedWithRuleId);\n    });\n  }\n  static getCompiledRuleId(desc, helper, repository) {\n    if (!desc.id) {\n      helper.registerRule((id) => {\n        desc.id = id;\n        if (desc.match) {\n          return new MatchRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.match,\n            _RuleFactory._compileCaptures(desc.captures, helper, repository)\n          );\n        }\n        if (typeof desc.begin === \"undefined\") {\n          if (desc.repository) {\n            repository = mergeObjects({}, repository, desc.repository);\n          }\n          let patterns = desc.patterns;\n          if (typeof patterns === \"undefined\" && desc.include) {\n            patterns = [{ include: desc.include }];\n          }\n          return new IncludeOnlyRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.contentName,\n            _RuleFactory._compilePatterns(patterns, helper, repository)\n          );\n        }\n        if (desc.while) {\n          return new BeginWhileRule(\n            desc.$vscodeTextmateLocation,\n            desc.id,\n            desc.name,\n            desc.contentName,\n            desc.begin,\n            _RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository),\n            desc.while,\n            _RuleFactory._compileCaptures(desc.whileCaptures || desc.captures, helper, repository),\n            _RuleFactory._compilePatterns(desc.patterns, helper, repository)\n          );\n        }\n        return new BeginEndRule(\n          desc.$vscodeTextmateLocation,\n          desc.id,\n          desc.name,\n          desc.contentName,\n          desc.begin,\n          _RuleFactory._compileCaptures(desc.beginCaptures || desc.captures, helper, repository),\n          desc.end,\n          _RuleFactory._compileCaptures(desc.endCaptures || desc.captures, helper, repository),\n          desc.applyEndPatternLast,\n          _RuleFactory._compilePatterns(desc.patterns, helper, repository)\n        );\n      });\n    }\n    return desc.id;\n  }\n  static _compileCaptures(captures, helper, repository) {\n    let r = [];\n    if (captures) {\n      let maximumCaptureId = 0;\n      for (const captureId in captures) {\n        if (captureId === \"$vscodeTextmateLocation\") {\n          continue;\n        }\n        const numericCaptureId = parseInt(captureId, 10);\n        if (numericCaptureId > maximumCaptureId) {\n          maximumCaptureId = numericCaptureId;\n        }\n      }\n      for (let i = 0; i <= maximumCaptureId; i++) {\n        r[i] = null;\n      }\n      for (const captureId in captures) {\n        if (captureId === \"$vscodeTextmateLocation\") {\n          continue;\n        }\n        const numericCaptureId = parseInt(captureId, 10);\n        let retokenizeCapturedWithRuleId = 0;\n        if (captures[captureId].patterns) {\n          retokenizeCapturedWithRuleId = _RuleFactory.getCompiledRuleId(captures[captureId], helper, repository);\n        }\n        r[numericCaptureId] = _RuleFactory.createCaptureRule(helper, captures[captureId].$vscodeTextmateLocation, captures[captureId].name, captures[captureId].contentName, retokenizeCapturedWithRuleId);\n      }\n    }\n    return r;\n  }\n  static _compilePatterns(patterns, helper, repository) {\n    let r = [];\n    if (patterns) {\n      for (let i = 0, len = patterns.length; i < len; i++) {\n        const pattern = patterns[i];\n        let ruleId = -1;\n        if (pattern.include) {\n          const reference = parseInclude(pattern.include);\n          switch (reference.kind) {\n            case 0 /* Base */:\n            case 1 /* Self */:\n              ruleId = _RuleFactory.getCompiledRuleId(repository[pattern.include], helper, repository);\n              break;\n            case 2 /* RelativeReference */:\n              let localIncludedRule = repository[reference.ruleName];\n              if (localIncludedRule) {\n                ruleId = _RuleFactory.getCompiledRuleId(localIncludedRule, helper, repository);\n              } else {\n              }\n              break;\n            case 3 /* TopLevelReference */:\n            case 4 /* TopLevelRepositoryReference */:\n              const externalGrammarName = reference.scopeName;\n              const externalGrammarInclude = reference.kind === 4 /* TopLevelRepositoryReference */ ? reference.ruleName : null;\n              const externalGrammar = helper.getExternalGrammar(externalGrammarName, repository);\n              if (externalGrammar) {\n                if (externalGrammarInclude) {\n                  let externalIncludedRule = externalGrammar.repository[externalGrammarInclude];\n                  if (externalIncludedRule) {\n                    ruleId = _RuleFactory.getCompiledRuleId(externalIncludedRule, helper, externalGrammar.repository);\n                  } else {\n                  }\n                } else {\n                  ruleId = _RuleFactory.getCompiledRuleId(externalGrammar.repository.$self, helper, externalGrammar.repository);\n                }\n              } else {\n              }\n              break;\n          }\n        } else {\n          ruleId = _RuleFactory.getCompiledRuleId(pattern, helper, repository);\n        }\n        if (ruleId !== -1) {\n          const rule = helper.getRule(ruleId);\n          let skipRule = false;\n          if (rule instanceof IncludeOnlyRule || rule instanceof BeginEndRule || rule instanceof BeginWhileRule) {\n            if (rule.hasMissingPatterns && rule.patterns.length === 0) {\n              skipRule = true;\n            }\n          }\n          if (skipRule) {\n            continue;\n          }\n          r.push(ruleId);\n        }\n      }\n    }\n    return {\n      patterns: r,\n      hasMissingPatterns: (patterns ? patterns.length : 0) !== r.length\n    };\n  }\n};\nvar RegExpSource = class _RegExpSource {\n  constructor(regExpSource, ruleId) {\n    if (regExpSource) {\n      const len = regExpSource.length;\n      let lastPushedPos = 0;\n      let output = [];\n      let hasAnchor = false;\n      for (let pos = 0; pos < len; pos++) {\n        const ch = regExpSource.charAt(pos);\n        if (ch === \"\\\\\") {\n          if (pos + 1 < len) {\n            const nextCh = regExpSource.charAt(pos + 1);\n            if (nextCh === \"z\") {\n              output.push(regExpSource.substring(lastPushedPos, pos));\n              output.push(\"$(?!\\\\n)(?<!\\\\n)\");\n              lastPushedPos = pos + 2;\n            } else if (nextCh === \"A\" || nextCh === \"G\") {\n              hasAnchor = true;\n            }\n            pos++;\n          }\n        }\n      }\n      this.hasAnchor = hasAnchor;\n      if (lastPushedPos === 0) {\n        this.source = regExpSource;\n      } else {\n        output.push(regExpSource.substring(lastPushedPos, len));\n        this.source = output.join(\"\");\n      }\n    } else {\n      this.hasAnchor = false;\n      this.source = regExpSource;\n    }\n    if (this.hasAnchor) {\n      this._anchorCache = this._buildAnchorCache();\n    } else {\n      this._anchorCache = null;\n    }\n    this.ruleId = ruleId;\n    this.hasBackReferences = HAS_BACK_REFERENCES.test(this.source);\n  }\n  clone() {\n    return new _RegExpSource(this.source, this.ruleId);\n  }\n  setSource(newSource) {\n    if (this.source === newSource) {\n      return;\n    }\n    this.source = newSource;\n    if (this.hasAnchor) {\n      this._anchorCache = this._buildAnchorCache();\n    }\n  }\n  resolveBackReferences(lineText, captureIndices) {\n    let capturedValues = captureIndices.map((capture) => {\n      return lineText.substring(capture.start, capture.end);\n    });\n    BACK_REFERENCING_END.lastIndex = 0;\n    return this.source.replace(BACK_REFERENCING_END, (match, g1) => {\n      return escapeRegExpCharacters(capturedValues[parseInt(g1, 10)] || \"\");\n    });\n  }\n  _buildAnchorCache() {\n    let A0_G0_result = [];\n    let A0_G1_result = [];\n    let A1_G0_result = [];\n    let A1_G1_result = [];\n    let pos, len, ch, nextCh;\n    for (pos = 0, len = this.source.length; pos < len; pos++) {\n      ch = this.source.charAt(pos);\n      A0_G0_result[pos] = ch;\n      A0_G1_result[pos] = ch;\n      A1_G0_result[pos] = ch;\n      A1_G1_result[pos] = ch;\n      if (ch === \"\\\\\") {\n        if (pos + 1 < len) {\n          nextCh = this.source.charAt(pos + 1);\n          if (nextCh === \"A\") {\n            A0_G0_result[pos + 1] = \"\\uFFFF\";\n            A0_G1_result[pos + 1] = \"\\uFFFF\";\n            A1_G0_result[pos + 1] = \"A\";\n            A1_G1_result[pos + 1] = \"A\";\n          } else if (nextCh === \"G\") {\n            A0_G0_result[pos + 1] = \"\\uFFFF\";\n            A0_G1_result[pos + 1] = \"G\";\n            A1_G0_result[pos + 1] = \"\\uFFFF\";\n            A1_G1_result[pos + 1] = \"G\";\n          } else {\n            A0_G0_result[pos + 1] = nextCh;\n            A0_G1_result[pos + 1] = nextCh;\n            A1_G0_result[pos + 1] = nextCh;\n            A1_G1_result[pos + 1] = nextCh;\n          }\n          pos++;\n        }\n      }\n    }\n    return {\n      A0_G0: A0_G0_result.join(\"\"),\n      A0_G1: A0_G1_result.join(\"\"),\n      A1_G0: A1_G0_result.join(\"\"),\n      A1_G1: A1_G1_result.join(\"\")\n    };\n  }\n  resolveAnchors(allowA, allowG) {\n    if (!this.hasAnchor || !this._anchorCache) {\n      return this.source;\n    }\n    if (allowA) {\n      if (allowG) {\n        return this._anchorCache.A1_G1;\n      } else {\n        return this._anchorCache.A1_G0;\n      }\n    } else {\n      if (allowG) {\n        return this._anchorCache.A0_G1;\n      } else {\n        return this._anchorCache.A0_G0;\n      }\n    }\n  }\n};\nvar RegExpSourceList = class {\n  constructor() {\n    this._items = [];\n    this._hasAnchors = false;\n    this._cached = null;\n    this._anchorCache = {\n      A0_G0: null,\n      A0_G1: null,\n      A1_G0: null,\n      A1_G1: null\n    };\n  }\n  dispose() {\n    this._disposeCaches();\n  }\n  _disposeCaches() {\n    if (this._cached) {\n      this._cached.dispose();\n      this._cached = null;\n    }\n    if (this._anchorCache.A0_G0) {\n      this._anchorCache.A0_G0.dispose();\n      this._anchorCache.A0_G0 = null;\n    }\n    if (this._anchorCache.A0_G1) {\n      this._anchorCache.A0_G1.dispose();\n      this._anchorCache.A0_G1 = null;\n    }\n    if (this._anchorCache.A1_G0) {\n      this._anchorCache.A1_G0.dispose();\n      this._anchorCache.A1_G0 = null;\n    }\n    if (this._anchorCache.A1_G1) {\n      this._anchorCache.A1_G1.dispose();\n      this._anchorCache.A1_G1 = null;\n    }\n  }\n  push(item) {\n    this._items.push(item);\n    this._hasAnchors = this._hasAnchors || item.hasAnchor;\n  }\n  unshift(item) {\n    this._items.unshift(item);\n    this._hasAnchors = this._hasAnchors || item.hasAnchor;\n  }\n  length() {\n    return this._items.length;\n  }\n  setSource(index, newSource) {\n    if (this._items[index].source !== newSource) {\n      this._disposeCaches();\n      this._items[index].setSource(newSource);\n    }\n  }\n  compile(onigLib) {\n    if (!this._cached) {\n      let regExps = this._items.map((e) => e.source);\n      this._cached = new CompiledRule(onigLib, regExps, this._items.map((e) => e.ruleId));\n    }\n    return this._cached;\n  }\n  compileAG(onigLib, allowA, allowG) {\n    if (!this._hasAnchors) {\n      return this.compile(onigLib);\n    } else {\n      if (allowA) {\n        if (allowG) {\n          if (!this._anchorCache.A1_G1) {\n            this._anchorCache.A1_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A1_G1;\n        } else {\n          if (!this._anchorCache.A1_G0) {\n            this._anchorCache.A1_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A1_G0;\n        }\n      } else {\n        if (allowG) {\n          if (!this._anchorCache.A0_G1) {\n            this._anchorCache.A0_G1 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A0_G1;\n        } else {\n          if (!this._anchorCache.A0_G0) {\n            this._anchorCache.A0_G0 = this._resolveAnchors(onigLib, allowA, allowG);\n          }\n          return this._anchorCache.A0_G0;\n        }\n      }\n    }\n  }\n  _resolveAnchors(onigLib, allowA, allowG) {\n    let regExps = this._items.map((e) => e.resolveAnchors(allowA, allowG));\n    return new CompiledRule(onigLib, regExps, this._items.map((e) => e.ruleId));\n  }\n};\nvar CompiledRule = class {\n  constructor(onigLib, regExps, rules) {\n    this.regExps = regExps;\n    this.rules = rules;\n    this.scanner = onigLib.createOnigScanner(regExps);\n  }\n  dispose() {\n    if (typeof this.scanner.dispose === \"function\") {\n      this.scanner.dispose();\n    }\n  }\n  toString() {\n    const r = [];\n    for (let i = 0, len = this.rules.length; i < len; i++) {\n      r.push(\"   - \" + this.rules[i] + \": \" + this.regExps[i]);\n    }\n    return r.join(\"\\n\");\n  }\n  findNextMatchSync(string, startPosition, options) {\n    const result = this.scanner.findNextMatchSync(string, startPosition, options);\n    if (!result) {\n      return null;\n    }\n    return {\n      ruleId: this.rules[result.index],\n      captureIndices: result.captureIndices\n    };\n  }\n};\n\n// src/grammar/basicScopesAttributeProvider.ts\nvar BasicScopeAttributes = class {\n  constructor(languageId, tokenType) {\n    this.languageId = languageId;\n    this.tokenType = tokenType;\n  }\n};\nvar _BasicScopeAttributesProvider = class _BasicScopeAttributesProvider {\n  constructor(initialLanguageId, embeddedLanguages) {\n    this._getBasicScopeAttributes = new CachedFn((scopeName) => {\n      const languageId = this._scopeToLanguage(scopeName);\n      const standardTokenType = this._toStandardTokenType(scopeName);\n      return new BasicScopeAttributes(languageId, standardTokenType);\n    });\n    this._defaultAttributes = new BasicScopeAttributes(initialLanguageId, 8 /* NotSet */);\n    this._embeddedLanguagesMatcher = new ScopeMatcher(Object.entries(embeddedLanguages || {}));\n  }\n  getDefaultAttributes() {\n    return this._defaultAttributes;\n  }\n  getBasicScopeAttributes(scopeName) {\n    if (scopeName === null) {\n      return _BasicScopeAttributesProvider._NULL_SCOPE_METADATA;\n    }\n    return this._getBasicScopeAttributes.get(scopeName);\n  }\n  /**\n   * Given a produced TM scope, return the language that token describes or null if unknown.\n   * e.g. source.html => html, source.css.embedded.html => css, punctuation.definition.tag.html => null\n   */\n  _scopeToLanguage(scope) {\n    return this._embeddedLanguagesMatcher.match(scope) || 0;\n  }\n  _toStandardTokenType(scopeName) {\n    const m = scopeName.match(_BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP);\n    if (!m) {\n      return 8 /* NotSet */;\n    }\n    switch (m[1]) {\n      case \"comment\":\n        return 1 /* Comment */;\n      case \"string\":\n        return 2 /* String */;\n      case \"regex\":\n        return 3 /* RegEx */;\n      case \"meta.embedded\":\n        return 0 /* Other */;\n    }\n    throw new Error(\"Unexpected match for standard token type!\");\n  }\n};\n_BasicScopeAttributesProvider._NULL_SCOPE_METADATA = new BasicScopeAttributes(0, 0);\n_BasicScopeAttributesProvider.STANDARD_TOKEN_TYPE_REGEXP = /\\b(comment|string|regex|meta\\.embedded)\\b/;\nvar BasicScopeAttributesProvider = _BasicScopeAttributesProvider;\nvar ScopeMatcher = class {\n  constructor(values) {\n    if (values.length === 0) {\n      this.values = null;\n      this.scopesRegExp = null;\n    } else {\n      this.values = new Map(values);\n      const escapedScopes = values.map(\n        ([scopeName, value]) => escapeRegExpCharacters(scopeName)\n      );\n      escapedScopes.sort();\n      escapedScopes.reverse();\n      this.scopesRegExp = new RegExp(\n        `^((${escapedScopes.join(\")|(\")}))($|\\\\.)`,\n        \"\"\n      );\n    }\n  }\n  match(scope) {\n    if (!this.scopesRegExp) {\n      return void 0;\n    }\n    const m = scope.match(this.scopesRegExp);\n    if (!m) {\n      return void 0;\n    }\n    return this.values.get(m[1]);\n  }\n};\n\n// src/debug.ts\nvar DebugFlags = {\n  InDebugMode: typeof process !== \"undefined\" && !!process.env[\"VSCODE_TEXTMATE_DEBUG\"]\n};\nvar UseOnigurumaFindOptions = false;\n\n// src/grammar/tokenizeString.ts\nvar TokenizeStringResult = class {\n  constructor(stack, stoppedEarly) {\n    this.stack = stack;\n    this.stoppedEarly = stoppedEarly;\n  }\n};\nfunction _tokenizeString(grammar, lineText, isFirstLine, linePos, stack, lineTokens, checkWhileConditions, timeLimit) {\n  const lineLength = lineText.content.length;\n  let STOP = false;\n  let anchorPosition = -1;\n  if (checkWhileConditions) {\n    const whileCheckResult = _checkWhileConditions(\n      grammar,\n      lineText,\n      isFirstLine,\n      linePos,\n      stack,\n      lineTokens\n    );\n    stack = whileCheckResult.stack;\n    linePos = whileCheckResult.linePos;\n    isFirstLine = whileCheckResult.isFirstLine;\n    anchorPosition = whileCheckResult.anchorPosition;\n  }\n  const startTime = Date.now();\n  while (!STOP) {\n    if (timeLimit !== 0) {\n      const elapsedTime = Date.now() - startTime;\n      if (elapsedTime > timeLimit) {\n        return new TokenizeStringResult(stack, true);\n      }\n    }\n    scanNext();\n  }\n  return new TokenizeStringResult(stack, false);\n  function scanNext() {\n    if (false) {\n      console.log(\"\");\n      console.log(\n        `@@scanNext ${linePos}: |${lineText.content.substr(linePos).replace(/\\n$/, \"\\\\n\")}|`\n      );\n    }\n    const r = matchRuleOrInjections(\n      grammar,\n      lineText,\n      isFirstLine,\n      linePos,\n      stack,\n      anchorPosition\n    );\n    if (!r) {\n      lineTokens.produce(stack, lineLength);\n      STOP = true;\n      return;\n    }\n    const captureIndices = r.captureIndices;\n    const matchedRuleId = r.matchedRuleId;\n    const hasAdvanced = captureIndices && captureIndices.length > 0 ? captureIndices[0].end > linePos : false;\n    if (matchedRuleId === endRuleId) {\n      const poppedRule = stack.getRule(grammar);\n      if (false) {\n        console.log(\n          \"  popping \" + poppedRule.debugName + \" - \" + poppedRule.debugEndRegExp\n        );\n      }\n      lineTokens.produce(stack, captureIndices[0].start);\n      stack = stack.withContentNameScopesList(stack.nameScopesList);\n      handleCaptures(\n        grammar,\n        lineText,\n        isFirstLine,\n        stack,\n        lineTokens,\n        poppedRule.endCaptures,\n        captureIndices\n      );\n      lineTokens.produce(stack, captureIndices[0].end);\n      const popped = stack;\n      stack = stack.parent;\n      anchorPosition = popped.getAnchorPos();\n      if (!hasAdvanced && popped.getEnterPos() === linePos) {\n        if (false) {\n          console.error(\n            \"[1] - Grammar is in an endless loop - Grammar pushed & popped a rule without advancing\"\n          );\n        }\n        stack = popped;\n        lineTokens.produce(stack, lineLength);\n        STOP = true;\n        return;\n      }\n    } else {\n      const _rule = grammar.getRule(matchedRuleId);\n      lineTokens.produce(stack, captureIndices[0].start);\n      const beforePush = stack;\n      const scopeName = _rule.getName(lineText.content, captureIndices);\n      const nameScopesList = stack.contentNameScopesList.pushAttributed(\n        scopeName,\n        grammar\n      );\n      stack = stack.push(\n        matchedRuleId,\n        linePos,\n        anchorPosition,\n        captureIndices[0].end === lineLength,\n        null,\n        nameScopesList,\n        nameScopesList\n      );\n      if (_rule instanceof BeginEndRule) {\n        const pushedRule = _rule;\n        if (false) {\n          console.log(\n            \"  pushing \" + pushedRule.debugName + \" - \" + pushedRule.debugBeginRegExp\n          );\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          pushedRule.beginCaptures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        anchorPosition = captureIndices[0].end;\n        const contentName = pushedRule.getContentName(\n          lineText.content,\n          captureIndices\n        );\n        const contentNameScopesList = nameScopesList.pushAttributed(\n          contentName,\n          grammar\n        );\n        stack = stack.withContentNameScopesList(contentNameScopesList);\n        if (pushedRule.endHasBackReferences) {\n          stack = stack.withEndRule(\n            pushedRule.getEndWithResolvedBackReferences(\n              lineText.content,\n              captureIndices\n            )\n          );\n        }\n        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n          if (false) {\n            console.error(\n              \"[2] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\"\n            );\n          }\n          stack = stack.pop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      } else if (_rule instanceof BeginWhileRule) {\n        const pushedRule = _rule;\n        if (false) {\n          console.log(\"  pushing \" + pushedRule.debugName);\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          pushedRule.beginCaptures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        anchorPosition = captureIndices[0].end;\n        const contentName = pushedRule.getContentName(\n          lineText.content,\n          captureIndices\n        );\n        const contentNameScopesList = nameScopesList.pushAttributed(\n          contentName,\n          grammar\n        );\n        stack = stack.withContentNameScopesList(contentNameScopesList);\n        if (pushedRule.whileHasBackReferences) {\n          stack = stack.withEndRule(\n            pushedRule.getWhileWithResolvedBackReferences(\n              lineText.content,\n              captureIndices\n            )\n          );\n        }\n        if (!hasAdvanced && beforePush.hasSameRuleAs(stack)) {\n          if (false) {\n            console.error(\n              \"[3] - Grammar is in an endless loop - Grammar pushed the same rule without advancing\"\n            );\n          }\n          stack = stack.pop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      } else {\n        const matchingRule = _rule;\n        if (false) {\n          console.log(\n            \"  matched \" + matchingRule.debugName + \" - \" + matchingRule.debugMatchRegExp\n          );\n        }\n        handleCaptures(\n          grammar,\n          lineText,\n          isFirstLine,\n          stack,\n          lineTokens,\n          matchingRule.captures,\n          captureIndices\n        );\n        lineTokens.produce(stack, captureIndices[0].end);\n        stack = stack.pop();\n        if (!hasAdvanced) {\n          if (false) {\n            console.error(\n              \"[4] - Grammar is in an endless loop - Grammar is not advancing, nor is it pushing/popping\"\n            );\n          }\n          stack = stack.safePop();\n          lineTokens.produce(stack, lineLength);\n          STOP = true;\n          return;\n        }\n      }\n    }\n    if (captureIndices[0].end > linePos) {\n      linePos = captureIndices[0].end;\n      isFirstLine = false;\n    }\n  }\n}\nfunction _checkWhileConditions(grammar, lineText, isFirstLine, linePos, stack, lineTokens) {\n  let anchorPosition = stack.beginRuleCapturedEOL ? 0 : -1;\n  const whileRules = [];\n  for (let node = stack; node; node = node.pop()) {\n    const nodeRule = node.getRule(grammar);\n    if (nodeRule instanceof BeginWhileRule) {\n      whileRules.push({\n        rule: nodeRule,\n        stack: node\n      });\n    }\n  }\n  for (let whileRule = whileRules.pop(); whileRule; whileRule = whileRules.pop()) {\n    const { ruleScanner, findOptions } = prepareRuleWhileSearch(whileRule.rule, grammar, whileRule.stack.endRule, isFirstLine, linePos === anchorPosition);\n    const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (false) {\n      console.log(\"  scanning for while rule\");\n      console.log(ruleScanner.toString());\n    }\n    if (r) {\n      const matchedRuleId = r.ruleId;\n      if (matchedRuleId !== whileRuleId) {\n        stack = whileRule.stack.pop();\n        break;\n      }\n      if (r.captureIndices && r.captureIndices.length) {\n        lineTokens.produce(whileRule.stack, r.captureIndices[0].start);\n        handleCaptures(grammar, lineText, isFirstLine, whileRule.stack, lineTokens, whileRule.rule.whileCaptures, r.captureIndices);\n        lineTokens.produce(whileRule.stack, r.captureIndices[0].end);\n        anchorPosition = r.captureIndices[0].end;\n        if (r.captureIndices[0].end > linePos) {\n          linePos = r.captureIndices[0].end;\n          isFirstLine = false;\n        }\n      }\n    } else {\n      if (false) {\n        console.log(\"  popping \" + whileRule.rule.debugName + \" - \" + whileRule.rule.debugWhileRegExp);\n      }\n      stack = whileRule.stack.pop();\n      break;\n    }\n  }\n  return { stack, linePos, anchorPosition, isFirstLine };\n}\nfunction matchRuleOrInjections(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  const matchResult = matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n  const injections = grammar.getInjections();\n  if (injections.length === 0) {\n    return matchResult;\n  }\n  const injectionResult = matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition);\n  if (!injectionResult) {\n    return matchResult;\n  }\n  if (!matchResult) {\n    return injectionResult;\n  }\n  const matchResultScore = matchResult.captureIndices[0].start;\n  const injectionResultScore = injectionResult.captureIndices[0].start;\n  if (injectionResultScore < matchResultScore || injectionResult.priorityMatch && injectionResultScore === matchResultScore) {\n    return injectionResult;\n  }\n  return matchResult;\n}\nfunction matchRule(grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  const rule = stack.getRule(grammar);\n  const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, stack.endRule, isFirstLine, linePos === anchorPosition);\n  const r = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n  if (r) {\n    return {\n      captureIndices: r.captureIndices,\n      matchedRuleId: r.ruleId\n    };\n  }\n  return null;\n}\nfunction matchInjections(injections, grammar, lineText, isFirstLine, linePos, stack, anchorPosition) {\n  let bestMatchRating = Number.MAX_VALUE;\n  let bestMatchCaptureIndices = null;\n  let bestMatchRuleId;\n  let bestMatchResultPriority = 0;\n  const scopes = stack.contentNameScopesList.getScopeNames();\n  for (let i = 0, len = injections.length; i < len; i++) {\n    const injection = injections[i];\n    if (!injection.matcher(scopes)) {\n      continue;\n    }\n    const rule = grammar.getRule(injection.ruleId);\n    const { ruleScanner, findOptions } = prepareRuleSearch(rule, grammar, null, isFirstLine, linePos === anchorPosition);\n    const matchResult = ruleScanner.findNextMatchSync(lineText, linePos, findOptions);\n    if (!matchResult) {\n      continue;\n    }\n    if (false) {\n      console.log(`  matched injection: ${injection.debugSelector}`);\n      console.log(ruleScanner.toString());\n    }\n    const matchRating = matchResult.captureIndices[0].start;\n    if (matchRating >= bestMatchRating) {\n      continue;\n    }\n    bestMatchRating = matchRating;\n    bestMatchCaptureIndices = matchResult.captureIndices;\n    bestMatchRuleId = matchResult.ruleId;\n    bestMatchResultPriority = injection.priority;\n    if (bestMatchRating === linePos) {\n      break;\n    }\n  }\n  if (bestMatchCaptureIndices) {\n    return {\n      priorityMatch: bestMatchResultPriority === -1,\n      captureIndices: bestMatchCaptureIndices,\n      matchedRuleId: bestMatchRuleId\n    };\n  }\n  return null;\n}\nfunction prepareRuleSearch(rule, grammar, endRegexSource, allowA, allowG) {\n  if (UseOnigurumaFindOptions) {\n    const ruleScanner2 = rule.compile(grammar, endRegexSource);\n    const findOptions = getFindOptions(allowA, allowG);\n    return { ruleScanner: ruleScanner2, findOptions };\n  }\n  const ruleScanner = rule.compileAG(grammar, endRegexSource, allowA, allowG);\n  return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction prepareRuleWhileSearch(rule, grammar, endRegexSource, allowA, allowG) {\n  if (UseOnigurumaFindOptions) {\n    const ruleScanner2 = rule.compileWhile(grammar, endRegexSource);\n    const findOptions = getFindOptions(allowA, allowG);\n    return { ruleScanner: ruleScanner2, findOptions };\n  }\n  const ruleScanner = rule.compileWhileAG(grammar, endRegexSource, allowA, allowG);\n  return { ruleScanner, findOptions: 0 /* None */ };\n}\nfunction getFindOptions(allowA, allowG) {\n  let options = 0 /* None */;\n  if (!allowA) {\n    options |= 1 /* NotBeginString */;\n  }\n  if (!allowG) {\n    options |= 4 /* NotBeginPosition */;\n  }\n  return options;\n}\nfunction handleCaptures(grammar, lineText, isFirstLine, stack, lineTokens, captures, captureIndices) {\n  if (captures.length === 0) {\n    return;\n  }\n  const lineTextContent = lineText.content;\n  const len = Math.min(captures.length, captureIndices.length);\n  const localStack = [];\n  const maxEnd = captureIndices[0].end;\n  for (let i = 0; i < len; i++) {\n    const captureRule = captures[i];\n    if (captureRule === null) {\n      continue;\n    }\n    const captureIndex = captureIndices[i];\n    if (captureIndex.length === 0) {\n      continue;\n    }\n    if (captureIndex.start > maxEnd) {\n      break;\n    }\n    while (localStack.length > 0 && localStack[localStack.length - 1].endPos <= captureIndex.start) {\n      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n      localStack.pop();\n    }\n    if (localStack.length > 0) {\n      lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, captureIndex.start);\n    } else {\n      lineTokens.produce(stack, captureIndex.start);\n    }\n    if (captureRule.retokenizeCapturedWithRuleId) {\n      const scopeName = captureRule.getName(lineTextContent, captureIndices);\n      const nameScopesList = stack.contentNameScopesList.pushAttributed(scopeName, grammar);\n      const contentName = captureRule.getContentName(lineTextContent, captureIndices);\n      const contentNameScopesList = nameScopesList.pushAttributed(contentName, grammar);\n      const stackClone = stack.push(captureRule.retokenizeCapturedWithRuleId, captureIndex.start, -1, false, null, nameScopesList, contentNameScopesList);\n      const onigSubStr = grammar.createOnigString(lineTextContent.substring(0, captureIndex.end));\n      _tokenizeString(\n        grammar,\n        onigSubStr,\n        isFirstLine && captureIndex.start === 0,\n        captureIndex.start,\n        stackClone,\n        lineTokens,\n        false,\n        /* no time limit */\n        0\n      );\n      disposeOnigString(onigSubStr);\n      continue;\n    }\n    const captureRuleScopeName = captureRule.getName(lineTextContent, captureIndices);\n    if (captureRuleScopeName !== null) {\n      const base = localStack.length > 0 ? localStack[localStack.length - 1].scopes : stack.contentNameScopesList;\n      const captureRuleScopesList = base.pushAttributed(captureRuleScopeName, grammar);\n      localStack.push(new LocalStackElement(captureRuleScopesList, captureIndex.end));\n    }\n  }\n  while (localStack.length > 0) {\n    lineTokens.produceFromScopes(localStack[localStack.length - 1].scopes, localStack[localStack.length - 1].endPos);\n    localStack.pop();\n  }\n}\nvar LocalStackElement = class {\n  constructor(scopes, endPos) {\n    this.scopes = scopes;\n    this.endPos = endPos;\n  }\n};\n\n// src/grammar/grammar.ts\nfunction createGrammar(scopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, onigLib) {\n  return new Grammar(\n    scopeName,\n    grammar,\n    initialLanguage,\n    embeddedLanguages,\n    tokenTypes,\n    balancedBracketSelectors,\n    grammarRepository,\n    onigLib\n  );\n}\nfunction collectInjections(result, selector, rule, ruleFactoryHelper, grammar) {\n  const matchers = createMatchers(selector, nameMatcher);\n  const ruleId = RuleFactory.getCompiledRuleId(rule, ruleFactoryHelper, grammar.repository);\n  for (const matcher of matchers) {\n    result.push({\n      debugSelector: selector,\n      matcher: matcher.matcher,\n      ruleId,\n      grammar,\n      priority: matcher.priority\n    });\n  }\n}\nfunction nameMatcher(identifers, scopes) {\n  if (scopes.length < identifers.length) {\n    return false;\n  }\n  let lastIndex = 0;\n  return identifers.every((identifier) => {\n    for (let i = lastIndex; i < scopes.length; i++) {\n      if (scopesAreMatching(scopes[i], identifier)) {\n        lastIndex = i + 1;\n        return true;\n      }\n    }\n    return false;\n  });\n}\nfunction scopesAreMatching(thisScopeName, scopeName) {\n  if (!thisScopeName) {\n    return false;\n  }\n  if (thisScopeName === scopeName) {\n    return true;\n  }\n  const len = scopeName.length;\n  return thisScopeName.length > len && thisScopeName.substr(0, len) === scopeName && thisScopeName[len] === \".\";\n}\nvar Grammar = class {\n  constructor(_rootScopeName, grammar, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors, grammarRepository, _onigLib) {\n    this._rootScopeName = _rootScopeName;\n    this.balancedBracketSelectors = balancedBracketSelectors;\n    this._onigLib = _onigLib;\n    this._basicScopeAttributesProvider = new BasicScopeAttributesProvider(\n      initialLanguage,\n      embeddedLanguages\n    );\n    this._rootId = -1;\n    this._lastRuleId = 0;\n    this._ruleId2desc = [null];\n    this._includedGrammars = {};\n    this._grammarRepository = grammarRepository;\n    this._grammar = initGrammar(grammar, null);\n    this._injections = null;\n    this._tokenTypeMatchers = [];\n    if (tokenTypes) {\n      for (const selector of Object.keys(tokenTypes)) {\n        const matchers = createMatchers(selector, nameMatcher);\n        for (const matcher of matchers) {\n          this._tokenTypeMatchers.push({\n            matcher: matcher.matcher,\n            type: tokenTypes[selector]\n          });\n        }\n      }\n    }\n  }\n  get themeProvider() {\n    return this._grammarRepository;\n  }\n  dispose() {\n    for (const rule of this._ruleId2desc) {\n      if (rule) {\n        rule.dispose();\n      }\n    }\n  }\n  createOnigScanner(sources) {\n    return this._onigLib.createOnigScanner(sources);\n  }\n  createOnigString(sources) {\n    return this._onigLib.createOnigString(sources);\n  }\n  getMetadataForScope(scope) {\n    return this._basicScopeAttributesProvider.getBasicScopeAttributes(scope);\n  }\n  _collectInjections() {\n    const grammarRepository = {\n      lookup: (scopeName2) => {\n        if (scopeName2 === this._rootScopeName) {\n          return this._grammar;\n        }\n        return this.getExternalGrammar(scopeName2);\n      },\n      injections: (scopeName2) => {\n        return this._grammarRepository.injections(scopeName2);\n      }\n    };\n    const result = [];\n    const scopeName = this._rootScopeName;\n    const grammar = grammarRepository.lookup(scopeName);\n    if (grammar) {\n      const rawInjections = grammar.injections;\n      if (rawInjections) {\n        for (let expression in rawInjections) {\n          collectInjections(\n            result,\n            expression,\n            rawInjections[expression],\n            this,\n            grammar\n          );\n        }\n      }\n      const injectionScopeNames = this._grammarRepository.injections(scopeName);\n      if (injectionScopeNames) {\n        injectionScopeNames.forEach((injectionScopeName) => {\n          const injectionGrammar = this.getExternalGrammar(injectionScopeName);\n          if (injectionGrammar) {\n            const selector = injectionGrammar.injectionSelector;\n            if (selector) {\n              collectInjections(\n                result,\n                selector,\n                injectionGrammar,\n                this,\n                injectionGrammar\n              );\n            }\n          }\n        });\n      }\n    }\n    result.sort((i1, i2) => i1.priority - i2.priority);\n    return result;\n  }\n  getInjections() {\n    if (this._injections === null) {\n      this._injections = this._collectInjections();\n    }\n    return this._injections;\n  }\n  registerRule(factory) {\n    const id = ++this._lastRuleId;\n    const result = factory(ruleIdFromNumber(id));\n    this._ruleId2desc[id] = result;\n    return result;\n  }\n  getRule(ruleId) {\n    return this._ruleId2desc[ruleIdToNumber(ruleId)];\n  }\n  getExternalGrammar(scopeName, repository) {\n    if (this._includedGrammars[scopeName]) {\n      return this._includedGrammars[scopeName];\n    } else if (this._grammarRepository) {\n      const rawIncludedGrammar = this._grammarRepository.lookup(scopeName);\n      if (rawIncludedGrammar) {\n        this._includedGrammars[scopeName] = initGrammar(\n          rawIncludedGrammar,\n          repository && repository.$base\n        );\n        return this._includedGrammars[scopeName];\n      }\n    }\n    return void 0;\n  }\n  tokenizeLine(lineText, prevState, timeLimit = 0) {\n    const r = this._tokenize(lineText, prevState, false, timeLimit);\n    return {\n      tokens: r.lineTokens.getResult(r.ruleStack, r.lineLength),\n      ruleStack: r.ruleStack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n  tokenizeLine2(lineText, prevState, timeLimit = 0) {\n    const r = this._tokenize(lineText, prevState, true, timeLimit);\n    return {\n      tokens: r.lineTokens.getBinaryResult(r.ruleStack, r.lineLength),\n      ruleStack: r.ruleStack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n  _tokenize(lineText, prevState, emitBinaryTokens, timeLimit) {\n    if (this._rootId === -1) {\n      this._rootId = RuleFactory.getCompiledRuleId(\n        this._grammar.repository.$self,\n        this,\n        this._grammar.repository\n      );\n      this.getInjections();\n    }\n    let isFirstLine;\n    if (!prevState || prevState === StateStackImpl.NULL) {\n      isFirstLine = true;\n      const rawDefaultMetadata = this._basicScopeAttributesProvider.getDefaultAttributes();\n      const defaultStyle = this.themeProvider.getDefaults();\n      const defaultMetadata = EncodedTokenMetadata.set(\n        0,\n        rawDefaultMetadata.languageId,\n        rawDefaultMetadata.tokenType,\n        null,\n        defaultStyle.fontStyle,\n        defaultStyle.foregroundId,\n        defaultStyle.backgroundId\n      );\n      const rootScopeName = this.getRule(this._rootId).getName(\n        null,\n        null\n      );\n      let scopeList;\n      if (rootScopeName) {\n        scopeList = AttributedScopeStack.createRootAndLookUpScopeName(\n          rootScopeName,\n          defaultMetadata,\n          this\n        );\n      } else {\n        scopeList = AttributedScopeStack.createRoot(\n          \"unknown\",\n          defaultMetadata\n        );\n      }\n      prevState = new StateStackImpl(\n        null,\n        this._rootId,\n        -1,\n        -1,\n        false,\n        null,\n        scopeList,\n        scopeList\n      );\n    } else {\n      isFirstLine = false;\n      prevState.reset();\n    }\n    lineText = lineText + \"\\n\";\n    const onigLineText = this.createOnigString(lineText);\n    const lineLength = onigLineText.content.length;\n    const lineTokens = new LineTokens(\n      emitBinaryTokens,\n      lineText,\n      this._tokenTypeMatchers,\n      this.balancedBracketSelectors\n    );\n    const r = _tokenizeString(\n      this,\n      onigLineText,\n      isFirstLine,\n      0,\n      prevState,\n      lineTokens,\n      true,\n      timeLimit\n    );\n    disposeOnigString(onigLineText);\n    return {\n      lineLength,\n      lineTokens,\n      ruleStack: r.stack,\n      stoppedEarly: r.stoppedEarly\n    };\n  }\n};\nfunction initGrammar(grammar, base) {\n  grammar = clone(grammar);\n  grammar.repository = grammar.repository || {};\n  grammar.repository.$self = {\n    $vscodeTextmateLocation: grammar.$vscodeTextmateLocation,\n    patterns: grammar.patterns,\n    name: grammar.scopeName\n  };\n  grammar.repository.$base = base || grammar.repository.$self;\n  return grammar;\n}\nvar AttributedScopeStack = class _AttributedScopeStack {\n  /**\n   * Invariant:\n   * ```\n   * if (parent && !scopePath.extends(parent.scopePath)) {\n   * \tthrow new Error();\n   * }\n   * ```\n   */\n  constructor(parent, scopePath, tokenAttributes) {\n    this.parent = parent;\n    this.scopePath = scopePath;\n    this.tokenAttributes = tokenAttributes;\n  }\n  static fromExtension(namesScopeList, contentNameScopesList) {\n    let current = namesScopeList;\n    let scopeNames = namesScopeList?.scopePath ?? null;\n    for (const frame of contentNameScopesList) {\n      scopeNames = ScopeStack.push(scopeNames, frame.scopeNames);\n      current = new _AttributedScopeStack(current, scopeNames, frame.encodedTokenAttributes);\n    }\n    return current;\n  }\n  static createRoot(scopeName, tokenAttributes) {\n    return new _AttributedScopeStack(null, new ScopeStack(null, scopeName), tokenAttributes);\n  }\n  static createRootAndLookUpScopeName(scopeName, tokenAttributes, grammar) {\n    const rawRootMetadata = grammar.getMetadataForScope(scopeName);\n    const scopePath = new ScopeStack(null, scopeName);\n    const rootStyle = grammar.themeProvider.themeMatch(scopePath);\n    const resolvedTokenAttributes = _AttributedScopeStack.mergeAttributes(\n      tokenAttributes,\n      rawRootMetadata,\n      rootStyle\n    );\n    return new _AttributedScopeStack(null, scopePath, resolvedTokenAttributes);\n  }\n  get scopeName() {\n    return this.scopePath.scopeName;\n  }\n  toString() {\n    return this.getScopeNames().join(\" \");\n  }\n  equals(other) {\n    return _AttributedScopeStack.equals(this, other);\n  }\n  static equals(a, b) {\n    do {\n      if (a === b) {\n        return true;\n      }\n      if (!a && !b) {\n        return true;\n      }\n      if (!a || !b) {\n        return false;\n      }\n      if (a.scopeName !== b.scopeName || a.tokenAttributes !== b.tokenAttributes) {\n        return false;\n      }\n      a = a.parent;\n      b = b.parent;\n    } while (true);\n  }\n  static mergeAttributes(existingTokenAttributes, basicScopeAttributes, styleAttributes) {\n    let fontStyle = -1 /* NotSet */;\n    let foreground = 0;\n    let background = 0;\n    if (styleAttributes !== null) {\n      fontStyle = styleAttributes.fontStyle;\n      foreground = styleAttributes.foregroundId;\n      background = styleAttributes.backgroundId;\n    }\n    return EncodedTokenMetadata.set(\n      existingTokenAttributes,\n      basicScopeAttributes.languageId,\n      basicScopeAttributes.tokenType,\n      null,\n      fontStyle,\n      foreground,\n      background\n    );\n  }\n  pushAttributed(scopePath, grammar) {\n    if (scopePath === null) {\n      return this;\n    }\n    if (scopePath.indexOf(\" \") === -1) {\n      return _AttributedScopeStack._pushAttributed(this, scopePath, grammar);\n    }\n    const scopes = scopePath.split(/ /g);\n    let result = this;\n    for (const scope of scopes) {\n      result = _AttributedScopeStack._pushAttributed(result, scope, grammar);\n    }\n    return result;\n  }\n  static _pushAttributed(target, scopeName, grammar) {\n    const rawMetadata = grammar.getMetadataForScope(scopeName);\n    const newPath = target.scopePath.push(scopeName);\n    const scopeThemeMatchResult = grammar.themeProvider.themeMatch(newPath);\n    const metadata = _AttributedScopeStack.mergeAttributes(\n      target.tokenAttributes,\n      rawMetadata,\n      scopeThemeMatchResult\n    );\n    return new _AttributedScopeStack(target, newPath, metadata);\n  }\n  getScopeNames() {\n    return this.scopePath.getSegments();\n  }\n  getExtensionIfDefined(base) {\n    const result = [];\n    let self = this;\n    while (self && self !== base) {\n      result.push({\n        encodedTokenAttributes: self.tokenAttributes,\n        scopeNames: self.scopePath.getExtensionIfDefined(self.parent?.scopePath ?? null)\n      });\n      self = self.parent;\n    }\n    return self === base ? result.reverse() : void 0;\n  }\n};\nvar _StateStackImpl = class _StateStackImpl {\n  /**\n   * Invariant:\n   * ```\n   * if (contentNameScopesList !== nameScopesList && contentNameScopesList?.parent !== nameScopesList) {\n   * \tthrow new Error();\n   * }\n   * if (this.parent && !nameScopesList.extends(this.parent.contentNameScopesList)) {\n   * \tthrow new Error();\n   * }\n   * ```\n   */\n  constructor(parent, ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n    this.parent = parent;\n    this.ruleId = ruleId;\n    this.beginRuleCapturedEOL = beginRuleCapturedEOL;\n    this.endRule = endRule;\n    this.nameScopesList = nameScopesList;\n    this.contentNameScopesList = contentNameScopesList;\n    this._stackElementBrand = void 0;\n    this.depth = this.parent ? this.parent.depth + 1 : 1;\n    this._enterPos = enterPos;\n    this._anchorPos = anchorPos;\n  }\n  equals(other) {\n    if (other === null) {\n      return false;\n    }\n    return _StateStackImpl._equals(this, other);\n  }\n  static _equals(a, b) {\n    if (a === b) {\n      return true;\n    }\n    if (!this._structuralEquals(a, b)) {\n      return false;\n    }\n    return AttributedScopeStack.equals(a.contentNameScopesList, b.contentNameScopesList);\n  }\n  /**\n   * A structural equals check. Does not take into account `scopes`.\n   */\n  static _structuralEquals(a, b) {\n    do {\n      if (a === b) {\n        return true;\n      }\n      if (!a && !b) {\n        return true;\n      }\n      if (!a || !b) {\n        return false;\n      }\n      if (a.depth !== b.depth || a.ruleId !== b.ruleId || a.endRule !== b.endRule) {\n        return false;\n      }\n      a = a.parent;\n      b = b.parent;\n    } while (true);\n  }\n  clone() {\n    return this;\n  }\n  static _reset(el) {\n    while (el) {\n      el._enterPos = -1;\n      el._anchorPos = -1;\n      el = el.parent;\n    }\n  }\n  reset() {\n    _StateStackImpl._reset(this);\n  }\n  pop() {\n    return this.parent;\n  }\n  safePop() {\n    if (this.parent) {\n      return this.parent;\n    }\n    return this;\n  }\n  push(ruleId, enterPos, anchorPos, beginRuleCapturedEOL, endRule, nameScopesList, contentNameScopesList) {\n    return new _StateStackImpl(\n      this,\n      ruleId,\n      enterPos,\n      anchorPos,\n      beginRuleCapturedEOL,\n      endRule,\n      nameScopesList,\n      contentNameScopesList\n    );\n  }\n  getEnterPos() {\n    return this._enterPos;\n  }\n  getAnchorPos() {\n    return this._anchorPos;\n  }\n  getRule(grammar) {\n    return grammar.getRule(this.ruleId);\n  }\n  toString() {\n    const r = [];\n    this._writeString(r, 0);\n    return \"[\" + r.join(\",\") + \"]\";\n  }\n  _writeString(res, outIndex) {\n    if (this.parent) {\n      outIndex = this.parent._writeString(res, outIndex);\n    }\n    res[outIndex++] = `(${this.ruleId}, ${this.nameScopesList?.toString()}, ${this.contentNameScopesList?.toString()})`;\n    return outIndex;\n  }\n  withContentNameScopesList(contentNameScopeStack) {\n    if (this.contentNameScopesList === contentNameScopeStack) {\n      return this;\n    }\n    return this.parent.push(\n      this.ruleId,\n      this._enterPos,\n      this._anchorPos,\n      this.beginRuleCapturedEOL,\n      this.endRule,\n      this.nameScopesList,\n      contentNameScopeStack\n    );\n  }\n  withEndRule(endRule) {\n    if (this.endRule === endRule) {\n      return this;\n    }\n    return new _StateStackImpl(\n      this.parent,\n      this.ruleId,\n      this._enterPos,\n      this._anchorPos,\n      this.beginRuleCapturedEOL,\n      endRule,\n      this.nameScopesList,\n      this.contentNameScopesList\n    );\n  }\n  // Used to warn of endless loops\n  hasSameRuleAs(other) {\n    let el = this;\n    while (el && el._enterPos === other._enterPos) {\n      if (el.ruleId === other.ruleId) {\n        return true;\n      }\n      el = el.parent;\n    }\n    return false;\n  }\n  toStateStackFrame() {\n    return {\n      ruleId: ruleIdToNumber(this.ruleId),\n      beginRuleCapturedEOL: this.beginRuleCapturedEOL,\n      endRule: this.endRule,\n      nameScopesList: this.nameScopesList?.getExtensionIfDefined(this.parent?.nameScopesList ?? null) ?? [],\n      contentNameScopesList: this.contentNameScopesList?.getExtensionIfDefined(this.nameScopesList) ?? []\n    };\n  }\n  static pushFrame(self, frame) {\n    const namesScopeList = AttributedScopeStack.fromExtension(self?.nameScopesList ?? null, frame.nameScopesList);\n    return new _StateStackImpl(\n      self,\n      ruleIdFromNumber(frame.ruleId),\n      frame.enterPos ?? -1,\n      frame.anchorPos ?? -1,\n      frame.beginRuleCapturedEOL,\n      frame.endRule,\n      namesScopeList,\n      AttributedScopeStack.fromExtension(namesScopeList, frame.contentNameScopesList)\n    );\n  }\n};\n// TODO remove me\n_StateStackImpl.NULL = new _StateStackImpl(\n  null,\n  0,\n  0,\n  0,\n  false,\n  null,\n  null,\n  null\n);\nvar StateStackImpl = _StateStackImpl;\nvar BalancedBracketSelectors = class {\n  constructor(balancedBracketScopes, unbalancedBracketScopes) {\n    this.allowAny = false;\n    this.balancedBracketScopes = balancedBracketScopes.flatMap(\n      (selector) => {\n        if (selector === \"*\") {\n          this.allowAny = true;\n          return [];\n        }\n        return createMatchers(selector, nameMatcher).map((m) => m.matcher);\n      }\n    );\n    this.unbalancedBracketScopes = unbalancedBracketScopes.flatMap(\n      (selector) => createMatchers(selector, nameMatcher).map((m) => m.matcher)\n    );\n  }\n  get matchesAlways() {\n    return this.allowAny && this.unbalancedBracketScopes.length === 0;\n  }\n  get matchesNever() {\n    return this.balancedBracketScopes.length === 0 && !this.allowAny;\n  }\n  match(scopes) {\n    for (const excluder of this.unbalancedBracketScopes) {\n      if (excluder(scopes)) {\n        return false;\n      }\n    }\n    for (const includer of this.balancedBracketScopes) {\n      if (includer(scopes)) {\n        return true;\n      }\n    }\n    return this.allowAny;\n  }\n};\nvar LineTokens = class {\n  constructor(emitBinaryTokens, lineText, tokenTypeOverrides, balancedBracketSelectors) {\n    this.balancedBracketSelectors = balancedBracketSelectors;\n    this._emitBinaryTokens = emitBinaryTokens;\n    this._tokenTypeOverrides = tokenTypeOverrides;\n    if (false) {\n      this._lineText = lineText;\n    } else {\n      this._lineText = null;\n    }\n    this._tokens = [];\n    this._binaryTokens = [];\n    this._lastTokenEndIndex = 0;\n  }\n  produce(stack, endIndex) {\n    this.produceFromScopes(stack.contentNameScopesList, endIndex);\n  }\n  produceFromScopes(scopesList, endIndex) {\n    if (this._lastTokenEndIndex >= endIndex) {\n      return;\n    }\n    if (this._emitBinaryTokens) {\n      let metadata = scopesList?.tokenAttributes ?? 0;\n      let containsBalancedBrackets = false;\n      if (this.balancedBracketSelectors?.matchesAlways) {\n        containsBalancedBrackets = true;\n      }\n      if (this._tokenTypeOverrides.length > 0 || this.balancedBracketSelectors && !this.balancedBracketSelectors.matchesAlways && !this.balancedBracketSelectors.matchesNever) {\n        const scopes2 = scopesList?.getScopeNames() ?? [];\n        for (const tokenType of this._tokenTypeOverrides) {\n          if (tokenType.matcher(scopes2)) {\n            metadata = EncodedTokenMetadata.set(\n              metadata,\n              0,\n              toOptionalTokenType(tokenType.type),\n              null,\n              -1 /* NotSet */,\n              0,\n              0\n            );\n          }\n        }\n        if (this.balancedBracketSelectors) {\n          containsBalancedBrackets = this.balancedBracketSelectors.match(scopes2);\n        }\n      }\n      if (containsBalancedBrackets) {\n        metadata = EncodedTokenMetadata.set(\n          metadata,\n          0,\n          8 /* NotSet */,\n          containsBalancedBrackets,\n          -1 /* NotSet */,\n          0,\n          0\n        );\n      }\n      if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 1] === metadata) {\n        this._lastTokenEndIndex = endIndex;\n        return;\n      }\n      this._binaryTokens.push(this._lastTokenEndIndex);\n      this._binaryTokens.push(metadata);\n      this._lastTokenEndIndex = endIndex;\n      return;\n    }\n    const scopes = scopesList?.getScopeNames() ?? [];\n    this._tokens.push({\n      startIndex: this._lastTokenEndIndex,\n      endIndex,\n      // value: lineText.substring(lastTokenEndIndex, endIndex),\n      scopes\n    });\n    this._lastTokenEndIndex = endIndex;\n  }\n  getResult(stack, lineLength) {\n    if (this._tokens.length > 0 && this._tokens[this._tokens.length - 1].startIndex === lineLength - 1) {\n      this._tokens.pop();\n    }\n    if (this._tokens.length === 0) {\n      this._lastTokenEndIndex = -1;\n      this.produce(stack, lineLength);\n      this._tokens[this._tokens.length - 1].startIndex = 0;\n    }\n    return this._tokens;\n  }\n  getBinaryResult(stack, lineLength) {\n    if (this._binaryTokens.length > 0 && this._binaryTokens[this._binaryTokens.length - 2] === lineLength - 1) {\n      this._binaryTokens.pop();\n      this._binaryTokens.pop();\n    }\n    if (this._binaryTokens.length === 0) {\n      this._lastTokenEndIndex = -1;\n      this.produce(stack, lineLength);\n      this._binaryTokens[this._binaryTokens.length - 2] = 0;\n    }\n    const result = new Uint32Array(this._binaryTokens.length);\n    for (let i = 0, len = this._binaryTokens.length; i < len; i++) {\n      result[i] = this._binaryTokens[i];\n    }\n    return result;\n  }\n};\n\n// src/registry.ts\nvar SyncRegistry = class {\n  constructor(theme, _onigLib) {\n    this._onigLib = _onigLib;\n    this._grammars = /* @__PURE__ */ new Map();\n    this._rawGrammars = /* @__PURE__ */ new Map();\n    this._injectionGrammars = /* @__PURE__ */ new Map();\n    this._theme = theme;\n  }\n  dispose() {\n    for (const grammar of this._grammars.values()) {\n      grammar.dispose();\n    }\n  }\n  setTheme(theme) {\n    this._theme = theme;\n  }\n  getColorMap() {\n    return this._theme.getColorMap();\n  }\n  /**\n   * Add `grammar` to registry and return a list of referenced scope names\n   */\n  addGrammar(grammar, injectionScopeNames) {\n    this._rawGrammars.set(grammar.scopeName, grammar);\n    if (injectionScopeNames) {\n      this._injectionGrammars.set(grammar.scopeName, injectionScopeNames);\n    }\n  }\n  /**\n   * Lookup a raw grammar.\n   */\n  lookup(scopeName) {\n    return this._rawGrammars.get(scopeName);\n  }\n  /**\n   * Returns the injections for the given grammar\n   */\n  injections(targetScope) {\n    return this._injectionGrammars.get(targetScope);\n  }\n  /**\n   * Get the default theme settings\n   */\n  getDefaults() {\n    return this._theme.getDefaults();\n  }\n  /**\n   * Match a scope in the theme.\n   */\n  themeMatch(scopePath) {\n    return this._theme.match(scopePath);\n  }\n  /**\n   * Lookup a grammar.\n   */\n  grammarForScopeName(scopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n    if (!this._grammars.has(scopeName)) {\n      let rawGrammar = this._rawGrammars.get(scopeName);\n      if (!rawGrammar) {\n        return null;\n      }\n      this._grammars.set(scopeName, createGrammar(\n        scopeName,\n        rawGrammar,\n        initialLanguage,\n        embeddedLanguages,\n        tokenTypes,\n        balancedBracketSelectors,\n        this,\n        this._onigLib\n      ));\n    }\n    return this._grammars.get(scopeName);\n  }\n};\n\n// src/index.ts\nvar Registry = class {\n  constructor(options) {\n    this._options = options;\n    this._syncRegistry = new SyncRegistry(\n      Theme.createFromRawTheme(options.theme, options.colorMap),\n      options.onigLib\n    );\n    this._ensureGrammarCache = /* @__PURE__ */ new Map();\n  }\n  dispose() {\n    this._syncRegistry.dispose();\n  }\n  /**\n   * Change the theme. Once called, no previous `ruleStack` should be used anymore.\n   */\n  setTheme(theme, colorMap) {\n    this._syncRegistry.setTheme(Theme.createFromRawTheme(theme, colorMap));\n  }\n  /**\n   * Returns a lookup array for color ids.\n   */\n  getColorMap() {\n    return this._syncRegistry.getColorMap();\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   * Please do not use language id 0.\n   */\n  loadGrammarWithEmbeddedLanguages(initialScopeName, initialLanguage, embeddedLanguages) {\n    return this.loadGrammarWithConfiguration(initialScopeName, initialLanguage, { embeddedLanguages });\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   * Please do not use language id 0.\n   */\n  loadGrammarWithConfiguration(initialScopeName, initialLanguage, configuration) {\n    return this._loadGrammar(\n      initialScopeName,\n      initialLanguage,\n      configuration.embeddedLanguages,\n      configuration.tokenTypes,\n      new BalancedBracketSelectors(\n        configuration.balancedBracketSelectors || [],\n        configuration.unbalancedBracketSelectors || []\n      )\n    );\n  }\n  /**\n   * Load the grammar for `scopeName` and all referenced included grammars asynchronously.\n   */\n  loadGrammar(initialScopeName) {\n    return this._loadGrammar(initialScopeName, 0, null, null, null);\n  }\n  _loadGrammar(initialScopeName, initialLanguage, embeddedLanguages, tokenTypes, balancedBracketSelectors) {\n    const dependencyProcessor = new ScopeDependencyProcessor(this._syncRegistry, initialScopeName);\n    while (dependencyProcessor.Q.length > 0) {\n      dependencyProcessor.Q.map((request) => this._loadSingleGrammar(request.scopeName));\n      dependencyProcessor.processQueue();\n    }\n    return this._grammarForScopeName(\n      initialScopeName,\n      initialLanguage,\n      embeddedLanguages,\n      tokenTypes,\n      balancedBracketSelectors\n    );\n  }\n  _loadSingleGrammar(scopeName) {\n    if (!this._ensureGrammarCache.has(scopeName)) {\n      this._doLoadSingleGrammar(scopeName);\n      this._ensureGrammarCache.set(scopeName, true);\n    }\n  }\n  _doLoadSingleGrammar(scopeName) {\n    const grammar = this._options.loadGrammar(scopeName);\n    if (grammar) {\n      const injections = typeof this._options.getInjections === \"function\" ? this._options.getInjections(scopeName) : void 0;\n      this._syncRegistry.addGrammar(grammar, injections);\n    }\n  }\n  /**\n   * Adds a rawGrammar.\n   */\n  addGrammar(rawGrammar, injections = [], initialLanguage = 0, embeddedLanguages = null) {\n    this._syncRegistry.addGrammar(rawGrammar, injections);\n    return this._grammarForScopeName(rawGrammar.scopeName, initialLanguage, embeddedLanguages);\n  }\n  /**\n   * Get the grammar for `scopeName`. The grammar must first be created via `loadGrammar` or `addGrammar`.\n   */\n  _grammarForScopeName(scopeName, initialLanguage = 0, embeddedLanguages = null, tokenTypes = null, balancedBracketSelectors = null) {\n    return this._syncRegistry.grammarForScopeName(\n      scopeName,\n      initialLanguage,\n      embeddedLanguages,\n      tokenTypes,\n      balancedBracketSelectors\n    );\n  }\n};\nvar INITIAL = StateStackImpl.NULL;\nexport {\n  EncodedTokenMetadata,\n  FindOption,\n  FontStyle,\n  INITIAL,\n  Registry,\n  Theme,\n  disposeOnigString\n};\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef CoreOptions\n * @property {ReadonlyArray<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\nconst defaultSubsetRegex = /[\"&'<>`]/g\nconst surrogatePairsRegex = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g\nconst controlCharactersRegex =\n  // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n  /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g\nconst regexEscapeRegex = /[|\\\\{}()[\\]^$+*?.]/g\n\n/** @type {WeakMap<ReadonlyArray<string>, RegExp>} */\nconst subsetToRegexCache = new WeakMap()\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset\n      ? charactersToExpressionCached(options.subset)\n      : defaultSubsetRegex,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(surrogatePairsRegex, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(controlCharactersRegex, basic)\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * A wrapper function that caches the result of `charactersToExpression` with a WeakMap.\n * This can improve performance when tooling calls `charactersToExpression` repeatedly\n * with the same subset.\n *\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpressionCached(subset) {\n  let cached = subsetToRegexCache.get(subset)\n\n  if (!cached) {\n    cached = charactersToExpression(subset)\n    subsetToRegexCache.set(subset, cached)\n  }\n\n  return cached\n}\n\n/**\n * @param {ReadonlyArray<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(regexEscapeRegex, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","const hexadecimalRegex = /[\\dA-Fa-f]/\n\n/**\n * Configurable ways to encode characters as hexadecimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toHexadecimal(code, next, omit) {\n  const value = '&#x' + code.toString(16).toUpperCase()\n  return omit && next && !hexadecimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","const decimalRegex = /\\d/\n\n/**\n * Configurable ways to encode characters as decimal references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @returns {string}\n */\nexport function toDecimal(code, next, omit) {\n  const value = '&#' + String(code)\n  return omit && next && !decimalRegex.test(String.fromCharCode(next))\n    ? value\n    : value + ';'\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of named character references from HTML 4.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntitiesHtml4 = {\n  nbsp: ' ',\n  iexcl: '¡',\n  cent: '¢',\n  pound: '£',\n  curren: '¤',\n  yen: '¥',\n  brvbar: '¦',\n  sect: '§',\n  uml: '¨',\n  copy: '©',\n  ordf: 'ª',\n  laquo: '«',\n  not: '¬',\n  shy: '­',\n  reg: '®',\n  macr: '¯',\n  deg: '°',\n  plusmn: '±',\n  sup2: '²',\n  sup3: '³',\n  acute: '´',\n  micro: 'µ',\n  para: '¶',\n  middot: '·',\n  cedil: '¸',\n  sup1: '¹',\n  ordm: 'º',\n  raquo: '»',\n  frac14: '¼',\n  frac12: '½',\n  frac34: '¾',\n  iquest: '¿',\n  Agrave: 'À',\n  Aacute: 'Á',\n  Acirc: 'Â',\n  Atilde: 'Ã',\n  Auml: 'Ä',\n  Aring: 'Å',\n  AElig: 'Æ',\n  Ccedil: 'Ç',\n  Egrave: 'È',\n  Eacute: 'É',\n  Ecirc: 'Ê',\n  Euml: 'Ë',\n  Igrave: 'Ì',\n  Iacute: 'Í',\n  Icirc: 'Î',\n  Iuml: 'Ï',\n  ETH: 'Ð',\n  Ntilde: 'Ñ',\n  Ograve: 'Ò',\n  Oacute: 'Ó',\n  Ocirc: 'Ô',\n  Otilde: 'Õ',\n  Ouml: 'Ö',\n  times: '×',\n  Oslash: 'Ø',\n  Ugrave: 'Ù',\n  Uacute: 'Ú',\n  Ucirc: 'Û',\n  Uuml: 'Ü',\n  Yacute: 'Ý',\n  THORN: 'Þ',\n  szlig: 'ß',\n  agrave: 'à',\n  aacute: 'á',\n  acirc: 'â',\n  atilde: 'ã',\n  auml: 'ä',\n  aring: 'å',\n  aelig: 'æ',\n  ccedil: 'ç',\n  egrave: 'è',\n  eacute: 'é',\n  ecirc: 'ê',\n  euml: 'ë',\n  igrave: 'ì',\n  iacute: 'í',\n  icirc: 'î',\n  iuml: 'ï',\n  eth: 'ð',\n  ntilde: 'ñ',\n  ograve: 'ò',\n  oacute: 'ó',\n  ocirc: 'ô',\n  otilde: 'õ',\n  ouml: 'ö',\n  divide: '÷',\n  oslash: 'ø',\n  ugrave: 'ù',\n  uacute: 'ú',\n  ucirc: 'û',\n  uuml: 'ü',\n  yacute: 'ý',\n  thorn: 'þ',\n  yuml: 'ÿ',\n  fnof: 'ƒ',\n  Alpha: 'Α',\n  Beta: 'Β',\n  Gamma: 'Γ',\n  Delta: 'Δ',\n  Epsilon: 'Ε',\n  Zeta: 'Ζ',\n  Eta: 'Η',\n  Theta: 'Θ',\n  Iota: 'Ι',\n  Kappa: 'Κ',\n  Lambda: 'Λ',\n  Mu: 'Μ',\n  Nu: 'Ν',\n  Xi: 'Ξ',\n  Omicron: 'Ο',\n  Pi: 'Π',\n  Rho: 'Ρ',\n  Sigma: 'Σ',\n  Tau: 'Τ',\n  Upsilon: 'Υ',\n  Phi: 'Φ',\n  Chi: 'Χ',\n  Psi: 'Ψ',\n  Omega: 'Ω',\n  alpha: 'α',\n  beta: 'β',\n  gamma: 'γ',\n  delta: 'δ',\n  epsilon: 'ε',\n  zeta: 'ζ',\n  eta: 'η',\n  theta: 'θ',\n  iota: 'ι',\n  kappa: 'κ',\n  lambda: 'λ',\n  mu: 'μ',\n  nu: 'ν',\n  xi: 'ξ',\n  omicron: 'ο',\n  pi: 'π',\n  rho: 'ρ',\n  sigmaf: 'ς',\n  sigma: 'σ',\n  tau: 'τ',\n  upsilon: 'υ',\n  phi: 'φ',\n  chi: 'χ',\n  psi: 'ψ',\n  omega: 'ω',\n  thetasym: 'ϑ',\n  upsih: 'ϒ',\n  piv: 'ϖ',\n  bull: '•',\n  hellip: '…',\n  prime: '′',\n  Prime: '″',\n  oline: '‾',\n  frasl: '⁄',\n  weierp: '℘',\n  image: 'ℑ',\n  real: 'ℜ',\n  trade: '™',\n  alefsym: 'ℵ',\n  larr: '←',\n  uarr: '↑',\n  rarr: '→',\n  darr: '↓',\n  harr: '↔',\n  crarr: '↵',\n  lArr: '⇐',\n  uArr: '⇑',\n  rArr: '⇒',\n  dArr: '⇓',\n  hArr: '⇔',\n  forall: '∀',\n  part: '∂',\n  exist: '∃',\n  empty: '∅',\n  nabla: '∇',\n  isin: '∈',\n  notin: '∉',\n  ni: '∋',\n  prod: '∏',\n  sum: '∑',\n  minus: '−',\n  lowast: '∗',\n  radic: '√',\n  prop: '∝',\n  infin: '∞',\n  ang: '∠',\n  and: '∧',\n  or: '∨',\n  cap: '∩',\n  cup: '∪',\n  int: '∫',\n  there4: '∴',\n  sim: '∼',\n  cong: '≅',\n  asymp: '≈',\n  ne: '≠',\n  equiv: '≡',\n  le: '≤',\n  ge: '≥',\n  sub: '⊂',\n  sup: '⊃',\n  nsub: '⊄',\n  sube: '⊆',\n  supe: '⊇',\n  oplus: '⊕',\n  otimes: '⊗',\n  perp: '⊥',\n  sdot: '⋅',\n  lceil: '⌈',\n  rceil: '⌉',\n  lfloor: '⌊',\n  rfloor: '⌋',\n  lang: '〈',\n  rang: '〉',\n  loz: '◊',\n  spades: '♠',\n  clubs: '♣',\n  hearts: '♥',\n  diams: '♦',\n  quot: '\"',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  OElig: 'Œ',\n  oelig: 'œ',\n  Scaron: 'Š',\n  scaron: 'š',\n  Yuml: 'Ÿ',\n  circ: 'ˆ',\n  tilde: '˜',\n  ensp: ' ',\n  emsp: ' ',\n  thinsp: ' ',\n  zwnj: '‌',\n  zwj: '‍',\n  lrm: '‎',\n  rlm: '‏',\n  ndash: '–',\n  mdash: '—',\n  lsquo: '‘',\n  rsquo: '’',\n  sbquo: '‚',\n  ldquo: '“',\n  rdquo: '”',\n  bdquo: '„',\n  dagger: '†',\n  Dagger: '‡',\n  permil: '‰',\n  lsaquo: '‹',\n  rsaquo: '›',\n  euro: '€'\n}\n","/**\n * List of legacy (that don’t need a trailing `;`) named references which could,\n * depending on what follows them, turn into a different meaning\n *\n * @type {Array<string>}\n */\nexport const dangerous = [\n  'cent',\n  'copy',\n  'divide',\n  'gt',\n  'lt',\n  'not',\n  'para',\n  'times'\n]\n","import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterEntitiesHtml4} from 'character-entities-html4'\nimport {dangerous} from '../constant/dangerous.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * `characterEntitiesHtml4` but inverted.\n *\n * @type {Record<string, string>}\n */\nconst characters = {}\n\n/** @type {string} */\nlet key\n\nfor (key in characterEntitiesHtml4) {\n  if (own.call(characterEntitiesHtml4, key)) {\n    characters[characterEntitiesHtml4[key]] = key\n  }\n}\n\nconst notAlphanumericRegex = /[^\\dA-Za-z]/\n\n/**\n * Configurable ways to encode characters as named references.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean|undefined} omit\n * @param {boolean|undefined} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  const character = String.fromCharCode(code)\n\n  if (own.call(characters, character)) {\n    const name = characters[character]\n    const value = '&' + name\n\n    if (\n      omit &&\n      characterEntitiesLegacy.includes(name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          notAlphanumericRegex.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n","/**\n * @typedef FormatSmartOptions\n * @property {boolean} [useNamedReferences=false]\n *   Prefer named character references (`&amp;`) where possible.\n * @property {boolean} [useShortestReferences=false]\n *   Prefer the shortest possible reference, if that results in less bytes.\n *   **Note**: `useNamedReferences` can be omitted when using `useShortestReferences`.\n * @property {boolean} [omitOptionalSemicolons=false]\n *   Whether to omit semicolons when possible.\n *   **Note**: This creates what HTML calls “parse errors” but is otherwise still valid HTML — don’t use this except when building a minifier.\n *   Omitting semicolons is possible for certain named and numeric references in some cases.\n * @property {boolean} [attribute=false]\n *   Create character references which don’t fail in attributes.\n *   **Note**: `attribute` only applies when operating dangerously with\n *   `omitOptionalSemicolons: true`.\n */\n\nimport {toHexadecimal} from './to-hexadecimal.js'\nimport {toDecimal} from './to-decimal.js'\nimport {toNamed} from './to-named.js'\n\n/**\n * Configurable ways to encode a character yielding pretty or small results.\n *\n * @param {number} code\n * @param {number} next\n * @param {FormatSmartOptions} options\n * @returns {string}\n */\nexport function formatSmart(code, next, options) {\n  let numeric = toHexadecimal(code, next, options.omitOptionalSemicolons)\n  /** @type {string|undefined} */\n  let named\n\n  if (options.useNamedReferences || options.useShortestReferences) {\n    named = toNamed(\n      code,\n      next,\n      options.omitOptionalSemicolons,\n      options.attribute\n    )\n  }\n\n  // Use the shortest numeric reference when requested.\n  // A simple algorithm would use decimal for all code points under 100, as\n  // those are shorter than hexadecimal:\n  //\n  // * `&#99;` vs `&#x63;` (decimal shorter)\n  // * `&#100;` vs `&#x64;` (equal)\n  //\n  // However, because we take `next` into consideration when `omit` is used,\n  // And it would be possible that decimals are shorter on bigger values as\n  // well if `next` is hexadecimal but not decimal, we instead compare both.\n  if (\n    (options.useShortestReferences || !named) &&\n    options.useShortestReferences\n  ) {\n    const decimal = toDecimal(code, next, options.omitOptionalSemicolons)\n\n    if (decimal.length < numeric.length) {\n      numeric = decimal\n    }\n  }\n\n  return named &&\n    (!options.useShortestReferences || named.length < numeric.length)\n    ? named\n    : numeric\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @import {Comment, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\nconst htmlCommentRegex = /^>|^->|<!--|-->|--!>|<!-$/g\n\n// Declare arrays as variables so it can be cached by `stringifyEntities`\nconst bogusCommentEntitySubset = ['>']\nconst commentEntitySubset = ['<', '>']\n\n/**\n * Serialize a comment.\n *\n * @param {Comment} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function comment(node, _1, _2, state) {\n  // See: <https://html.spec.whatwg.org/multipage/syntax.html#comments>\n  return state.settings.bogusComments\n    ? '<?' +\n        stringifyEntities(\n          node.value,\n          Object.assign({}, state.settings.characterReferences, {\n            subset: bogusCommentEntitySubset\n          })\n        ) +\n        '>'\n    : '<!--' + node.value.replace(htmlCommentRegex, encode) + '-->'\n\n  /**\n   * @param {string} $0\n   */\n  function encode($0) {\n    return stringifyEntities(\n      $0,\n      Object.assign({}, state.settings.characterReferences, {\n        subset: commentEntitySubset\n      })\n    )\n  }\n}\n","/**\n * @import {Doctype, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a doctype.\n *\n * @param {Doctype} _1\n *   Node to handle.\n * @param {number | undefined} _2\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _3\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function doctype(_1, _2, _3, state) {\n  return (\n    '<!' +\n    (state.settings.upperDoctype ? 'DOCTYPE' : 'doctype') +\n    (state.settings.tightDoctype ? '' : ' ') +\n    'html>'\n  )\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @import {Parents, RootContent} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\n\nexport const siblingAfter = siblings(1)\nexport const siblingBefore = siblings(-1)\n\n/** @type {Array<RootContent>} */\nconst emptyChildren = []\n\n/**\n * Factory to check siblings in a direction.\n *\n * @param {number} increment\n */\nfunction siblings(increment) {\n  return sibling\n\n  /**\n   * Find applicable siblings in a direction.\n   *\n   * @template {Parents} Parent\n   *   Parent type.\n   * @param {Parent | undefined} parent\n   *   Parent.\n   * @param {number | undefined} index\n   *   Index of child in `parent`.\n   * @param {boolean | undefined} [includeWhitespace=false]\n   *   Whether to include whitespace (default: `false`).\n   * @returns {Parent extends {children: Array<infer Child>} ? Child | undefined : never}\n   *   Child of parent.\n   */\n  function sibling(parent, index, includeWhitespace) {\n    const siblings = parent ? parent.children : emptyChildren\n    let offset = (index || 0) + increment\n    let next = siblings[offset]\n\n    if (!includeWhitespace) {\n      while (next && whitespace(next)) {\n        offset += increment\n        next = siblings[offset]\n      }\n    }\n\n    // @ts-expect-error: it’s a correct child.\n    return next\n  }\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\n/**\n * @callback OmitHandle\n *   Check if a tag can be omitted.\n * @param {Element} element\n *   Element to check.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether to omit a tag.\n *\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to check if a given node can have a tag omitted.\n *\n * @param {Record<string, OmitHandle>} handlers\n *   Omission handlers, where each key is a tag name, and each value is the\n *   corresponding handler.\n * @returns {OmitHandle}\n *   Whether to omit a tag of an element.\n */\nexport function omission(handlers) {\n  return omit\n\n  /**\n   * Check if a given node can have a tag omitted.\n   *\n   * @type {OmitHandle}\n   */\n  function omit(node, index, parent) {\n    return (\n      own.call(handlers, node.tagName) &&\n      handlers[node.tagName](node, index, parent)\n    )\n  }\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter} from './util/siblings.js'\nimport {omission} from './omission.js'\n\nexport const closing = omission({\n  body,\n  caption: headOrColgroupOrCaption,\n  colgroup: headOrColgroupOrCaption,\n  dd,\n  dt,\n  head: headOrColgroupOrCaption,\n  html,\n  li,\n  optgroup,\n  option,\n  p,\n  rp: rubyElement,\n  rt: rubyElement,\n  tbody,\n  td: cells,\n  tfoot,\n  th: cells,\n  thead,\n  tr\n})\n\n/**\n * Macro for `</head>`, `</colgroup>`, and `</caption>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction headOrColgroupOrCaption(_, index, parent) {\n  const next = siblingAfter(parent, index, true)\n  return (\n    !next ||\n    (next.type !== 'comment' &&\n      !(next.type === 'text' && whitespace(next.value.charAt(0))))\n  )\n}\n\n/**\n * Whether to omit `</html>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction html(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</body>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction body(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || next.type !== 'comment'\n}\n\n/**\n * Whether to omit `</p>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction p(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return next\n    ? next.type === 'element' &&\n        (next.tagName === 'address' ||\n          next.tagName === 'article' ||\n          next.tagName === 'aside' ||\n          next.tagName === 'blockquote' ||\n          next.tagName === 'details' ||\n          next.tagName === 'div' ||\n          next.tagName === 'dl' ||\n          next.tagName === 'fieldset' ||\n          next.tagName === 'figcaption' ||\n          next.tagName === 'figure' ||\n          next.tagName === 'footer' ||\n          next.tagName === 'form' ||\n          next.tagName === 'h1' ||\n          next.tagName === 'h2' ||\n          next.tagName === 'h3' ||\n          next.tagName === 'h4' ||\n          next.tagName === 'h5' ||\n          next.tagName === 'h6' ||\n          next.tagName === 'header' ||\n          next.tagName === 'hgroup' ||\n          next.tagName === 'hr' ||\n          next.tagName === 'main' ||\n          next.tagName === 'menu' ||\n          next.tagName === 'nav' ||\n          next.tagName === 'ol' ||\n          next.tagName === 'p' ||\n          next.tagName === 'pre' ||\n          next.tagName === 'section' ||\n          next.tagName === 'table' ||\n          next.tagName === 'ul')\n    : !parent ||\n        // Confusing parent.\n        !(\n          parent.type === 'element' &&\n          (parent.tagName === 'a' ||\n            parent.tagName === 'audio' ||\n            parent.tagName === 'del' ||\n            parent.tagName === 'ins' ||\n            parent.tagName === 'map' ||\n            parent.tagName === 'noscript' ||\n            parent.tagName === 'video')\n        )\n}\n\n/**\n * Whether to omit `</li>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction li(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'li')\n}\n\n/**\n * Whether to omit `</dt>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dt(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd')\n  )\n}\n\n/**\n * Whether to omit `</dd>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction dd(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'dt' || next.tagName === 'dd'))\n  )\n}\n\n/**\n * Whether to omit `</rt>` or `</rp>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction rubyElement(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'rp' || next.tagName === 'rt'))\n  )\n}\n\n/**\n * Whether to omit `</optgroup>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction optgroup(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'optgroup')\n}\n\n/**\n * Whether to omit `</option>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction option(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'option' || next.tagName === 'optgroup'))\n  )\n}\n\n/**\n * Whether to omit `</thead>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction thead(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return Boolean(\n    next &&\n      next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot')\n  )\n}\n\n/**\n * Whether to omit `</tbody>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tbody(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'tbody' || next.tagName === 'tfoot'))\n  )\n}\n\n/**\n * Whether to omit `</tfoot>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tfoot(_, index, parent) {\n  return !siblingAfter(parent, index)\n}\n\n/**\n * Whether to omit `</tr>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction tr(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return !next || (next.type === 'element' && next.tagName === 'tr')\n}\n\n/**\n * Whether to omit `</td>` or `</th>`.\n *\n * @param {Element} _\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the closing tag can be omitted.\n */\nfunction cells(_, index, parent) {\n  const next = siblingAfter(parent, index)\n  return (\n    !next ||\n    (next.type === 'element' &&\n      (next.tagName === 'td' || next.tagName === 'th'))\n  )\n}\n","/**\n * @import {Element, Parents} from 'hast'\n */\n\nimport {whitespace} from 'hast-util-whitespace'\nimport {siblingAfter, siblingBefore} from './util/siblings.js'\nimport {closing} from './closing.js'\nimport {omission} from './omission.js'\n\nexport const opening = omission({\n  body,\n  colgroup,\n  head,\n  html,\n  tbody\n})\n\n/**\n * Whether to omit `<html>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction html(node) {\n  const head = siblingAfter(node, -1)\n  return !head || head.type !== 'comment'\n}\n\n/**\n * Whether to omit `<head>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction head(node) {\n  /** @type {Set<string>} */\n  const seen = new Set()\n\n  // Whether `srcdoc` or not,\n  // make sure the content model at least doesn’t have too many `base`s/`title`s.\n  for (const child of node.children) {\n    if (\n      child.type === 'element' &&\n      (child.tagName === 'base' || child.tagName === 'title')\n    ) {\n      if (seen.has(child.tagName)) return false\n      seen.add(child.tagName)\n    }\n  }\n\n  // “May be omitted if the element is empty,\n  // or if the first thing inside the head element is an element.”\n  const child = node.children[0]\n  return !child || child.type === 'element'\n}\n\n/**\n * Whether to omit `<body>`.\n *\n * @param {Element} node\n *   Element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction body(node) {\n  const head = siblingAfter(node, -1, true)\n\n  return (\n    !head ||\n    (head.type !== 'comment' &&\n      !(head.type === 'text' && whitespace(head.value.charAt(0))) &&\n      !(\n        head.type === 'element' &&\n        (head.tagName === 'meta' ||\n          head.tagName === 'link' ||\n          head.tagName === 'script' ||\n          head.tagName === 'style' ||\n          head.tagName === 'template')\n      ))\n  )\n}\n\n/**\n * Whether to omit `<colgroup>`.\n * The spec describes some logic for the opening tag, but it’s easier to\n * implement in the closing tag, to the same effect, so we handle it there\n * instead.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction colgroup(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1, true)\n\n  // Previous colgroup was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    previous.tagName === 'colgroup' &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'col')\n}\n\n/**\n * Whether to omit `<tbody>`.\n *\n * @param {Element} node\n *   Element.\n * @param {number | undefined} index\n *   Index of element in parent.\n * @param {Parents | undefined} parent\n *   Parent of element.\n * @returns {boolean}\n *   Whether the opening tag can be omitted.\n */\nfunction tbody(node, index, parent) {\n  const previous = siblingBefore(parent, index)\n  const head = siblingAfter(node, -1)\n\n  // Previous table section was already omitted.\n  if (\n    parent &&\n    previous &&\n    previous.type === 'element' &&\n    (previous.tagName === 'thead' || previous.tagName === 'tbody') &&\n    closing(previous, parent.children.indexOf(previous), parent)\n  ) {\n    return false\n  }\n\n  return Boolean(head && head.type === 'element' && head.tagName === 'tr')\n}\n","/**\n * @import {Element, Parents, Properties} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {ccount} from 'ccount'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {find, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringifyEntities} from 'stringify-entities'\nimport {closing} from '../omission/closing.js'\nimport {opening} from '../omission/opening.js'\n\n/**\n * Maps of subsets.\n *\n * Each value is a matrix of tuples.\n * The value at `0` causes parse errors, the value at `1` is valid.\n * Of both, the value at `0` is unsafe, and the value at `1` is safe.\n *\n * @type {Record<'double' | 'name' | 'single' | 'unquoted', Array<[Array<string>, Array<string>]>>}\n */\nconst constants = {\n  // See: <https://html.spec.whatwg.org/#attribute-name-state>.\n  name: [\n    ['\\t\\n\\f\\r &/=>'.split(''), '\\t\\n\\f\\r \"&\\'/=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'/<=>'.split(''), '\\0\\t\\n\\f\\r \"&\\'/<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(unquoted)-state>.\n  unquoted: [\n    ['\\t\\n\\f\\r &>'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')],\n    ['\\0\\t\\n\\f\\r \"&\\'<=>`'.split(''), '\\0\\t\\n\\f\\r \"&\\'<=>`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(single-quoted)-state>.\n  single: [\n    [\"&'\".split(''), '\"&\\'`'.split('')],\n    [\"\\0&'\".split(''), '\\0\"&\\'`'.split('')]\n  ],\n  // See: <https://html.spec.whatwg.org/#attribute-value-(double-quoted)-state>.\n  double: [\n    ['\"&'.split(''), '\"&\\'`'.split('')],\n    ['\\0\"&'.split(''), '\\0\"&\\'`'.split('')]\n  ]\n}\n\n/**\n * Serialize an element node.\n *\n * @param {Element} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function element(node, index, parent, state) {\n  const schema = state.schema\n  const omit = schema.space === 'svg' ? false : state.settings.omitOptionalTags\n  let selfClosing =\n    schema.space === 'svg'\n      ? state.settings.closeEmptyElements\n      : state.settings.voids.includes(node.tagName.toLowerCase())\n  /** @type {Array<string>} */\n  const parts = []\n  /** @type {string} */\n  let last\n\n  if (schema.space === 'html' && node.tagName === 'svg') {\n    state.schema = svg\n  }\n\n  const attributes = serializeAttributes(state, node.properties)\n\n  const content = state.all(\n    schema.space === 'html' && node.tagName === 'template' ? node.content : node\n  )\n\n  state.schema = schema\n\n  // If the node is categorised as void, but it has children, remove the\n  // categorisation.\n  // This enables for example `menuitem`s, which are void in W3C HTML but not\n  // void in WHATWG HTML, to be stringified properly.\n  // Note: `menuitem` has since been removed from the HTML spec, and so is no\n  // longer void.\n  if (content) selfClosing = false\n\n  if (attributes || !omit || !opening(node, index, parent)) {\n    parts.push('<', node.tagName, attributes ? ' ' + attributes : '')\n\n    if (\n      selfClosing &&\n      (schema.space === 'svg' || state.settings.closeSelfClosing)\n    ) {\n      last = attributes.charAt(attributes.length - 1)\n      if (\n        !state.settings.tightSelfClosing ||\n        last === '/' ||\n        (last && last !== '\"' && last !== \"'\")\n      ) {\n        parts.push(' ')\n      }\n\n      parts.push('/')\n    }\n\n    parts.push('>')\n  }\n\n  parts.push(content)\n\n  if (!selfClosing && (!omit || !closing(node, index, parent))) {\n    parts.push('</' + node.tagName + '>')\n  }\n\n  return parts.join('')\n}\n\n/**\n * @param {State} state\n * @param {Properties | null | undefined} properties\n * @returns {string}\n */\nfunction serializeAttributes(state, properties) {\n  /** @type {Array<string>} */\n  const values = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (properties) {\n    for (key in properties) {\n      if (properties[key] !== null && properties[key] !== undefined) {\n        const value = serializeAttribute(state, key, properties[key])\n        if (value) values.push(value)\n      }\n    }\n  }\n\n  while (++index < values.length) {\n    const last = state.settings.tightAttributes\n      ? values[index].charAt(values[index].length - 1)\n      : undefined\n\n    // In tight mode, don’t add a space after quoted attributes.\n    if (index !== values.length - 1 && last !== '\"' && last !== \"'\") {\n      values[index] += ' '\n    }\n  }\n\n  return values.join('')\n}\n\n/**\n * @param {State} state\n * @param {string} key\n * @param {Properties[keyof Properties]} value\n * @returns {string}\n */\nfunction serializeAttribute(state, key, value) {\n  const info = find(state.schema, key)\n  const x =\n    state.settings.allowParseErrors && state.schema.space === 'html' ? 0 : 1\n  const y = state.settings.allowDangerousCharacters ? 0 : 1\n  let quote = state.quote\n  /** @type {string | undefined} */\n  let result\n\n  if (info.overloadedBoolean && (value === info.attribute || value === '')) {\n    value = true\n  } else if (\n    info.boolean ||\n    (info.overloadedBoolean && typeof value !== 'string')\n  ) {\n    value = Boolean(value)\n  }\n\n  if (\n    value === null ||\n    value === undefined ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return ''\n  }\n\n  const name = stringifyEntities(\n    info.attribute,\n    Object.assign({}, state.settings.characterReferences, {\n      // Always encode without parse errors in non-HTML.\n      subset: constants.name[x][y]\n    })\n  )\n\n  // No value.\n  // There is currently only one boolean property in SVG: `[download]` on\n  // `<a>`.\n  // This property does not seem to work in browsers (Firefox, Safari, Chrome),\n  // so I can’t test if dropping the value works.\n  // But I assume that it should:\n  //\n  // ```html\n  // <!doctype html>\n  // <svg viewBox=\"0 0 100 100\">\n  //   <a href=https://example.com download>\n  //     <circle cx=50 cy=40 r=35 />\n  //   </a>\n  // </svg>\n  // ```\n  //\n  // See: <https://github.com/wooorm/property-information/blob/main/lib/svg.js>\n  if (value === true) return name\n\n  // `spaces` doesn’t accept a second argument, but it’s given here just to\n  // keep the code cleaner.\n  value = Array.isArray(value)\n    ? (info.commaSeparated ? commas : spaces)(value, {\n        padLeft: !state.settings.tightCommaSeparatedLists\n      })\n    : String(value)\n\n  if (state.settings.collapseEmptyAttributes && !value) return name\n\n  // Check unquoted value.\n  if (state.settings.preferUnquoted) {\n    result = stringifyEntities(\n      value,\n      Object.assign({}, state.settings.characterReferences, {\n        attribute: true,\n        subset: constants.unquoted[x][y]\n      })\n    )\n  }\n\n  // If we don’t want unquoted, or if `value` contains character references when\n  // unquoted…\n  if (result !== value) {\n    // If the alternative is less common than `quote`, switch.\n    if (\n      state.settings.quoteSmart &&\n      ccount(value, quote) > ccount(value, state.alternative)\n    ) {\n      quote = state.alternative\n    }\n\n    result =\n      quote +\n      stringifyEntities(\n        value,\n        Object.assign({}, state.settings.characterReferences, {\n          // Always encode without parse errors in non-HTML.\n          subset: (quote === \"'\" ? constants.single : constants.double)[x][y],\n          attribute: true\n        })\n      ) +\n      quote\n  }\n\n  // Don’t add a `=` for unquoted empties.\n  return name + (result ? '=' + result : result)\n}\n","/**\n * @import {Parents, Text} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {stringifyEntities} from 'stringify-entities'\n\n// Declare array as variable so it can be cached by `stringifyEntities`\nconst textEntitySubset = ['<', '&']\n\n/**\n * Serialize a text node.\n *\n * @param {Raw | Text} node\n *   Node to handle.\n * @param {number | undefined} _\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function text(node, _, parent, state) {\n  // Check if content of `node` should be escaped.\n  return parent &&\n    parent.type === 'element' &&\n    (parent.tagName === 'script' || parent.tagName === 'style')\n    ? node.value\n    : stringifyEntities(\n        node.value,\n        Object.assign({}, state.settings.characterReferences, {\n          subset: textEntitySubset\n        })\n      )\n}\n","/**\n * @import {Parents} from 'hast'\n * @import {Raw} from 'mdast-util-to-hast'\n * @import {State} from '../index.js'\n */\n\nimport {text} from './text.js'\n\n/**\n * Serialize a raw node.\n *\n * @param {Raw} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function raw(node, index, parent, state) {\n  return state.settings.allowDangerousHtml\n    ? node.value\n    : text(node, index, parent, state)\n}\n","/**\n * @import {Parents, Root} from 'hast'\n * @import {State} from '../index.js'\n */\n\n/**\n * Serialize a root.\n *\n * @param {Root} node\n *   Node to handle.\n * @param {number | undefined} _1\n *   Index of `node` in `parent.\n * @param {Parents | undefined} _2\n *   Parent of `node`.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {string}\n *   Serialized node.\n */\nexport function root(node, _1, _2, state) {\n  return state.all(node)\n}\n","/**\n * @import {Nodes, Parents} from 'hast'\n * @import {State} from '../index.js'\n */\n\nimport {zwitch} from 'zwitch'\nimport {comment} from './comment.js'\nimport {doctype} from './doctype.js'\nimport {element} from './element.js'\nimport {raw} from './raw.js'\nimport {root} from './root.js'\nimport {text} from './text.js'\n\n/**\n * @type {(node: Nodes, index: number | undefined, parent: Parents | undefined, state: State) => string}\n */\nexport const handle = zwitch('type', {\n  invalid,\n  unknown,\n  handlers: {comment, doctype, element, raw, root, text}\n})\n\n/**\n * Fail when a non-node is found in the tree.\n *\n * @param {unknown} node\n *   Unknown value.\n * @returns {never}\n *   Never.\n */\nfunction invalid(node) {\n  throw new Error('Expected node, not `' + node + '`')\n}\n\n/**\n * Fail when a node with an unknown type is found in the tree.\n *\n * @param {unknown} node_\n *  Unknown node.\n * @returns {never}\n *   Never.\n */\nfunction unknown(node_) {\n  // `type` is guaranteed by runtime JS.\n  const node = /** @type {Nodes} */ (node_)\n  throw new Error('Cannot compile unknown node `' + node.type + '`')\n}\n","/**\n * @import {Nodes, Parents, RootContent} from 'hast'\n * @import {Schema} from 'property-information'\n * @import {Options as StringifyEntitiesOptions} from 'stringify-entities'\n */\n\n/**\n * @typedef {Omit<StringifyEntitiesOptions, 'attribute' | 'escapeOnly' | 'subset'>} CharacterReferences\n *\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [allowDangerousCharacters=false]\n *   Do not encode some characters which cause XSS vulnerabilities in older\n *   browsers (default: `false`).\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Allow `raw` nodes and insert them as raw HTML (default: `false`).\n *\n *   When `false`, `Raw` nodes are encoded.\n *\n *   > ⚠️ **Danger**: only set this if you completely trust the content.\n * @property {boolean | null | undefined} [allowParseErrors=false]\n *   Do not encode characters which cause parse errors (even though they work),\n *   to save bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [bogusComments=false]\n *   Use “bogus comments” instead of comments to save byes: `<?charlie>`\n *   instead of `<!--charlie-->` (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {CharacterReferences | null | undefined} [characterReferences]\n *   Configure how to serialize character references (optional).\n * @property {boolean | null | undefined} [closeEmptyElements=false]\n *   Close SVG elements without any content with slash (`/`) on the opening tag\n *   instead of an end tag: `<circle />` instead of `<circle></circle>`\n *   (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the HTML space.\n * @property {boolean | null | undefined} [closeSelfClosing=false]\n *   Close self-closing nodes with an extra slash (`/`): `<img />` instead of\n *   `<img>` (default: `false`).\n *\n *   See `tightSelfClosing` to control whether a space is used before the\n *   slash.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [collapseEmptyAttributes=false]\n *   Collapse empty attributes: get `class` instead of `class=\"\"` (default:\n *   `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: boolean attributes (such as `hidden`) are always collapsed.\n * @property {boolean | null | undefined} [omitOptionalTags=false]\n *   Omit optional opening and closing tags (default: `false`).\n *\n *   For example, in `<ol><li>one</li><li>two</li></ol>`, both `</li>` closing\n *   tags can be omitted.\n *   The first because it’s followed by another `li`, the last because it’s\n *   followed by nothing.\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [preferUnquoted=false]\n *   Leave attributes unquoted if that results in less bytes (default: `false`).\n *\n *   Not used in the SVG space.\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes (default: `false`).\n * @property {Quote | null | undefined} [quote='\"']\n *   Preferred quote to use (default: `'\"'`).\n * @property {Space | null | undefined} [space='html']\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it (default: `'html'`).\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use [`xast`][xast] if you need to support SVG as XML.\n * @property {boolean | null | undefined} [tightAttributes=false]\n *   Join attributes together, without whitespace, if possible: get\n *   `class=\"a b\"title=\"c d\"` instead of `class=\"a b\" title=\"c d\"` to save\n *   bytes (default: `false`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightCommaSeparatedLists=false]\n *   Join known comma-separated attribute values with just a comma (`,`),\n *   instead of padding them on the right as well (`,␠`, where `␠` represents a\n *   space) (default: `false`).\n * @property {boolean | null | undefined} [tightDoctype=false]\n *   Drop unneeded spaces in doctypes: `<!doctypehtml>` instead of\n *   `<!doctype html>` to save bytes (default: `false`).\n *\n *   > 👉 **Note**: intentionally creates parse errors in markup (how parse\n *   > errors are handled is well defined, so this works but isn’t pretty).\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />` (default: `false`).\n *\n *   > 👉 **Note**: only used if `closeSelfClosing: true` or\n *   > `closeEmptyElements: true`.\n * @property {boolean | null | undefined} [upperDoctype=false]\n *   Use a `<!DOCTYPE…` instead of `<!doctype…` (default: `false`).\n *\n *   Useless except for XHTML.\n * @property {ReadonlyArray<string> | null | undefined} [voids]\n *   Tag names of elements to serialize without closing tag (default: `html-void-elements`).\n *\n *   Not used in the SVG space.\n *\n *   > 👉 **Note**: It’s highly unlikely that you want to pass this, because\n *   > hast is not for XML, and HTML will not add more void elements.\n *\n * @typedef {'\"' | \"'\"} Quote\n *   HTML quotes for attribute values.\n *\n * @typedef {Omit<Required<{[key in keyof Options]: Exclude<Options[key], null | undefined>}>, 'space' | 'quote'>} Settings\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Parents | undefined) => string} all\n *   Serialize the children of a parent node.\n * @property {Quote} alternative\n *   Alternative quote.\n * @property {(node: Nodes, index: number | undefined, parent: Parents | undefined) => string} one\n *   Serialize one node.\n * @property {Quote} quote\n *   Preferred quote.\n * @property {Schema} schema\n *   Current schema.\n * @property {Settings} settings\n *   User configuration.\n */\n\nimport {htmlVoidElements} from 'html-void-elements'\nimport {html, svg} from 'property-information'\nimport {handle} from './handle/index.js'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/** @type {CharacterReferences} */\nconst emptyCharacterReferences = {}\n\n/** @type {Array<never>} */\nconst emptyChildren = []\n\n/**\n * Serialize hast as HTML.\n *\n * @param {Array<RootContent> | Nodes} tree\n *   Tree to serialize.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized HTML.\n */\nexport function toHtml(tree, options) {\n  const options_ = options || emptyOptions\n  const quote = options_.quote || '\"'\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error('Invalid quote `' + quote + '`, expected `\\'` or `\"`')\n  }\n\n  /** @type {State} */\n  const state = {\n    one,\n    all,\n    settings: {\n      omitOptionalTags: options_.omitOptionalTags || false,\n      allowParseErrors: options_.allowParseErrors || false,\n      allowDangerousCharacters: options_.allowDangerousCharacters || false,\n      quoteSmart: options_.quoteSmart || false,\n      preferUnquoted: options_.preferUnquoted || false,\n      tightAttributes: options_.tightAttributes || false,\n      upperDoctype: options_.upperDoctype || false,\n      tightDoctype: options_.tightDoctype || false,\n      bogusComments: options_.bogusComments || false,\n      tightCommaSeparatedLists: options_.tightCommaSeparatedLists || false,\n      tightSelfClosing: options_.tightSelfClosing || false,\n      collapseEmptyAttributes: options_.collapseEmptyAttributes || false,\n      allowDangerousHtml: options_.allowDangerousHtml || false,\n      voids: options_.voids || htmlVoidElements,\n      characterReferences:\n        options_.characterReferences || emptyCharacterReferences,\n      closeSelfClosing: options_.closeSelfClosing || false,\n      closeEmptyElements: options_.closeEmptyElements || false\n    },\n    schema: options_.space === 'svg' ? svg : html,\n    quote,\n    alternative\n  }\n\n  return state.one(\n    Array.isArray(tree) ? {type: 'root', children: tree} : tree,\n    undefined,\n    undefined\n  )\n}\n\n/**\n * Serialize a node.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   Node to handle.\n * @param {number | undefined} index\n *   Index of `node` in `parent.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node, index, parent) {\n  return handle(node, index, parent, this)\n}\n\n/**\n * Serialize all children of `parent`.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parents | undefined} parent\n *   Parent whose children to serialize.\n * @returns {string}\n */\nexport function all(parent) {\n  /** @type {Array<string>} */\n  const results = []\n  const children = (parent && parent.children) || emptyChildren\n  let index = -1\n\n  while (++index < children.length) {\n    results[index] = this.one(children[index], index, parent)\n  }\n\n  return results.join('')\n}\n","class ShikiError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'ShikiError';\n    }\n}\n\nfunction getHeapMax() {\n    return 2147483648;\n}\nfunction _emscripten_get_now() {\n    return typeof performance !== 'undefined' ? performance.now() : Date.now();\n}\nconst alignUp = (x, multiple) => x + ((multiple - (x % multiple)) % multiple);\nasync function main(init) {\n    let wasmMemory;\n    let buffer;\n    const binding = {};\n    function updateGlobalBufferAndViews(buf) {\n        buffer = buf;\n        binding.HEAPU8 = new Uint8Array(buf);\n        binding.HEAPU32 = new Uint32Array(buf);\n    }\n    function _emscripten_memcpy_big(dest, src, num) {\n        binding.HEAPU8.copyWithin(dest, src, src + num);\n    }\n    function emscripten_realloc_buffer(size) {\n        try {\n            wasmMemory.grow((size - buffer.byteLength + 65535) >>> 16);\n            updateGlobalBufferAndViews(wasmMemory.buffer);\n            return 1;\n        }\n        catch { }\n    }\n    function _emscripten_resize_heap(requestedSize) {\n        const oldSize = binding.HEAPU8.length;\n        requestedSize = requestedSize >>> 0;\n        const maxHeapSize = getHeapMax();\n        if (requestedSize > maxHeapSize)\n            return false;\n        for (let cutDown = 1; cutDown <= 4; cutDown *= 2) {\n            let overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n            const newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n            const replacement = emscripten_realloc_buffer(newSize);\n            if (replacement)\n                return true;\n        }\n        return false;\n    }\n    const UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead = 1024) {\n        const endIdx = idx + maxBytesToRead;\n        let endPtr = idx;\n        while (heapOrArray[endPtr] && !(endPtr >= endIdx))\n            ++endPtr;\n        if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n            return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n        }\n        let str = '';\n        while (idx < endPtr) {\n            let u0 = heapOrArray[idx++];\n            if (!(u0 & 128)) {\n                str += String.fromCharCode(u0);\n                continue;\n            }\n            const u1 = heapOrArray[idx++] & 63;\n            if ((u0 & 224) === 192) {\n                str += String.fromCharCode(((u0 & 31) << 6) | u1);\n                continue;\n            }\n            const u2 = heapOrArray[idx++] & 63;\n            if ((u0 & 240) === 224) {\n                u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n            }\n            else {\n                u0 = ((u0 & 7) << 18)\n                    | (u1 << 12)\n                    | (u2 << 6)\n                    | (heapOrArray[idx++] & 63);\n            }\n            if (u0 < 65536) {\n                str += String.fromCharCode(u0);\n            }\n            else {\n                const ch = u0 - 65536;\n                str += String.fromCharCode(55296 | (ch >> 10), 56320 | (ch & 1023));\n            }\n        }\n        return str;\n    }\n    function UTF8ToString(ptr, maxBytesToRead) {\n        return ptr ? UTF8ArrayToString(binding.HEAPU8, ptr, maxBytesToRead) : '';\n    }\n    const asmLibraryArg = {\n        emscripten_get_now: _emscripten_get_now,\n        emscripten_memcpy_big: _emscripten_memcpy_big,\n        emscripten_resize_heap: _emscripten_resize_heap,\n        fd_write: () => 0,\n    };\n    async function createWasm() {\n        const info = {\n            env: asmLibraryArg,\n            wasi_snapshot_preview1: asmLibraryArg,\n        };\n        const exports = await init(info);\n        wasmMemory = exports.memory;\n        updateGlobalBufferAndViews(wasmMemory.buffer);\n        Object.assign(binding, exports);\n        binding.UTF8ToString = UTF8ToString;\n    }\n    await createWasm();\n    return binding;\n}\n\n/* ---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *-------------------------------------------------------- */\nlet onigBinding = null;\n// let defaultDebugCall = false\nfunction throwLastOnigError(onigBinding) {\n    throw new ShikiError(onigBinding.UTF8ToString(onigBinding.getLastOnigError()));\n}\nclass UtfString {\n    static _utf8ByteLength(str) {\n        let result = 0;\n        for (let i = 0, len = str.length; i < len; i++) {\n            const charCode = str.charCodeAt(i);\n            let codepoint = charCode;\n            let wasSurrogatePair = false;\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n                // Hit a high surrogate, try to look for a matching low surrogate\n                if (i + 1 < len) {\n                    const nextCharCode = str.charCodeAt(i + 1);\n                    if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n                        // Found the matching low surrogate\n                        codepoint = (((charCode - 0xD800) << 10) + 0x10000) | (nextCharCode - 0xDC00);\n                        wasSurrogatePair = true;\n                    }\n                }\n            }\n            if (codepoint <= 0x7F)\n                result += 1;\n            else if (codepoint <= 0x7FF)\n                result += 2;\n            else if (codepoint <= 0xFFFF)\n                result += 3;\n            else\n                result += 4;\n            if (wasSurrogatePair)\n                i++;\n        }\n        return result;\n    }\n    utf16Length;\n    utf8Length;\n    utf16Value;\n    utf8Value;\n    utf16OffsetToUtf8;\n    utf8OffsetToUtf16;\n    constructor(str) {\n        const utf16Length = str.length;\n        const utf8Length = UtfString._utf8ByteLength(str);\n        const computeIndicesMapping = (utf8Length !== utf16Length);\n        const utf16OffsetToUtf8 = computeIndicesMapping ? new Uint32Array(utf16Length + 1) : null;\n        if (computeIndicesMapping)\n            utf16OffsetToUtf8[utf16Length] = utf8Length;\n        const utf8OffsetToUtf16 = computeIndicesMapping ? new Uint32Array(utf8Length + 1) : null;\n        if (computeIndicesMapping)\n            utf8OffsetToUtf16[utf8Length] = utf16Length;\n        const utf8Value = new Uint8Array(utf8Length);\n        let i8 = 0;\n        for (let i16 = 0; i16 < utf16Length; i16++) {\n            const charCode = str.charCodeAt(i16);\n            let codePoint = charCode;\n            let wasSurrogatePair = false;\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n                // Hit a high surrogate, try to look for a matching low surrogate\n                if (i16 + 1 < utf16Length) {\n                    const nextCharCode = str.charCodeAt(i16 + 1);\n                    if (nextCharCode >= 0xDC00 && nextCharCode <= 0xDFFF) {\n                        // Found the matching low surrogate\n                        codePoint = (((charCode - 0xD800) << 10) + 0x10000) | (nextCharCode - 0xDC00);\n                        wasSurrogatePair = true;\n                    }\n                }\n            }\n            if (computeIndicesMapping) {\n                utf16OffsetToUtf8[i16] = i8;\n                if (wasSurrogatePair)\n                    utf16OffsetToUtf8[i16 + 1] = i8;\n                if (codePoint <= 0x7F) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                }\n                else if (codePoint <= 0x7FF) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                }\n                else if (codePoint <= 0xFFFF) {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                    utf8OffsetToUtf16[i8 + 2] = i16;\n                }\n                else {\n                    utf8OffsetToUtf16[i8 + 0] = i16;\n                    utf8OffsetToUtf16[i8 + 1] = i16;\n                    utf8OffsetToUtf16[i8 + 2] = i16;\n                    utf8OffsetToUtf16[i8 + 3] = i16;\n                }\n            }\n            if (codePoint <= 0x7F) {\n                utf8Value[i8++] = codePoint;\n            }\n            else if (codePoint <= 0x7FF) {\n                utf8Value[i8++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            else if (codePoint <= 0xFFFF) {\n                utf8Value[i8++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            else {\n                utf8Value[i8++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n                utf8Value[i8++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n            }\n            if (wasSurrogatePair)\n                i16++;\n        }\n        this.utf16Length = utf16Length;\n        this.utf8Length = utf8Length;\n        this.utf16Value = str;\n        this.utf8Value = utf8Value;\n        this.utf16OffsetToUtf8 = utf16OffsetToUtf8;\n        this.utf8OffsetToUtf16 = utf8OffsetToUtf16;\n    }\n    createString(onigBinding) {\n        const result = onigBinding.omalloc(this.utf8Length);\n        onigBinding.HEAPU8.set(this.utf8Value, result);\n        return result;\n    }\n}\nclass OnigString {\n    static LAST_ID = 0;\n    static _sharedPtr = 0; // a pointer to a string of 10000 bytes\n    static _sharedPtrInUse = false;\n    id = (++OnigString.LAST_ID);\n    _onigBinding;\n    content;\n    utf16Length;\n    utf8Length;\n    utf16OffsetToUtf8;\n    utf8OffsetToUtf16;\n    ptr;\n    constructor(str) {\n        if (!onigBinding)\n            throw new ShikiError('Must invoke loadWasm first.');\n        this._onigBinding = onigBinding;\n        this.content = str;\n        const utfString = new UtfString(str);\n        this.utf16Length = utfString.utf16Length;\n        this.utf8Length = utfString.utf8Length;\n        this.utf16OffsetToUtf8 = utfString.utf16OffsetToUtf8;\n        this.utf8OffsetToUtf16 = utfString.utf8OffsetToUtf16;\n        if (this.utf8Length < 10000 && !OnigString._sharedPtrInUse) {\n            if (!OnigString._sharedPtr)\n                OnigString._sharedPtr = onigBinding.omalloc(10000);\n            OnigString._sharedPtrInUse = true;\n            onigBinding.HEAPU8.set(utfString.utf8Value, OnigString._sharedPtr);\n            this.ptr = OnigString._sharedPtr;\n        }\n        else {\n            this.ptr = utfString.createString(onigBinding);\n        }\n    }\n    convertUtf8OffsetToUtf16(utf8Offset) {\n        if (this.utf8OffsetToUtf16) {\n            if (utf8Offset < 0)\n                return 0;\n            if (utf8Offset > this.utf8Length)\n                return this.utf16Length;\n            return this.utf8OffsetToUtf16[utf8Offset];\n        }\n        return utf8Offset;\n    }\n    convertUtf16OffsetToUtf8(utf16Offset) {\n        if (this.utf16OffsetToUtf8) {\n            if (utf16Offset < 0)\n                return 0;\n            if (utf16Offset > this.utf16Length)\n                return this.utf8Length;\n            return this.utf16OffsetToUtf8[utf16Offset];\n        }\n        return utf16Offset;\n    }\n    dispose() {\n        if (this.ptr === OnigString._sharedPtr)\n            OnigString._sharedPtrInUse = false;\n        else\n            this._onigBinding.ofree(this.ptr);\n    }\n}\nclass OnigScanner {\n    _onigBinding;\n    _ptr;\n    constructor(patterns) {\n        if (!onigBinding)\n            throw new ShikiError('Must invoke loadWasm first.');\n        const strPtrsArr = [];\n        const strLenArr = [];\n        for (let i = 0, len = patterns.length; i < len; i++) {\n            const utfString = new UtfString(patterns[i]);\n            strPtrsArr[i] = utfString.createString(onigBinding);\n            strLenArr[i] = utfString.utf8Length;\n        }\n        const strPtrsPtr = onigBinding.omalloc(4 * patterns.length);\n        onigBinding.HEAPU32.set(strPtrsArr, strPtrsPtr / 4);\n        const strLenPtr = onigBinding.omalloc(4 * patterns.length);\n        onigBinding.HEAPU32.set(strLenArr, strLenPtr / 4);\n        const scannerPtr = onigBinding.createOnigScanner(strPtrsPtr, strLenPtr, patterns.length);\n        for (let i = 0, len = patterns.length; i < len; i++)\n            onigBinding.ofree(strPtrsArr[i]);\n        onigBinding.ofree(strLenPtr);\n        onigBinding.ofree(strPtrsPtr);\n        if (scannerPtr === 0)\n            throwLastOnigError(onigBinding);\n        this._onigBinding = onigBinding;\n        this._ptr = scannerPtr;\n    }\n    dispose() {\n        this._onigBinding.freeOnigScanner(this._ptr);\n    }\n    findNextMatchSync(string, startPosition, arg) {\n        // let debugCall = defaultDebugCall\n        let options = 0 /* FindOption.None */;\n        if (typeof arg === 'number') {\n            // if (arg & FindOption.DebugCall)\n            //   debugCall = true\n            options = arg;\n        }\n        if (typeof string === 'string') {\n            string = new OnigString(string);\n            const result = this._findNextMatchSync(string, startPosition, false, options);\n            string.dispose();\n            return result;\n        }\n        return this._findNextMatchSync(string, startPosition, false, options);\n    }\n    _findNextMatchSync(string, startPosition, debugCall, options) {\n        const onigBinding = this._onigBinding;\n        // let resultPtr: Pointer\n        // if (debugCall)\n        //   resultPtr = onigBinding.findNextOnigScannerMatchDbg(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options)\n        // else\n        const resultPtr = onigBinding.findNextOnigScannerMatch(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\n        if (resultPtr === 0) {\n            // no match\n            return null;\n        }\n        const HEAPU32 = onigBinding.HEAPU32;\n        let offset = resultPtr / 4; // byte offset -> uint32 offset\n        const index = HEAPU32[offset++];\n        const count = HEAPU32[offset++];\n        const captureIndices = [];\n        for (let i = 0; i < count; i++) {\n            const beg = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n            const end = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\n            captureIndices[i] = {\n                start: beg,\n                end,\n                length: end - beg,\n            };\n        }\n        return {\n            index,\n            captureIndices,\n        };\n    }\n}\nfunction isInstantiatorOptionsObject(dataOrOptions) {\n    return (typeof dataOrOptions.instantiator === 'function');\n}\nfunction isInstantiatorModule(dataOrOptions) {\n    return (typeof dataOrOptions.default === 'function');\n}\nfunction isDataOptionsObject(dataOrOptions) {\n    return (typeof dataOrOptions.data !== 'undefined');\n}\nfunction isResponse(dataOrOptions) {\n    return (typeof Response !== 'undefined' && dataOrOptions instanceof Response);\n}\nfunction isArrayBuffer(data) {\n    return (typeof ArrayBuffer !== 'undefined' && (data instanceof ArrayBuffer || ArrayBuffer.isView(data)))\n        // eslint-disable-next-line node/prefer-global/buffer\n        || (typeof Buffer !== 'undefined' && Buffer.isBuffer?.(data))\n        || (typeof SharedArrayBuffer !== 'undefined' && data instanceof SharedArrayBuffer)\n        || (typeof Uint32Array !== 'undefined' && data instanceof Uint32Array);\n}\nlet initPromise;\nfunction loadWasm(options) {\n    if (initPromise)\n        return initPromise;\n    async function _load() {\n        onigBinding = await main(async (info) => {\n            let instance = options;\n            instance = await instance;\n            if (typeof instance === 'function')\n                instance = await instance(info);\n            if (typeof instance === 'function')\n                instance = await instance(info);\n            if (isInstantiatorOptionsObject(instance)) {\n                instance = await instance.instantiator(info);\n            }\n            else if (isInstantiatorModule(instance)) {\n                instance = await instance.default(info);\n            }\n            else {\n                if (isDataOptionsObject(instance))\n                    instance = instance.data;\n                if (isResponse(instance)) {\n                    if (typeof WebAssembly.instantiateStreaming === 'function')\n                        instance = await _makeResponseStreamingLoader(instance)(info);\n                    else\n                        instance = await _makeResponseNonStreamingLoader(instance)(info);\n                }\n                else if (isArrayBuffer(instance)) {\n                    instance = await _makeArrayBufferLoader(instance)(info);\n                }\n                // import(\"shiki/onig.wasm\") returns `{ default: WebAssembly.Module }` on cloudflare workers\n                // https://developers.cloudflare.com/workers/wrangler/bundling/\n                else if (instance instanceof WebAssembly.Module) {\n                    instance = await _makeArrayBufferLoader(instance)(info);\n                }\n                else if ('default' in instance && instance.default instanceof WebAssembly.Module) {\n                    instance = await _makeArrayBufferLoader(instance.default)(info);\n                }\n            }\n            if ('instance' in instance)\n                instance = instance.instance;\n            if ('exports' in instance)\n                instance = instance.exports;\n            return instance;\n        });\n    }\n    initPromise = _load();\n    return initPromise;\n}\nfunction _makeArrayBufferLoader(data) {\n    return importObject => WebAssembly.instantiate(data, importObject);\n}\nfunction _makeResponseStreamingLoader(data) {\n    return importObject => WebAssembly.instantiateStreaming(data, importObject);\n}\nfunction _makeResponseNonStreamingLoader(data) {\n    return async (importObject) => {\n        const arrayBuffer = await data.arrayBuffer();\n        return WebAssembly.instantiate(arrayBuffer, importObject);\n    };\n}\n// export function createOnigString(str: string) {\n//   return new OnigString(str)\n// }\n// export function createOnigScanner(patterns: string[]) {\n//   return new OnigScanner(patterns)\n// }\n// export function setDefaultDebugCall(_defaultDebugCall: boolean): void {\n//   defaultDebugCall = _defaultDebugCall\n// }\n\nasync function createWasmOnigEngine(options) {\n    if (options)\n        await loadWasm(options);\n    return {\n        createScanner(patterns) {\n            return new OnigScanner(patterns);\n        },\n        createString(s) {\n            return new OnigString(s);\n        },\n    };\n}\n\nexport { createWasmOnigEngine, loadWasm };\n","import { ShikiError as ShikiError$1 } from '@shikijs/types';\nexport * from '@shikijs/types';\nimport { FontStyle, INITIAL, EncodedTokenMetadata, Registry as Registry$1, Theme } from '@shikijs/vscode-textmate';\nexport { FontStyle, EncodedTokenMetadata as StackElementMetadata } from '@shikijs/vscode-textmate';\nimport { toHtml } from 'hast-util-to-html';\nexport { toHtml as hastToHtml } from 'hast-util-to-html';\nimport { createWasmOnigEngine } from '@shikijs/engine-oniguruma';\nexport { createWasmOnigEngine, loadWasm } from '@shikijs/engine-oniguruma';\nexport { createJavaScriptRegexEngine, defaultJavaScriptRegexConstructor } from '@shikijs/engine-javascript';\n\nlet _defaultWasmLoader;\nfunction setDefaultWasmLoader(_loader) {\n  _defaultWasmLoader = _loader;\n}\nfunction getDefaultWasmLoader() {\n  return _defaultWasmLoader;\n}\n\nfunction toArray(x) {\n  return Array.isArray(x) ? x : [x];\n}\nfunction splitLines(code, preserveEnding = false) {\n  const parts = code.split(/(\\r?\\n)/g);\n  let index = 0;\n  const lines = [];\n  for (let i = 0; i < parts.length; i += 2) {\n    const line = preserveEnding ? parts[i] + (parts[i + 1] || \"\") : parts[i];\n    lines.push([line, index]);\n    index += parts[i].length;\n    index += parts[i + 1]?.length || 0;\n  }\n  return lines;\n}\nfunction isPlainLang(lang) {\n  return !lang || [\"plaintext\", \"txt\", \"text\", \"plain\"].includes(lang);\n}\nfunction isSpecialLang(lang) {\n  return lang === \"ansi\" || isPlainLang(lang);\n}\nfunction isNoneTheme(theme) {\n  return theme === \"none\";\n}\nfunction isSpecialTheme(theme) {\n  return isNoneTheme(theme);\n}\nfunction addClassToHast(node, className) {\n  var _a;\n  if (!className)\n    return node;\n  node.properties || (node.properties = {});\n  (_a = node.properties).class || (_a.class = []);\n  if (typeof node.properties.class === \"string\")\n    node.properties.class = node.properties.class.split(/\\s+/g);\n  if (!Array.isArray(node.properties.class))\n    node.properties.class = [];\n  const targets = Array.isArray(className) ? className : className.split(/\\s+/g);\n  for (const c of targets) {\n    if (c && !node.properties.class.includes(c))\n      node.properties.class.push(c);\n  }\n  return node;\n}\nfunction splitToken(token, offsets) {\n  let lastOffset = 0;\n  const tokens = [];\n  for (const offset of offsets) {\n    if (offset > lastOffset) {\n      tokens.push({\n        ...token,\n        content: token.content.slice(lastOffset, offset),\n        offset: token.offset + lastOffset\n      });\n    }\n    lastOffset = offset;\n  }\n  if (lastOffset < token.content.length) {\n    tokens.push({\n      ...token,\n      content: token.content.slice(lastOffset),\n      offset: token.offset + lastOffset\n    });\n  }\n  return tokens;\n}\nfunction splitTokens(tokens, breakpoints) {\n  const sorted = Array.from(breakpoints instanceof Set ? breakpoints : new Set(breakpoints)).sort((a, b) => a - b);\n  if (!sorted.length)\n    return tokens;\n  return tokens.map((line) => {\n    return line.flatMap((token) => {\n      const breakpointsInToken = sorted.filter((i) => token.offset < i && i < token.offset + token.content.length).map((i) => i - token.offset).sort((a, b) => a - b);\n      if (!breakpointsInToken.length)\n        return token;\n      return splitToken(token, breakpointsInToken);\n    });\n  });\n}\nasync function normalizeGetter(p) {\n  return Promise.resolve(typeof p === \"function\" ? p() : p).then((r) => r.default || r);\n}\nfunction resolveColorReplacements(theme, options) {\n  const replacements = typeof theme === \"string\" ? {} : { ...theme.colorReplacements };\n  const themeName = typeof theme === \"string\" ? theme : theme.name;\n  for (const [key, value] of Object.entries(options?.colorReplacements || {})) {\n    if (typeof value === \"string\")\n      replacements[key] = value;\n    else if (key === themeName)\n      Object.assign(replacements, value);\n  }\n  return replacements;\n}\nfunction applyColorReplacements(color, replacements) {\n  if (!color)\n    return color;\n  return replacements?.[color?.toLowerCase()] || color;\n}\nfunction getTokenStyleObject(token) {\n  const styles = {};\n  if (token.color)\n    styles.color = token.color;\n  if (token.bgColor)\n    styles[\"background-color\"] = token.bgColor;\n  if (token.fontStyle) {\n    if (token.fontStyle & FontStyle.Italic)\n      styles[\"font-style\"] = \"italic\";\n    if (token.fontStyle & FontStyle.Bold)\n      styles[\"font-weight\"] = \"bold\";\n    if (token.fontStyle & FontStyle.Underline)\n      styles[\"text-decoration\"] = \"underline\";\n  }\n  return styles;\n}\nfunction stringifyTokenStyle(token) {\n  return Object.entries(token).map(([key, value]) => `${key}:${value}`).join(\";\");\n}\nfunction createPositionConverter(code) {\n  const lines = splitLines(code, true).map(([line]) => line);\n  function indexToPos(index) {\n    if (index === code.length) {\n      return {\n        line: lines.length - 1,\n        character: lines[lines.length - 1].length\n      };\n    }\n    let character = index;\n    let line = 0;\n    for (const lineText of lines) {\n      if (character < lineText.length)\n        break;\n      character -= lineText.length;\n      line++;\n    }\n    return { line, character };\n  }\n  function posToIndex(line, character) {\n    let index = 0;\n    for (let i = 0; i < line; i++)\n      index += lines[i].length;\n    index += character;\n    return index;\n  }\n  return {\n    lines,\n    indexToPos,\n    posToIndex\n  };\n}\n\nclass ShikiError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"ShikiError\";\n  }\n}\n\nfunction transformerDecorations() {\n  const map = /* @__PURE__ */ new WeakMap();\n  function getContext(shiki) {\n    if (!map.has(shiki.meta)) {\n      let normalizePosition = function(p) {\n        if (typeof p === \"number\") {\n          if (p < 0 || p > shiki.source.length)\n            throw new ShikiError(`Invalid decoration offset: ${p}. Code length: ${shiki.source.length}`);\n          return {\n            ...converter.indexToPos(p),\n            offset: p\n          };\n        } else {\n          const line = converter.lines[p.line];\n          if (line === void 0)\n            throw new ShikiError(`Invalid decoration position ${JSON.stringify(p)}. Lines length: ${converter.lines.length}`);\n          if (p.character < 0 || p.character > line.length)\n            throw new ShikiError(`Invalid decoration position ${JSON.stringify(p)}. Line ${p.line} length: ${line.length}`);\n          return {\n            ...p,\n            offset: converter.posToIndex(p.line, p.character)\n          };\n        }\n      };\n      const converter = createPositionConverter(shiki.source);\n      const decorations = (shiki.options.decorations || []).map((d) => ({\n        ...d,\n        start: normalizePosition(d.start),\n        end: normalizePosition(d.end)\n      }));\n      verifyIntersections(decorations);\n      map.set(shiki.meta, {\n        decorations,\n        converter,\n        source: shiki.source\n      });\n    }\n    return map.get(shiki.meta);\n  }\n  return {\n    name: \"shiki:decorations\",\n    tokens(tokens) {\n      if (!this.options.decorations?.length)\n        return;\n      const ctx = getContext(this);\n      const breakpoints = ctx.decorations.flatMap((d) => [d.start.offset, d.end.offset]);\n      const splitted = splitTokens(tokens, breakpoints);\n      return splitted;\n    },\n    code(codeEl) {\n      if (!this.options.decorations?.length)\n        return;\n      const ctx = getContext(this);\n      const lines = Array.from(codeEl.children).filter((i) => i.type === \"element\" && i.tagName === \"span\");\n      if (lines.length !== ctx.converter.lines.length)\n        throw new ShikiError(`Number of lines in code element (${lines.length}) does not match the number of lines in the source (${ctx.converter.lines.length}). Failed to apply decorations.`);\n      function applyLineSection(line, start, end, decoration) {\n        const lineEl = lines[line];\n        let text = \"\";\n        let startIndex = -1;\n        let endIndex = -1;\n        if (start === 0)\n          startIndex = 0;\n        if (end === 0)\n          endIndex = 0;\n        if (end === Number.POSITIVE_INFINITY)\n          endIndex = lineEl.children.length;\n        if (startIndex === -1 || endIndex === -1) {\n          for (let i = 0; i < lineEl.children.length; i++) {\n            text += stringify(lineEl.children[i]);\n            if (startIndex === -1 && text.length === start)\n              startIndex = i + 1;\n            if (endIndex === -1 && text.length === end)\n              endIndex = i + 1;\n          }\n        }\n        if (startIndex === -1)\n          throw new ShikiError(`Failed to find start index for decoration ${JSON.stringify(decoration.start)}`);\n        if (endIndex === -1)\n          throw new ShikiError(`Failed to find end index for decoration ${JSON.stringify(decoration.end)}`);\n        const children = lineEl.children.slice(startIndex, endIndex);\n        if (!decoration.alwaysWrap && children.length === lineEl.children.length) {\n          applyDecoration(lineEl, decoration, \"line\");\n        } else if (!decoration.alwaysWrap && children.length === 1 && children[0].type === \"element\") {\n          applyDecoration(children[0], decoration, \"token\");\n        } else {\n          const wrapper = {\n            type: \"element\",\n            tagName: \"span\",\n            properties: {},\n            children\n          };\n          applyDecoration(wrapper, decoration, \"wrapper\");\n          lineEl.children.splice(startIndex, children.length, wrapper);\n        }\n      }\n      function applyLine(line, decoration) {\n        lines[line] = applyDecoration(lines[line], decoration, \"line\");\n      }\n      function applyDecoration(el, decoration, type) {\n        const properties = decoration.properties || {};\n        const transform = decoration.transform || ((i) => i);\n        el.tagName = decoration.tagName || \"span\";\n        el.properties = {\n          ...el.properties,\n          ...properties,\n          class: el.properties.class\n        };\n        if (decoration.properties?.class)\n          addClassToHast(el, decoration.properties.class);\n        el = transform(el, type) || el;\n        return el;\n      }\n      const lineApplies = [];\n      const sorted = ctx.decorations.sort((a, b) => b.start.offset - a.start.offset);\n      for (const decoration of sorted) {\n        const { start, end } = decoration;\n        if (start.line === end.line) {\n          applyLineSection(start.line, start.character, end.character, decoration);\n        } else if (start.line < end.line) {\n          applyLineSection(start.line, start.character, Number.POSITIVE_INFINITY, decoration);\n          for (let i = start.line + 1; i < end.line; i++)\n            lineApplies.unshift(() => applyLine(i, decoration));\n          applyLineSection(end.line, 0, end.character, decoration);\n        }\n      }\n      lineApplies.forEach((i) => i());\n    }\n  };\n}\nfunction verifyIntersections(items) {\n  for (let i = 0; i < items.length; i++) {\n    const foo = items[i];\n    if (foo.start.offset > foo.end.offset)\n      throw new ShikiError(`Invalid decoration range: ${JSON.stringify(foo.start)} - ${JSON.stringify(foo.end)}`);\n    for (let j = i + 1; j < items.length; j++) {\n      const bar = items[j];\n      const isFooHasBarStart = foo.start.offset < bar.start.offset && bar.start.offset < foo.end.offset;\n      const isFooHasBarEnd = foo.start.offset < bar.end.offset && bar.end.offset < foo.end.offset;\n      const isBarHasFooStart = bar.start.offset < foo.start.offset && foo.start.offset < bar.end.offset;\n      const isBarHasFooEnd = bar.start.offset < foo.end.offset && foo.end.offset < bar.end.offset;\n      if (isFooHasBarStart || isFooHasBarEnd || isBarHasFooStart || isBarHasFooEnd) {\n        if (isFooHasBarEnd && isFooHasBarEnd)\n          continue;\n        if (isBarHasFooStart && isBarHasFooEnd)\n          continue;\n        throw new ShikiError(`Decorations ${JSON.stringify(foo.start)} and ${JSON.stringify(bar.start)} intersect.`);\n      }\n    }\n  }\n}\nfunction stringify(el) {\n  if (el.type === \"text\")\n    return el.value;\n  if (el.type === \"element\")\n    return el.children.map(stringify).join(\"\");\n  return \"\";\n}\n\nconst builtInTransformers = [\n  /* @__PURE__ */ transformerDecorations()\n];\nfunction getTransformers(options) {\n  return [\n    ...options.transformers || [],\n    ...builtInTransformers\n  ];\n}\n\nclass GrammarState {\n  constructor(_stack, lang, theme) {\n    this._stack = _stack;\n    this.lang = lang;\n    this.theme = theme;\n  }\n  /**\n   * Static method to create a initial grammar state.\n   */\n  static initial(lang, theme) {\n    return new GrammarState(INITIAL, lang, theme);\n  }\n  get scopes() {\n    return getScopes(this._stack);\n  }\n  toJSON() {\n    return {\n      lang: this.lang,\n      theme: this.theme,\n      scopes: this.scopes\n    };\n  }\n}\nfunction getScopes(stack) {\n  const scopes = [];\n  const visited = /* @__PURE__ */ new Set();\n  function pushScope(stack2) {\n    if (visited.has(stack2))\n      return;\n    visited.add(stack2);\n    const name = stack2?.nameScopesList?.scopeName;\n    if (name)\n      scopes.push(name);\n    if (stack2.parent)\n      pushScope(stack2.parent);\n  }\n  pushScope(stack);\n  return scopes;\n}\nfunction getGrammarStack(state) {\n  if (!(state instanceof GrammarState))\n    throw new ShikiError(\"Invalid grammar state\");\n  return state._stack;\n}\n\n// src/colors.ts\nvar namedColors = [\n  \"black\",\n  \"red\",\n  \"green\",\n  \"yellow\",\n  \"blue\",\n  \"magenta\",\n  \"cyan\",\n  \"white\",\n  \"brightBlack\",\n  \"brightRed\",\n  \"brightGreen\",\n  \"brightYellow\",\n  \"brightBlue\",\n  \"brightMagenta\",\n  \"brightCyan\",\n  \"brightWhite\"\n];\n\n// src/decorations.ts\nvar decorations = {\n  1: \"bold\",\n  2: \"dim\",\n  3: \"italic\",\n  4: \"underline\",\n  7: \"reverse\",\n  9: \"strikethrough\"\n};\n\n// src/parser.ts\nfunction findSequence(value, position) {\n  const nextEscape = value.indexOf(\"\\x1B[\", position);\n  if (nextEscape !== -1) {\n    const nextClose = value.indexOf(\"m\", nextEscape);\n    return {\n      sequence: value.substring(nextEscape + 2, nextClose).split(\";\"),\n      startPosition: nextEscape,\n      position: nextClose + 1\n    };\n  }\n  return {\n    position: value.length\n  };\n}\nfunction parseColor(sequence, index) {\n  let offset = 1;\n  const colorMode = sequence[index + offset++];\n  let color;\n  if (colorMode === \"2\") {\n    const rgb = [\n      sequence[index + offset++],\n      sequence[index + offset++],\n      sequence[index + offset]\n    ].map((x) => Number.parseInt(x));\n    if (rgb.length === 3 && !rgb.some((x) => Number.isNaN(x))) {\n      color = {\n        type: \"rgb\",\n        rgb\n      };\n    }\n  } else if (colorMode === \"5\") {\n    const colorIndex = Number.parseInt(sequence[index + offset]);\n    if (!Number.isNaN(colorIndex)) {\n      color = { type: \"table\", index: Number(colorIndex) };\n    }\n  }\n  return [offset, color];\n}\nfunction parseSequence(sequence) {\n  const commands = [];\n  for (let i = 0; i < sequence.length; i++) {\n    const code = sequence[i];\n    const codeInt = Number.parseInt(code);\n    if (Number.isNaN(codeInt))\n      continue;\n    if (codeInt === 0) {\n      commands.push({ type: \"resetAll\" });\n    } else if (codeInt <= 9) {\n      const decoration = decorations[codeInt];\n      if (decoration) {\n        commands.push({\n          type: \"setDecoration\",\n          value: decorations[codeInt]\n        });\n      }\n    } else if (codeInt <= 29) {\n      const decoration = decorations[codeInt - 20];\n      if (decoration) {\n        commands.push({\n          type: \"resetDecoration\",\n          value: decoration\n        });\n      }\n    } else if (codeInt <= 37) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 30] }\n      });\n    } else if (codeInt === 38) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setForegroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 39) {\n      commands.push({\n        type: \"resetForegroundColor\"\n      });\n    } else if (codeInt <= 47) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 40] }\n      });\n    } else if (codeInt === 48) {\n      const [offset, color] = parseColor(sequence, i);\n      if (color) {\n        commands.push({\n          type: \"setBackgroundColor\",\n          value: color\n        });\n      }\n      i += offset;\n    } else if (codeInt === 49) {\n      commands.push({\n        type: \"resetBackgroundColor\"\n      });\n    } else if (codeInt >= 90 && codeInt <= 97) {\n      commands.push({\n        type: \"setForegroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 90 + 8] }\n      });\n    } else if (codeInt >= 100 && codeInt <= 107) {\n      commands.push({\n        type: \"setBackgroundColor\",\n        value: { type: \"named\", name: namedColors[codeInt - 100 + 8] }\n      });\n    }\n  }\n  return commands;\n}\nfunction createAnsiSequenceParser() {\n  let foreground = null;\n  let background = null;\n  let decorations2 = /* @__PURE__ */ new Set();\n  return {\n    parse(value) {\n      const tokens = [];\n      let position = 0;\n      do {\n        const findResult = findSequence(value, position);\n        const text = findResult.sequence ? value.substring(position, findResult.startPosition) : value.substring(position);\n        if (text.length > 0) {\n          tokens.push({\n            value: text,\n            foreground,\n            background,\n            decorations: new Set(decorations2)\n          });\n        }\n        if (findResult.sequence) {\n          const commands = parseSequence(findResult.sequence);\n          for (const styleToken of commands) {\n            if (styleToken.type === \"resetAll\") {\n              foreground = null;\n              background = null;\n              decorations2.clear();\n            } else if (styleToken.type === \"resetForegroundColor\") {\n              foreground = null;\n            } else if (styleToken.type === \"resetBackgroundColor\") {\n              background = null;\n            } else if (styleToken.type === \"resetDecoration\") {\n              decorations2.delete(styleToken.value);\n            }\n          }\n          for (const styleToken of commands) {\n            if (styleToken.type === \"setForegroundColor\") {\n              foreground = styleToken.value;\n            } else if (styleToken.type === \"setBackgroundColor\") {\n              background = styleToken.value;\n            } else if (styleToken.type === \"setDecoration\") {\n              decorations2.add(styleToken.value);\n            }\n          }\n        }\n        position = findResult.position;\n      } while (position < value.length);\n      return tokens;\n    }\n  };\n}\n\n// src/palette.ts\nvar defaultNamedColorsMap = {\n  black: \"#000000\",\n  red: \"#bb0000\",\n  green: \"#00bb00\",\n  yellow: \"#bbbb00\",\n  blue: \"#0000bb\",\n  magenta: \"#ff00ff\",\n  cyan: \"#00bbbb\",\n  white: \"#eeeeee\",\n  brightBlack: \"#555555\",\n  brightRed: \"#ff5555\",\n  brightGreen: \"#00ff00\",\n  brightYellow: \"#ffff55\",\n  brightBlue: \"#5555ff\",\n  brightMagenta: \"#ff55ff\",\n  brightCyan: \"#55ffff\",\n  brightWhite: \"#ffffff\"\n};\nfunction createColorPalette(namedColorsMap = defaultNamedColorsMap) {\n  function namedColor(name) {\n    return namedColorsMap[name];\n  }\n  function rgbColor(rgb) {\n    return `#${rgb.map((x) => Math.max(0, Math.min(x, 255)).toString(16).padStart(2, \"0\")).join(\"\")}`;\n  }\n  let colorTable;\n  function getColorTable() {\n    if (colorTable) {\n      return colorTable;\n    }\n    colorTable = [];\n    for (let i = 0; i < namedColors.length; i++) {\n      colorTable.push(namedColor(namedColors[i]));\n    }\n    let levels = [0, 95, 135, 175, 215, 255];\n    for (let r = 0; r < 6; r++) {\n      for (let g = 0; g < 6; g++) {\n        for (let b = 0; b < 6; b++) {\n          colorTable.push(rgbColor([levels[r], levels[g], levels[b]]));\n        }\n      }\n    }\n    let level = 8;\n    for (let i = 0; i < 24; i++, level += 10) {\n      colorTable.push(rgbColor([level, level, level]));\n    }\n    return colorTable;\n  }\n  function tableColor(index) {\n    return getColorTable()[index];\n  }\n  function value(color) {\n    switch (color.type) {\n      case \"named\":\n        return namedColor(color.name);\n      case \"rgb\":\n        return rgbColor(color.rgb);\n      case \"table\":\n        return tableColor(color.index);\n    }\n  }\n  return {\n    value\n  };\n}\n\nfunction tokenizeAnsiWithTheme(theme, fileContents, options) {\n  const colorReplacements = resolveColorReplacements(theme, options);\n  const lines = splitLines(fileContents);\n  const colorPalette = createColorPalette(\n    Object.fromEntries(\n      namedColors.map((name) => [\n        name,\n        theme.colors?.[`terminal.ansi${name[0].toUpperCase()}${name.substring(1)}`]\n      ])\n    )\n  );\n  const parser = createAnsiSequenceParser();\n  return lines.map(\n    (line) => parser.parse(line[0]).map((token) => {\n      let color;\n      let bgColor;\n      if (token.decorations.has(\"reverse\")) {\n        color = token.background ? colorPalette.value(token.background) : theme.bg;\n        bgColor = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n      } else {\n        color = token.foreground ? colorPalette.value(token.foreground) : theme.fg;\n        bgColor = token.background ? colorPalette.value(token.background) : void 0;\n      }\n      color = applyColorReplacements(color, colorReplacements);\n      bgColor = applyColorReplacements(bgColor, colorReplacements);\n      if (token.decorations.has(\"dim\"))\n        color = dimColor(color);\n      let fontStyle = FontStyle.None;\n      if (token.decorations.has(\"bold\"))\n        fontStyle |= FontStyle.Bold;\n      if (token.decorations.has(\"italic\"))\n        fontStyle |= FontStyle.Italic;\n      if (token.decorations.has(\"underline\"))\n        fontStyle |= FontStyle.Underline;\n      return {\n        content: token.value,\n        offset: line[1],\n        // TODO: more accurate offset? might need to fork ansi-sequence-parser\n        color,\n        bgColor,\n        fontStyle\n      };\n    })\n  );\n}\nfunction dimColor(color) {\n  const hexMatch = color.match(/#([0-9a-f]{3})([0-9a-f]{3})?([0-9a-f]{2})?/);\n  if (hexMatch) {\n    if (hexMatch[3]) {\n      const alpha = Math.round(Number.parseInt(hexMatch[3], 16) / 2).toString(16).padStart(2, \"0\");\n      return `#${hexMatch[1]}${hexMatch[2]}${alpha}`;\n    } else if (hexMatch[2]) {\n      return `#${hexMatch[1]}${hexMatch[2]}80`;\n    } else {\n      return `#${Array.from(hexMatch[1]).map((x) => `${x}${x}`).join(\"\")}80`;\n    }\n  }\n  const cssVarMatch = color.match(/var\\((--[\\w-]+-ansi-[\\w-]+)\\)/);\n  if (cssVarMatch)\n    return `var(${cssVarMatch[1]}-dim)`;\n  return color;\n}\n\nfunction codeToTokensBase(internal, code, options = {}) {\n  const {\n    lang = \"text\",\n    theme: themeName = internal.getLoadedThemes()[0]\n  } = options;\n  if (isPlainLang(lang) || isNoneTheme(themeName))\n    return splitLines(code).map((line) => [{ content: line[0], offset: line[1] }]);\n  const { theme, colorMap } = internal.setTheme(themeName);\n  if (lang === \"ansi\")\n    return tokenizeAnsiWithTheme(theme, code, options);\n  const _grammar = internal.getLanguage(lang);\n  if (options.grammarState) {\n    if (options.grammarState.lang !== _grammar.name) {\n      throw new ShikiError$1(`Grammar state language \"${options.grammarState.lang}\" does not match highlight language \"${_grammar.name}\"`);\n    }\n    if (options.grammarState.theme !== themeName) {\n      throw new ShikiError$1(`Grammar state theme \"${options.grammarState.theme}\" does not match highlight theme \"${themeName}\"`);\n    }\n  }\n  return tokenizeWithTheme(code, _grammar, theme, colorMap, options);\n}\nfunction getLastGrammarState(internal, code, options = {}) {\n  const {\n    lang = \"text\",\n    theme: themeName = internal.getLoadedThemes()[0]\n  } = options;\n  if (isPlainLang(lang) || isNoneTheme(themeName))\n    throw new ShikiError$1(\"Plain language does not have grammar state\");\n  if (lang === \"ansi\")\n    throw new ShikiError$1(\"ANSI language does not have grammar state\");\n  const { theme, colorMap } = internal.setTheme(themeName);\n  const _grammar = internal.getLanguage(lang);\n  return new GrammarState(\n    _tokenizeWithTheme(code, _grammar, theme, colorMap, options).stateStack,\n    _grammar.name,\n    theme.name\n  );\n}\nfunction tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n  return _tokenizeWithTheme(code, grammar, theme, colorMap, options).tokens;\n}\nfunction _tokenizeWithTheme(code, grammar, theme, colorMap, options) {\n  const colorReplacements = resolveColorReplacements(theme, options);\n  const {\n    tokenizeMaxLineLength = 0,\n    tokenizeTimeLimit = 500\n  } = options;\n  const lines = splitLines(code);\n  let stateStack = options.grammarState ? getGrammarStack(options.grammarState) : options.grammarContextCode != null ? _tokenizeWithTheme(\n    options.grammarContextCode,\n    grammar,\n    theme,\n    colorMap,\n    {\n      ...options,\n      grammarState: void 0,\n      grammarContextCode: void 0\n    }\n  ).stateStack : INITIAL;\n  let actual = [];\n  const final = [];\n  for (let i = 0, len = lines.length; i < len; i++) {\n    const [line, lineOffset] = lines[i];\n    if (line === \"\") {\n      actual = [];\n      final.push([]);\n      continue;\n    }\n    if (tokenizeMaxLineLength > 0 && line.length >= tokenizeMaxLineLength) {\n      actual = [];\n      final.push([{\n        content: line,\n        offset: lineOffset,\n        color: \"\",\n        fontStyle: 0\n      }]);\n      continue;\n    }\n    let resultWithScopes;\n    let tokensWithScopes;\n    let tokensWithScopesIndex;\n    if (options.includeExplanation) {\n      resultWithScopes = grammar.tokenizeLine(line, stateStack);\n      tokensWithScopes = resultWithScopes.tokens;\n      tokensWithScopesIndex = 0;\n    }\n    const result = grammar.tokenizeLine2(line, stateStack, tokenizeTimeLimit);\n    const tokensLength = result.tokens.length / 2;\n    for (let j = 0; j < tokensLength; j++) {\n      const startIndex = result.tokens[2 * j];\n      const nextStartIndex = j + 1 < tokensLength ? result.tokens[2 * j + 2] : line.length;\n      if (startIndex === nextStartIndex)\n        continue;\n      const metadata = result.tokens[2 * j + 1];\n      const color = applyColorReplacements(\n        colorMap[EncodedTokenMetadata.getForeground(metadata)],\n        colorReplacements\n      );\n      const fontStyle = EncodedTokenMetadata.getFontStyle(metadata);\n      const token = {\n        content: line.substring(startIndex, nextStartIndex),\n        offset: lineOffset + startIndex,\n        color,\n        fontStyle\n      };\n      if (options.includeExplanation) {\n        const themeSettingsSelectors = [];\n        if (options.includeExplanation !== \"scopeName\") {\n          for (const setting of theme.settings) {\n            let selectors;\n            switch (typeof setting.scope) {\n              case \"string\":\n                selectors = setting.scope.split(/,/).map((scope) => scope.trim());\n                break;\n              case \"object\":\n                selectors = setting.scope;\n                break;\n              default:\n                continue;\n            }\n            themeSettingsSelectors.push({\n              settings: setting,\n              selectors: selectors.map((selector) => selector.split(/ /))\n            });\n          }\n        }\n        token.explanation = [];\n        let offset = 0;\n        while (startIndex + offset < nextStartIndex) {\n          const tokenWithScopes = tokensWithScopes[tokensWithScopesIndex];\n          const tokenWithScopesText = line.substring(\n            tokenWithScopes.startIndex,\n            tokenWithScopes.endIndex\n          );\n          offset += tokenWithScopesText.length;\n          token.explanation.push({\n            content: tokenWithScopesText,\n            scopes: options.includeExplanation === \"scopeName\" ? explainThemeScopesNameOnly(\n              tokenWithScopes.scopes\n            ) : explainThemeScopesFull(\n              themeSettingsSelectors,\n              tokenWithScopes.scopes\n            )\n          });\n          tokensWithScopesIndex += 1;\n        }\n      }\n      actual.push(token);\n    }\n    final.push(actual);\n    actual = [];\n    stateStack = result.ruleStack;\n  }\n  return {\n    tokens: final,\n    stateStack\n  };\n}\nfunction explainThemeScopesNameOnly(scopes) {\n  return scopes.map((scope) => ({ scopeName: scope }));\n}\nfunction explainThemeScopesFull(themeSelectors, scopes) {\n  const result = [];\n  for (let i = 0, len = scopes.length; i < len; i++) {\n    const scope = scopes[i];\n    result[i] = {\n      scopeName: scope,\n      themeMatches: explainThemeScope(themeSelectors, scope, scopes.slice(0, i))\n    };\n  }\n  return result;\n}\nfunction matchesOne(selector, scope) {\n  return selector === scope || scope.substring(0, selector.length) === selector && scope[selector.length] === \".\";\n}\nfunction matches(selectors, scope, parentScopes) {\n  if (!matchesOne(selectors[selectors.length - 1], scope))\n    return false;\n  let selectorParentIndex = selectors.length - 2;\n  let parentIndex = parentScopes.length - 1;\n  while (selectorParentIndex >= 0 && parentIndex >= 0) {\n    if (matchesOne(selectors[selectorParentIndex], parentScopes[parentIndex]))\n      selectorParentIndex -= 1;\n    parentIndex -= 1;\n  }\n  if (selectorParentIndex === -1)\n    return true;\n  return false;\n}\nfunction explainThemeScope(themeSettingsSelectors, scope, parentScopes) {\n  const result = [];\n  for (const { selectors, settings } of themeSettingsSelectors) {\n    for (const selectorPieces of selectors) {\n      if (matches(selectorPieces, scope, parentScopes)) {\n        result.push(settings);\n        break;\n      }\n    }\n  }\n  return result;\n}\n\nfunction codeToTokensWithThemes(internal, code, options) {\n  const themes = Object.entries(options.themes).filter((i) => i[1]).map((i) => ({ color: i[0], theme: i[1] }));\n  const tokens = syncThemesTokenization(\n    ...themes.map((t) => codeToTokensBase(internal, code, {\n      ...options,\n      theme: t.theme\n    }))\n  );\n  const mergedTokens = tokens[0].map(\n    (line, lineIdx) => line.map((_token, tokenIdx) => {\n      const mergedToken = {\n        content: _token.content,\n        variants: {},\n        offset: _token.offset\n      };\n      if (\"includeExplanation\" in options && options.includeExplanation) {\n        mergedToken.explanation = _token.explanation;\n      }\n      tokens.forEach((t, themeIdx) => {\n        const {\n          content: _,\n          explanation: __,\n          offset: ___,\n          ...styles\n        } = t[lineIdx][tokenIdx];\n        mergedToken.variants[themes[themeIdx].color] = styles;\n      });\n      return mergedToken;\n    })\n  );\n  return mergedTokens;\n}\nfunction syncThemesTokenization(...themes) {\n  const outThemes = themes.map(() => []);\n  const count = themes.length;\n  for (let i = 0; i < themes[0].length; i++) {\n    const lines = themes.map((t) => t[i]);\n    const outLines = outThemes.map(() => []);\n    outThemes.forEach((t, i2) => t.push(outLines[i2]));\n    const indexes = lines.map(() => 0);\n    const current = lines.map((l) => l[0]);\n    while (current.every((t) => t)) {\n      const minLength = Math.min(...current.map((t) => t.content.length));\n      for (let n = 0; n < count; n++) {\n        const token = current[n];\n        if (token.content.length === minLength) {\n          outLines[n].push(token);\n          indexes[n] += 1;\n          current[n] = lines[n][indexes[n]];\n        } else {\n          outLines[n].push({\n            ...token,\n            content: token.content.slice(0, minLength)\n          });\n          current[n] = {\n            ...token,\n            content: token.content.slice(minLength),\n            offset: token.offset + minLength\n          };\n        }\n      }\n    }\n  }\n  return outThemes;\n}\n\nfunction codeToTokens(internal, code, options) {\n  let bg;\n  let fg;\n  let tokens;\n  let themeName;\n  let rootStyle;\n  if (\"themes\" in options) {\n    const {\n      defaultColor = \"light\",\n      cssVariablePrefix = \"--shiki-\"\n    } = options;\n    const themes = Object.entries(options.themes).filter((i) => i[1]).map((i) => ({ color: i[0], theme: i[1] })).sort((a, b) => a.color === defaultColor ? -1 : b.color === defaultColor ? 1 : 0);\n    if (themes.length === 0)\n      throw new ShikiError(\"`themes` option must not be empty\");\n    const themeTokens = codeToTokensWithThemes(\n      internal,\n      code,\n      options\n    );\n    if (defaultColor && !themes.find((t) => t.color === defaultColor))\n      throw new ShikiError(`\\`themes\\` option must contain the defaultColor key \\`${defaultColor}\\``);\n    const themeRegs = themes.map((t) => internal.getTheme(t.theme));\n    const themesOrder = themes.map((t) => t.color);\n    tokens = themeTokens.map((line) => line.map((token) => mergeToken(token, themesOrder, cssVariablePrefix, defaultColor)));\n    const themeColorReplacements = themes.map((t) => resolveColorReplacements(t.theme, options));\n    fg = themes.map((t, idx) => (idx === 0 && defaultColor ? \"\" : `${cssVariablePrefix + t.color}:`) + (applyColorReplacements(themeRegs[idx].fg, themeColorReplacements[idx]) || \"inherit\")).join(\";\");\n    bg = themes.map((t, idx) => (idx === 0 && defaultColor ? \"\" : `${cssVariablePrefix + t.color}-bg:`) + (applyColorReplacements(themeRegs[idx].bg, themeColorReplacements[idx]) || \"inherit\")).join(\";\");\n    themeName = `shiki-themes ${themeRegs.map((t) => t.name).join(\" \")}`;\n    rootStyle = defaultColor ? void 0 : [fg, bg].join(\";\");\n  } else if (\"theme\" in options) {\n    const colorReplacements = resolveColorReplacements(options.theme, options);\n    tokens = codeToTokensBase(\n      internal,\n      code,\n      options\n    );\n    const _theme = internal.getTheme(options.theme);\n    bg = applyColorReplacements(_theme.bg, colorReplacements);\n    fg = applyColorReplacements(_theme.fg, colorReplacements);\n    themeName = _theme.name;\n  } else {\n    throw new ShikiError(\"Invalid options, either `theme` or `themes` must be provided\");\n  }\n  return {\n    tokens,\n    fg,\n    bg,\n    themeName,\n    rootStyle\n  };\n}\nfunction mergeToken(merged, variantsOrder, cssVariablePrefix, defaultColor) {\n  const token = {\n    content: merged.content,\n    explanation: merged.explanation,\n    offset: merged.offset\n  };\n  const styles = variantsOrder.map((t) => getTokenStyleObject(merged.variants[t]));\n  const styleKeys = new Set(styles.flatMap((t) => Object.keys(t)));\n  const mergedStyles = styles.reduce((acc, cur, idx) => {\n    for (const key of styleKeys) {\n      const value = cur[key] || \"inherit\";\n      if (idx === 0 && defaultColor) {\n        acc[key] = value;\n      } else {\n        const keyName = key === \"color\" ? \"\" : key === \"background-color\" ? \"-bg\" : `-${key}`;\n        const varKey = cssVariablePrefix + variantsOrder[idx] + (key === \"color\" ? \"\" : keyName);\n        if (acc[key])\n          acc[key] += `;${varKey}:${value}`;\n        else\n          acc[key] = `${varKey}:${value}`;\n      }\n    }\n    return acc;\n  }, {});\n  token.htmlStyle = defaultColor ? stringifyTokenStyle(mergedStyles) : Object.values(mergedStyles).join(\";\");\n  return token;\n}\n\nfunction codeToHast(internal, code, options, transformerContext = {\n  meta: {},\n  options,\n  codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n  codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)\n}) {\n  let input = code;\n  for (const transformer of getTransformers(options))\n    input = transformer.preprocess?.call(transformerContext, input, options) || input;\n  let {\n    tokens,\n    fg,\n    bg,\n    themeName,\n    rootStyle\n  } = codeToTokens(internal, input, options);\n  const {\n    mergeWhitespaces = true\n  } = options;\n  if (mergeWhitespaces === true)\n    tokens = mergeWhitespaceTokens(tokens);\n  else if (mergeWhitespaces === \"never\")\n    tokens = splitWhitespaceTokens(tokens);\n  const contextSource = {\n    ...transformerContext,\n    get source() {\n      return input;\n    }\n  };\n  for (const transformer of getTransformers(options))\n    tokens = transformer.tokens?.call(contextSource, tokens) || tokens;\n  return tokensToHast(\n    tokens,\n    {\n      ...options,\n      fg,\n      bg,\n      themeName,\n      rootStyle\n    },\n    contextSource\n  );\n}\nfunction tokensToHast(tokens, options, transformerContext) {\n  const transformers = getTransformers(options);\n  const lines = [];\n  const root = {\n    type: \"root\",\n    children: []\n  };\n  const {\n    structure = \"classic\",\n    tabindex = \"0\"\n  } = options;\n  let preNode = {\n    type: \"element\",\n    tagName: \"pre\",\n    properties: {\n      class: `shiki ${options.themeName || \"\"}`,\n      style: options.rootStyle || `background-color:${options.bg};color:${options.fg}`,\n      ...tabindex !== false && tabindex != null ? {\n        tabindex: tabindex.toString()\n      } : {},\n      ...Object.fromEntries(\n        Array.from(\n          Object.entries(options.meta || {})\n        ).filter(([key]) => !key.startsWith(\"_\"))\n      )\n    },\n    children: []\n  };\n  let codeNode = {\n    type: \"element\",\n    tagName: \"code\",\n    properties: {},\n    children: lines\n  };\n  const lineNodes = [];\n  const context = {\n    ...transformerContext,\n    structure,\n    addClassToHast,\n    get source() {\n      return transformerContext.source;\n    },\n    get tokens() {\n      return tokens;\n    },\n    get options() {\n      return options;\n    },\n    get root() {\n      return root;\n    },\n    get pre() {\n      return preNode;\n    },\n    get code() {\n      return codeNode;\n    },\n    get lines() {\n      return lineNodes;\n    }\n  };\n  tokens.forEach((line, idx) => {\n    if (idx) {\n      if (structure === \"inline\")\n        root.children.push({ type: \"element\", tagName: \"br\", properties: {}, children: [] });\n      else if (structure === \"classic\")\n        lines.push({ type: \"text\", value: \"\\n\" });\n    }\n    let lineNode = {\n      type: \"element\",\n      tagName: \"span\",\n      properties: { class: \"line\" },\n      children: []\n    };\n    let col = 0;\n    for (const token of line) {\n      let tokenNode = {\n        type: \"element\",\n        tagName: \"span\",\n        properties: {},\n        children: [{ type: \"text\", value: token.content }]\n      };\n      const style = token.htmlStyle || stringifyTokenStyle(getTokenStyleObject(token));\n      if (style)\n        tokenNode.properties.style = style;\n      for (const transformer of transformers)\n        tokenNode = transformer?.span?.call(context, tokenNode, idx + 1, col, lineNode) || tokenNode;\n      if (structure === \"inline\")\n        root.children.push(tokenNode);\n      else if (structure === \"classic\")\n        lineNode.children.push(tokenNode);\n      col += token.content.length;\n    }\n    if (structure === \"classic\") {\n      for (const transformer of transformers)\n        lineNode = transformer?.line?.call(context, lineNode, idx + 1) || lineNode;\n      lineNodes.push(lineNode);\n      lines.push(lineNode);\n    }\n  });\n  if (structure === \"classic\") {\n    for (const transformer of transformers)\n      codeNode = transformer?.code?.call(context, codeNode) || codeNode;\n    preNode.children.push(codeNode);\n    for (const transformer of transformers)\n      preNode = transformer?.pre?.call(context, preNode) || preNode;\n    root.children.push(preNode);\n  }\n  let result = root;\n  for (const transformer of transformers)\n    result = transformer?.root?.call(context, result) || result;\n  return result;\n}\nfunction mergeWhitespaceTokens(tokens) {\n  return tokens.map((line) => {\n    const newLine = [];\n    let carryOnContent = \"\";\n    let firstOffset = 0;\n    line.forEach((token, idx) => {\n      const isUnderline = token.fontStyle && token.fontStyle & FontStyle.Underline;\n      const couldMerge = !isUnderline;\n      if (couldMerge && token.content.match(/^\\s+$/) && line[idx + 1]) {\n        if (!firstOffset)\n          firstOffset = token.offset;\n        carryOnContent += token.content;\n      } else {\n        if (carryOnContent) {\n          if (couldMerge) {\n            newLine.push({\n              ...token,\n              offset: firstOffset,\n              content: carryOnContent + token.content\n            });\n          } else {\n            newLine.push(\n              {\n                content: carryOnContent,\n                offset: firstOffset\n              },\n              token\n            );\n          }\n          firstOffset = 0;\n          carryOnContent = \"\";\n        } else {\n          newLine.push(token);\n        }\n      }\n    });\n    return newLine;\n  });\n}\nfunction splitWhitespaceTokens(tokens) {\n  return tokens.map((line) => {\n    return line.flatMap((token) => {\n      if (token.content.match(/^\\s+$/))\n        return token;\n      const match = token.content.match(/^(\\s*)(.*?)(\\s*)$/);\n      if (!match)\n        return token;\n      const [, leading, content, trailing] = match;\n      if (!leading && !trailing)\n        return token;\n      const expanded = [{\n        ...token,\n        offset: token.offset + leading.length,\n        content\n      }];\n      if (leading) {\n        expanded.unshift({\n          content: leading,\n          offset: token.offset\n        });\n      }\n      if (trailing) {\n        expanded.push({\n          content: trailing,\n          offset: token.offset + leading.length + content.length\n        });\n      }\n      return expanded;\n    });\n  });\n}\n\nfunction codeToHtml(internal, code, options) {\n  const context = {\n    meta: {},\n    options,\n    codeToHast: (_code, _options) => codeToHast(internal, _code, _options),\n    codeToTokens: (_code, _options) => codeToTokens(internal, _code, _options)\n  };\n  let result = toHtml(codeToHast(internal, code, options, context));\n  for (const transformer of getTransformers(options))\n    result = transformer.postprocess?.call(context, result, options) || result;\n  return result;\n}\n\nconst VSCODE_FALLBACK_EDITOR_FG = { light: \"#333333\", dark: \"#bbbbbb\" };\nconst VSCODE_FALLBACK_EDITOR_BG = { light: \"#fffffe\", dark: \"#1e1e1e\" };\nconst RESOLVED_KEY = \"__shiki_resolved\";\nfunction normalizeTheme(rawTheme) {\n  if (rawTheme?.[RESOLVED_KEY])\n    return rawTheme;\n  const theme = {\n    ...rawTheme\n  };\n  if (theme.tokenColors && !theme.settings) {\n    theme.settings = theme.tokenColors;\n    delete theme.tokenColors;\n  }\n  theme.type || (theme.type = \"dark\");\n  theme.colorReplacements = { ...theme.colorReplacements };\n  theme.settings || (theme.settings = []);\n  let { bg, fg } = theme;\n  if (!bg || !fg) {\n    const globalSetting = theme.settings ? theme.settings.find((s) => !s.name && !s.scope) : void 0;\n    if (globalSetting?.settings?.foreground)\n      fg = globalSetting.settings.foreground;\n    if (globalSetting?.settings?.background)\n      bg = globalSetting.settings.background;\n    if (!fg && theme?.colors?.[\"editor.foreground\"])\n      fg = theme.colors[\"editor.foreground\"];\n    if (!bg && theme?.colors?.[\"editor.background\"])\n      bg = theme.colors[\"editor.background\"];\n    if (!fg)\n      fg = theme.type === \"light\" ? VSCODE_FALLBACK_EDITOR_FG.light : VSCODE_FALLBACK_EDITOR_FG.dark;\n    if (!bg)\n      bg = theme.type === \"light\" ? VSCODE_FALLBACK_EDITOR_BG.light : VSCODE_FALLBACK_EDITOR_BG.dark;\n    theme.fg = fg;\n    theme.bg = bg;\n  }\n  if (!(theme.settings[0] && theme.settings[0].settings && !theme.settings[0].scope)) {\n    theme.settings.unshift({\n      settings: {\n        foreground: theme.fg,\n        background: theme.bg\n      }\n    });\n  }\n  let replacementCount = 0;\n  const replacementMap = /* @__PURE__ */ new Map();\n  function getReplacementColor(value) {\n    if (replacementMap.has(value))\n      return replacementMap.get(value);\n    replacementCount += 1;\n    const hex = `#${replacementCount.toString(16).padStart(8, \"0\").toLowerCase()}`;\n    if (theme.colorReplacements?.[`#${hex}`])\n      return getReplacementColor(value);\n    replacementMap.set(value, hex);\n    return hex;\n  }\n  theme.settings = theme.settings.map((setting) => {\n    const replaceFg = setting.settings?.foreground && !setting.settings.foreground.startsWith(\"#\");\n    const replaceBg = setting.settings?.background && !setting.settings.background.startsWith(\"#\");\n    if (!replaceFg && !replaceBg)\n      return setting;\n    const clone = {\n      ...setting,\n      settings: {\n        ...setting.settings\n      }\n    };\n    if (replaceFg) {\n      const replacement = getReplacementColor(setting.settings.foreground);\n      theme.colorReplacements[replacement] = setting.settings.foreground;\n      clone.settings.foreground = replacement;\n    }\n    if (replaceBg) {\n      const replacement = getReplacementColor(setting.settings.background);\n      theme.colorReplacements[replacement] = setting.settings.background;\n      clone.settings.background = replacement;\n    }\n    return clone;\n  });\n  for (const key of Object.keys(theme.colors || {})) {\n    if (key === \"editor.foreground\" || key === \"editor.background\" || key.startsWith(\"terminal.ansi\")) {\n      if (!theme.colors[key]?.startsWith(\"#\")) {\n        const replacement = getReplacementColor(theme.colors[key]);\n        theme.colorReplacements[replacement] = theme.colors[key];\n        theme.colors[key] = replacement;\n      }\n    }\n  }\n  Object.defineProperty(theme, RESOLVED_KEY, {\n    enumerable: false,\n    writable: false,\n    value: true\n  });\n  return theme;\n}\n\nasync function resolveLangs(langs) {\n  return Array.from(new Set((await Promise.all(\n    langs.filter((l) => !isSpecialLang(l)).map(async (lang) => await normalizeGetter(lang).then((r) => Array.isArray(r) ? r : [r]))\n  )).flat()));\n}\nasync function resolveThemes(themes) {\n  const resolved = await Promise.all(\n    themes.map(\n      async (theme) => isSpecialTheme(theme) ? null : normalizeTheme(await normalizeGetter(theme))\n    )\n  );\n  return resolved.filter((i) => !!i);\n}\n\nvar __defProp$1 = Object.defineProperty;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField$1 = (obj, key, value) => {\n  __defNormalProp$1(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass Registry extends Registry$1 {\n  constructor(_resolver, _themes, _langs, _alias = {}) {\n    super(_resolver);\n    this._resolver = _resolver;\n    this._themes = _themes;\n    this._langs = _langs;\n    this._alias = _alias;\n    __publicField$1(this, \"_resolvedThemes\", /* @__PURE__ */ new Map());\n    __publicField$1(this, \"_resolvedGrammars\", /* @__PURE__ */ new Map());\n    __publicField$1(this, \"_langMap\", /* @__PURE__ */ new Map());\n    __publicField$1(this, \"_langGraph\", /* @__PURE__ */ new Map());\n    __publicField$1(this, \"_textmateThemeCache\", /* @__PURE__ */ new WeakMap());\n    __publicField$1(this, \"_loadedThemesCache\", null);\n    __publicField$1(this, \"_loadedLanguagesCache\", null);\n    this._themes.map((t) => this.loadTheme(t));\n    this.loadLanguages(this._langs);\n  }\n  getTheme(theme) {\n    if (typeof theme === \"string\")\n      return this._resolvedThemes.get(theme);\n    else\n      return this.loadTheme(theme);\n  }\n  loadTheme(theme) {\n    const _theme = normalizeTheme(theme);\n    if (_theme.name) {\n      this._resolvedThemes.set(_theme.name, _theme);\n      this._loadedThemesCache = null;\n    }\n    return _theme;\n  }\n  getLoadedThemes() {\n    if (!this._loadedThemesCache)\n      this._loadedThemesCache = [...this._resolvedThemes.keys()];\n    return this._loadedThemesCache;\n  }\n  // Override and re-implement this method to cache the textmate themes as `TextMateTheme.createFromRawTheme`\n  // is expensive. Themes can switch often especially for dual-theme support.\n  //\n  // The parent class also accepts `colorMap` as the second parameter, but since we don't use that,\n  // we omit here so it's easier to cache the themes.\n  setTheme(theme) {\n    let textmateTheme = this._textmateThemeCache.get(theme);\n    if (!textmateTheme) {\n      textmateTheme = Theme.createFromRawTheme(theme);\n      this._textmateThemeCache.set(theme, textmateTheme);\n    }\n    this._syncRegistry.setTheme(textmateTheme);\n  }\n  getGrammar(name) {\n    if (this._alias[name]) {\n      const resolved = /* @__PURE__ */ new Set([name]);\n      while (this._alias[name]) {\n        name = this._alias[name];\n        if (resolved.has(name))\n          throw new ShikiError(`Circular alias \\`${Array.from(resolved).join(\" -> \")} -> ${name}\\``);\n        resolved.add(name);\n      }\n    }\n    return this._resolvedGrammars.get(name);\n  }\n  loadLanguage(lang) {\n    if (this.getGrammar(lang.name))\n      return;\n    const embeddedLazilyBy = new Set(\n      [...this._langMap.values()].filter((i) => i.embeddedLangsLazy?.includes(lang.name))\n    );\n    this._resolver.addLanguage(lang);\n    const grammarConfig = {\n      balancedBracketSelectors: lang.balancedBracketSelectors || [\"*\"],\n      unbalancedBracketSelectors: lang.unbalancedBracketSelectors || []\n    };\n    this._syncRegistry._rawGrammars.set(lang.scopeName, lang);\n    const g = this.loadGrammarWithConfiguration(lang.scopeName, 1, grammarConfig);\n    g.name = lang.name;\n    this._resolvedGrammars.set(lang.name, g);\n    if (lang.aliases) {\n      lang.aliases.forEach((alias) => {\n        this._alias[alias] = lang.name;\n      });\n    }\n    this._loadedLanguagesCache = null;\n    if (embeddedLazilyBy.size) {\n      for (const e of embeddedLazilyBy) {\n        this._resolvedGrammars.delete(e.name);\n        this._loadedLanguagesCache = null;\n        this._syncRegistry?._injectionGrammars?.delete(e.scopeName);\n        this._syncRegistry?._grammars?.delete(e.scopeName);\n        this.loadLanguage(this._langMap.get(e.name));\n      }\n    }\n  }\n  dispose() {\n    super.dispose();\n    this._resolvedThemes.clear();\n    this._resolvedGrammars.clear();\n    this._langMap.clear();\n    this._langGraph.clear();\n    this._loadedThemesCache = null;\n  }\n  loadLanguages(langs) {\n    for (const lang of langs)\n      this.resolveEmbeddedLanguages(lang);\n    const langsGraphArray = Array.from(this._langGraph.entries());\n    const missingLangs = langsGraphArray.filter(([_, lang]) => !lang);\n    if (missingLangs.length) {\n      const dependents = langsGraphArray.filter(([_, lang]) => lang && lang.embeddedLangs?.some((l) => missingLangs.map(([name]) => name).includes(l))).filter((lang) => !missingLangs.includes(lang));\n      throw new ShikiError(`Missing languages ${missingLangs.map(([name]) => `\\`${name}\\``).join(\", \")}, required by ${dependents.map(([name]) => `\\`${name}\\``).join(\", \")}`);\n    }\n    for (const [_, lang] of langsGraphArray)\n      this._resolver.addLanguage(lang);\n    for (const [_, lang] of langsGraphArray)\n      this.loadLanguage(lang);\n  }\n  getLoadedLanguages() {\n    if (!this._loadedLanguagesCache) {\n      this._loadedLanguagesCache = [\n        .../* @__PURE__ */ new Set([...this._resolvedGrammars.keys(), ...Object.keys(this._alias)])\n      ];\n    }\n    return this._loadedLanguagesCache;\n  }\n  resolveEmbeddedLanguages(lang) {\n    this._langMap.set(lang.name, lang);\n    this._langGraph.set(lang.name, lang);\n    if (lang.embeddedLangs) {\n      for (const embeddedLang of lang.embeddedLangs)\n        this._langGraph.set(embeddedLang, this._langMap.get(embeddedLang));\n    }\n  }\n}\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nclass Resolver {\n  constructor(engine, langs) {\n    __publicField(this, \"_langs\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_scopeToLang\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_injections\", /* @__PURE__ */ new Map());\n    __publicField(this, \"_onigLib\");\n    this._onigLib = {\n      createOnigScanner: (patterns) => engine.createScanner(patterns),\n      createOnigString: (s) => engine.createString(s)\n    };\n    langs.forEach((i) => this.addLanguage(i));\n  }\n  get onigLib() {\n    return this._onigLib;\n  }\n  getLangRegistration(langIdOrAlias) {\n    return this._langs.get(langIdOrAlias);\n  }\n  loadGrammar(scopeName) {\n    return this._scopeToLang.get(scopeName);\n  }\n  addLanguage(l) {\n    this._langs.set(l.name, l);\n    if (l.aliases) {\n      l.aliases.forEach((a) => {\n        this._langs.set(a, l);\n      });\n    }\n    this._scopeToLang.set(l.scopeName, l);\n    if (l.injectTo) {\n      l.injectTo.forEach((i) => {\n        if (!this._injections.get(i))\n          this._injections.set(i, []);\n        this._injections.get(i).push(l.scopeName);\n      });\n    }\n  }\n  getInjections(scopeName) {\n    const scopeParts = scopeName.split(\".\");\n    let injections = [];\n    for (let i = 1; i <= scopeParts.length; i++) {\n      const subScopeName = scopeParts.slice(0, i).join(\".\");\n      injections = [...injections, ...this._injections.get(subScopeName) || []];\n    }\n    return injections;\n  }\n}\n\nlet instancesCount = 0;\nfunction createShikiInternalSync(options) {\n  instancesCount += 1;\n  if (options.warnings !== false && instancesCount >= 10 && instancesCount % 10 === 0)\n    console.warn(`[Shiki] ${instancesCount} instances have been created. Shiki is supposed to be used as a singleton, consider refactoring your code to cache your highlighter instance; Or call \\`highlighter.dispose()\\` to release unused instances.`);\n  let isDisposed = false;\n  if (!options.engine)\n    throw new ShikiError(\"`engine` option is required for synchronous mode\");\n  const langs = (options.langs || []).flat(1);\n  const themes = (options.themes || []).flat(1).map(normalizeTheme);\n  const resolver = new Resolver(options.engine, langs);\n  const _registry = new Registry(resolver, themes, langs, options.langAlias);\n  let _lastTheme;\n  function getLanguage(name) {\n    ensureNotDisposed();\n    const _lang = _registry.getGrammar(typeof name === \"string\" ? name : name.name);\n    if (!_lang)\n      throw new ShikiError(`Language \\`${name}\\` not found, you may need to load it first`);\n    return _lang;\n  }\n  function getTheme(name) {\n    if (name === \"none\")\n      return { bg: \"\", fg: \"\", name: \"none\", settings: [], type: \"dark\" };\n    ensureNotDisposed();\n    const _theme = _registry.getTheme(name);\n    if (!_theme)\n      throw new ShikiError(`Theme \\`${name}\\` not found, you may need to load it first`);\n    return _theme;\n  }\n  function setTheme(name) {\n    ensureNotDisposed();\n    const theme = getTheme(name);\n    if (_lastTheme !== name) {\n      _registry.setTheme(theme);\n      _lastTheme = name;\n    }\n    const colorMap = _registry.getColorMap();\n    return {\n      theme,\n      colorMap\n    };\n  }\n  function getLoadedThemes() {\n    ensureNotDisposed();\n    return _registry.getLoadedThemes();\n  }\n  function getLoadedLanguages() {\n    ensureNotDisposed();\n    return _registry.getLoadedLanguages();\n  }\n  function loadLanguageSync(...langs2) {\n    ensureNotDisposed();\n    _registry.loadLanguages(langs2.flat(1));\n  }\n  async function loadLanguage(...langs2) {\n    return loadLanguageSync(await resolveLangs(langs2));\n  }\n  function loadThemeSync(...themes2) {\n    ensureNotDisposed();\n    for (const theme of themes2.flat(1)) {\n      _registry.loadTheme(theme);\n    }\n  }\n  async function loadTheme(...themes2) {\n    ensureNotDisposed();\n    return loadThemeSync(await resolveThemes(themes2));\n  }\n  function ensureNotDisposed() {\n    if (isDisposed)\n      throw new ShikiError(\"Shiki instance has been disposed\");\n  }\n  function dispose() {\n    if (isDisposed)\n      return;\n    isDisposed = true;\n    _registry.dispose();\n    instancesCount -= 1;\n  }\n  return {\n    setTheme,\n    getTheme,\n    getLanguage,\n    getLoadedThemes,\n    getLoadedLanguages,\n    loadLanguage,\n    loadLanguageSync,\n    loadTheme,\n    loadThemeSync,\n    dispose,\n    [Symbol.dispose]: dispose\n  };\n}\n\nasync function createShikiInternal(options = {}) {\n  const [\n    themes,\n    langs,\n    engine\n  ] = await Promise.all([\n    resolveThemes(options.themes || []),\n    resolveLangs(options.langs || []),\n    options.engine || createWasmOnigEngine(options.loadWasm || getDefaultWasmLoader())\n  ]);\n  return createShikiInternalSync({\n    ...options,\n    loadWasm: void 0,\n    themes,\n    langs,\n    engine\n  });\n}\nfunction getShikiInternal(options = {}) {\n  return createShikiInternal(options);\n}\n\nasync function createHighlighterCore(options = {}) {\n  const internal = await createShikiInternal(options);\n  return {\n    getLastGrammarState: (code, options2) => getLastGrammarState(internal, code, options2),\n    codeToTokensBase: (code, options2) => codeToTokensBase(internal, code, options2),\n    codeToTokensWithThemes: (code, options2) => codeToTokensWithThemes(internal, code, options2),\n    codeToTokens: (code, options2) => codeToTokens(internal, code, options2),\n    codeToHast: (code, options2) => codeToHast(internal, code, options2),\n    codeToHtml: (code, options2) => codeToHtml(internal, code, options2),\n    ...internal,\n    getInternalContext: () => internal\n  };\n}\nfunction createHighlighterCoreSync(options = {}) {\n  const internal = createShikiInternalSync(options);\n  return {\n    getLastGrammarState: (code, options2) => getLastGrammarState(internal, code, options2),\n    codeToTokensBase: (code, options2) => codeToTokensBase(internal, code, options2),\n    codeToTokensWithThemes: (code, options2) => codeToTokensWithThemes(internal, code, options2),\n    codeToTokens: (code, options2) => codeToTokens(internal, code, options2),\n    codeToHast: (code, options2) => codeToHast(internal, code, options2),\n    codeToHtml: (code, options2) => codeToHtml(internal, code, options2),\n    ...internal,\n    getInternalContext: () => internal\n  };\n}\nfunction makeSingletonHighlighterCore(createHighlighter) {\n  let _shiki;\n  async function getSingletonHighlighterCore2(options = {}) {\n    if (!_shiki) {\n      _shiki = createHighlighter({\n        ...options,\n        themes: options.themes || [],\n        langs: options.langs || []\n      });\n      return _shiki;\n    } else {\n      const s = await _shiki;\n      await Promise.all([\n        s.loadTheme(...options.themes || []),\n        s.loadLanguage(...options.langs || [])\n      ]);\n      return s;\n    }\n  }\n  return getSingletonHighlighterCore2;\n}\nconst getSingletonHighlighterCore = /* @__PURE__ */ makeSingletonHighlighterCore(createHighlighterCore);\nfunction getHighlighterCore(options = {}) {\n  return createHighlighterCore(options);\n}\n\nfunction createdBundledHighlighter(arg1, arg2, arg3) {\n  let bundledLanguages;\n  let bundledThemes;\n  let engine;\n  if (arg2) {\n    bundledLanguages = arg1;\n    bundledThemes = arg2;\n    engine = () => createWasmOnigEngine(arg3);\n  } else {\n    const options = arg1;\n    bundledLanguages = options.langs;\n    bundledThemes = options.themes;\n    engine = options.engine;\n  }\n  async function createHighlighter(options) {\n    function resolveLang(lang) {\n      if (typeof lang === \"string\") {\n        if (isSpecialLang(lang))\n          return [];\n        const bundle = bundledLanguages[lang];\n        if (!bundle)\n          throw new ShikiError$1(`Language \\`${lang}\\` is not included in this bundle. You may want to load it from external source.`);\n        return bundle;\n      }\n      return lang;\n    }\n    function resolveTheme(theme) {\n      if (isSpecialTheme(theme))\n        return \"none\";\n      if (typeof theme === \"string\") {\n        const bundle = bundledThemes[theme];\n        if (!bundle)\n          throw new ShikiError$1(`Theme \\`${theme}\\` is not included in this bundle. You may want to load it from external source.`);\n        return bundle;\n      }\n      return theme;\n    }\n    const _themes = (options.themes ?? []).map((i) => resolveTheme(i));\n    const langs = (options.langs ?? []).map((i) => resolveLang(i));\n    const core = await createHighlighterCore({\n      engine: engine(),\n      ...options,\n      themes: _themes,\n      langs\n    });\n    return {\n      ...core,\n      loadLanguage(...langs2) {\n        return core.loadLanguage(...langs2.map(resolveLang));\n      },\n      loadTheme(...themes) {\n        return core.loadTheme(...themes.map(resolveTheme));\n      }\n    };\n  }\n  return createHighlighter;\n}\nfunction makeSingletonHighlighter(createHighlighter) {\n  let _shiki;\n  async function getSingletonHighlighter(options = {}) {\n    if (!_shiki) {\n      _shiki = createHighlighter({\n        ...options,\n        themes: options.themes || [],\n        langs: options.langs || []\n      });\n      return _shiki;\n    } else {\n      const s = await _shiki;\n      await Promise.all([\n        s.loadTheme(...options.themes || []),\n        s.loadLanguage(...options.langs || [])\n      ]);\n      return s;\n    }\n  }\n  return getSingletonHighlighter;\n}\nfunction createSingletonShorthands(createHighlighter) {\n  const getSingletonHighlighter = makeSingletonHighlighter(createHighlighter);\n  return {\n    getSingletonHighlighter(options) {\n      return getSingletonHighlighter(options);\n    },\n    async codeToHtml(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: \"theme\" in options ? [options.theme] : Object.values(options.themes)\n      });\n      return shiki.codeToHtml(code, options);\n    },\n    async codeToHast(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: \"theme\" in options ? [options.theme] : Object.values(options.themes)\n      });\n      return shiki.codeToHast(code, options);\n    },\n    async codeToTokens(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: \"theme\" in options ? [options.theme] : Object.values(options.themes)\n      });\n      return shiki.codeToTokens(code, options);\n    },\n    async codeToTokensBase(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: [options.theme]\n      });\n      return shiki.codeToTokensBase(code, options);\n    },\n    async codeToTokensWithThemes(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: Object.values(options.themes).filter(Boolean)\n      });\n      return shiki.codeToTokensWithThemes(code, options);\n    },\n    async getLastGrammarState(code, options) {\n      const shiki = await getSingletonHighlighter({\n        langs: [options.lang],\n        themes: [options.theme]\n      });\n      return shiki.getLastGrammarState(code, options);\n    }\n  };\n}\n\nexport { addClassToHast, applyColorReplacements, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createHighlighterCore, createHighlighterCoreSync, createPositionConverter, createShikiInternal, createShikiInternalSync, createSingletonShorthands, createdBundledHighlighter, getHighlighterCore, getShikiInternal, getSingletonHighlighterCore, getTokenStyleObject, isNoneTheme, isPlainLang, isSpecialLang, isSpecialTheme, makeSingletonHighlighter, makeSingletonHighlighterCore, normalizeGetter, normalizeTheme, resolveColorReplacements, setDefaultWasmLoader, splitLines, splitToken, splitTokens, stringifyTokenStyle, toArray, tokenizeAnsiWithTheme, tokenizeWithTheme, tokensToHast, transformerDecorations };\n","import { bundledLanguages } from './langs.mjs';\nexport { bundledLanguagesAlias, bundledLanguagesBase, bundledLanguagesInfo } from './langs.mjs';\nimport { g as getWasmInlined } from './chunks/wasm-dynamic.mjs';\nimport { bundledThemes } from './themes.mjs';\nexport { bundledThemesInfo } from './themes.mjs';\nimport { createdBundledHighlighter, createWasmOnigEngine, createSingletonShorthands } from '@shikijs/core';\nexport * from '@shikijs/core';\nexport { createCssVariablesTheme } from './theme-css-variables.mjs';\n\nconst createHighlighter = /* @__PURE__ */ createdBundledHighlighter({\n  langs: bundledLanguages,\n  themes: bundledThemes,\n  engine: () => createWasmOnigEngine(getWasmInlined)\n});\nconst {\n  codeToHtml,\n  codeToHast,\n  codeToTokens,\n  codeToTokensBase,\n  codeToTokensWithThemes,\n  getSingletonHighlighter,\n  getLastGrammarState\n} = /* @__PURE__ */ createSingletonShorthands(\n  createHighlighter\n);\nconst getHighlighter = (options) => {\n  return createHighlighter(options);\n};\n\nexport { bundledLanguages, bundledThemes, codeToHast, codeToHtml, codeToTokens, codeToTokensBase, codeToTokensWithThemes, createHighlighter, getHighlighter, getLastGrammarState, getSingletonHighlighter, getWasmInlined };\n"],"names":["e","r","byteLength","getLens","t","f","toByteArray","h","i","o","u","n","a","s","charCodeAt","fromByteArray","length","push","encodeChunk","join","Uint8Array","Array","indexOf","Symbol","for","createBuffer","Object","setPrototypeOf","Buffer","prototype","allocUnsafe","from","fromString","isEncoding","write","slice","ArrayBuffer","isView","fromArrayLike","isInstance","buffer","SharedArrayBuffer","fromArrayBuffer","undefined","valueOf","fromObject","isBuffer","checked","copy","type","isArray","data","toPrimitive","assertSize","arguments","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","hexSlice","utf8Slice","asciiSlice","Math","min","String","fromCharCode","latin1Slice","utf16leSlice","swap","bidirectionalIndexOf","arrayIndexOf","call","lastIndexOf","read","readUInt16BE","c","decodeCodePointsArray","apply","checkOffset","checkInt","checkIEEE754","writeFloat","writeDouble","SlowBuffer","alloc","INSPECT_MAX_BYTES","kMaxLength","TYPED_ARRAY_SUPPORT","typedArraySupport","foo","console","error","defineProperty","enumerable","get","byteOffset","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","offset","concat","swap16","swap32","swap64","toString","toLocaleString","equals","inspect","replace","trim","includes","isFinite","hexWrite","Number","parseInt","substr","blitBuffer","asciiToBytes","utf16leToBytes","toJSON","_arr","subarray","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","copyWithin","set","Infinity","base64clean","split","constructor","name","l","p","NaN","y","g","isNaN","abs","floor","log","LN2","__nccwpck_require__","exports","ab","__dirname","module","highlighter","createHighlighter","themes","langs","displayName","scopeName","patterns","include","repository","constant","match","entity","invalid","keywords","punctuation","storage","strings","support","$self","$base","CodeHighlight","param","code","lang","inline","className","loadedLangs","getLoadedLanguages","loadLanguage","html","useMemo","codeToHtml","light","dark","structure","transformers","pre","node","addClassToHast","style","jsx","children","dangerouslySetInnerHTML","__html","clsx","key","initPromise","_defaultWasmLoader","FontStyle2","FindOption2","bundledLanguagesInfo","__webpack_require__","then","bind","Promise","all","bundledLanguagesBase","fromEntries","map","id","import","bundledLanguagesAlias","flatMap","aliases","bundledLanguages","getWasmInlined","info","wasm","default","bundledThemes","bundledThemesInfo","ShikiError","Error","message","mergeObjects","target","sources","forEach","source","CAPTURING_REGEX_SOURCE","RegexSource","hasCaptures","regexSource","lastIndex","test","replaceCaptures","captureSource","captureIndices","index","commandIndex","command","capture","result","substring","start","end","toUpperCase","strArrCmp","b","len1","len2","res","isValidHexColor","hex","escapeRegExpCharacters","value","CachedFn","fn","cache","Map","has","Theme","_colorMap","_defaults","_root","_cachedMatchRoot","createFromRawTheme","colorMap","createFromParsedTheme","parseTheme","settings","resultLen","len","scopes","entry","scope","_scope","fontStyle","segments","j","lenJ","foreground","background","parentScopes","reverse","ParsedThemeRule","resolveParsedThemeRules","parsedThemeRules","sort","defaultFontStyle","defaultForeground","defaultBackground","incomingDefaults","shift","ColorMap","defaults","StyleAttributes","getId","root","ThemeTrieElement","ThemeTrieElementRule","rule","insert","getColorMap","getDefaults","scopePath","effectiveRule","matchingTrieElements","find","_scopePathMatchesParentScopes","scopePattern","scopeMustMatch","startsWith","parent","v","ScopeStack","_ScopeStack","path","scopeNames","getSegments","item","extends","other","getExtensionIfDefined","base","foregroundId","backgroundId","FontStyle","_lastColorId","_id2color","_color2id","create","_isFrozen","color","emptyParentScopes","freeze","_ThemeTrieElementRule","scopeDepth","clone","cloneArr","arr","acceptOverwrite","_ThemeTrieElement","_mainRule","rulesWithParentScopes","_children","_rulesWithParentScopes","_cmpBySpecificity","aParentIndex","bParentIndex","parentScopeLengthDiff","head","tail","dotIndex","hasOwnProperty","rules","child","_doInsertHere","EncodedTokenMetadata","_EncodedTokenMetadata","toBinaryStr","encodedTokenAttributes","padStart","print","languageId","getLanguageId","tokenType","getTokenType","getFontStyle","getForeground","getBackground","containsBalancedBrackets","_languageId","_tokenType","_containsBalancedBracketsBit","_fontStyle","_foreground","_background","createMatchers","selector","matchesName","regex","results","tokenizer","exec","next","token","priority","charAt","matcher","parseConjunction","parseOperand","expressionToNegate","matcherInput","expressionInParents","parseInnerExpression","matchers","some","matcher2","isIdentifier","identifiers","every","FindOption","disposeOnigString","str","dispose","TopLevelRuleReference","toKey","TopLevelRepositoryRuleReference","ruleName","ExternalReferenceCollector","_references","_seenReferenceKeys","Set","visitedRule","references","add","reference","ScopeDependencyProcessor","repo","initialScopeName","seenFullScopeRequests","seenPartialScopeRequests","Q","processQueue","q","deps","dep","collectReferencesOfReference","baseGrammarScopeName","selfGrammar","lookup","baseGrammar","collectExternalReferencesInTopLevelRule","collectExternalReferencesInTopLevelRepositoryRule","injections","injection","context","collectExternalReferencesInRules","values","patternRepository","parseInclude","kind","newContext","BaseReference","SelfReference","RelativeReference","TopLevelReference","TopLevelRepositoryReference","indexOfSharp","HAS_BACK_REFERENCES","BACK_REFERENCING_END","Rule","$location","contentName","_name","_nameIsCapturing","_contentName","_contentNameIsCapturing","debugName","location","basename","idx","filename","line","getName","lineText","getContentName","CaptureRule","retokenizeCapturedWithRuleId","collectPatterns","grammar","out","compile","endRegexSource","compileAG","allowA","allowG","MatchRule","captures","_match","RegExpSource","_cachedCompiledPatterns","debugMatchRegExp","_getCachedCompiledPatterns","RegExpSourceList","IncludeOnlyRule","hasMissingPatterns","pattern","getRule","BeginEndRule","begin","beginCaptures","endCaptures","applyEndPatternLast","_begin","_end","endHasBackReferences","hasBackReferences","debugBeginRegExp","debugEndRegExp","getEndWithResolvedBackReferences","resolveBackReferences","unshift","setSource","BeginWhileRule","_while","whileCaptures","whileHasBackReferences","_cachedCompiledWhilePatterns","debugWhileRegExp","getWhileWithResolvedBackReferences","compileWhile","_getCachedCompiledWhilePatterns","compileWhileAG","RuleFactory","_RuleFactory","createCaptureRule","helper","registerRule","getCompiledRuleId","desc","$vscodeTextmateLocation","_compileCaptures","_compilePatterns","while","maximumCaptureId","captureId","numericCaptureId","ruleId","localIncludedRule","externalGrammarName","externalGrammarInclude","externalGrammar","getExternalGrammar","externalIncludedRule","skipRule","_RegExpSource","regExpSource","lastPushedPos","output","hasAnchor","pos","ch","nextCh","_anchorCache","_buildAnchorCache","newSource","capturedValues","g1","A0_G0_result","A0_G1_result","A1_G0_result","A1_G1_result","A0_G0","A0_G1","A1_G0","A1_G1","resolveAnchors","_items","_hasAnchors","_cached","_disposeCaches","onigLib","regExps","CompiledRule","_resolveAnchors","scanner","createOnigScanner","findNextMatchSync","string","startPosition","options","BasicScopeAttributes","_BasicScopeAttributesProvider","initialLanguageId","embeddedLanguages","_getBasicScopeAttributes","_scopeToLanguage","_toStandardTokenType","_defaultAttributes","_embeddedLanguagesMatcher","ScopeMatcher","entries","getDefaultAttributes","getBasicScopeAttributes","_NULL_SCOPE_METADATA","m","STANDARD_TOKEN_TYPE_REGEXP","scopesRegExp","escapedScopes","process","env","TokenizeStringResult","stack","stoppedEarly","_tokenizeString","isFirstLine","linePos","lineTokens","checkWhileConditions","timeLimit","lineLength","content","STOP","anchorPosition","whileCheckResult","_checkWhileConditions","beginRuleCapturedEOL","whileRules","pop","nodeRule","whileRule","ruleScanner","findOptions","endRule","matchedRuleId","produce","handleCaptures","startTime","Date","now","elapsedTime","scanNext","matchRuleOrInjections","matchResult","matchRule","prepareRuleSearch","getInjections","injectionResult","matchInjections","bestMatchRuleId","bestMatchRating","MAX_VALUE","bestMatchCaptureIndices","bestMatchResultPriority","contentNameScopesList","getScopeNames","matchRating","priorityMatch","matchResultScore","injectionResultScore","hasAdvanced","poppedRule","withContentNameScopesList","nameScopesList","popped","getAnchorPos","getEnterPos","_rule","beforePush","pushAttributed","pushedRule","withEndRule","hasSameRuleAs","matchingRule","safePop","lineTextContent","localStack","maxEnd","captureRule","captureIndex","endPos","produceFromScopes","stackClone","onigSubStr","createOnigString","captureRuleScopeName","captureRuleScopesList","LocalStackElement","collectInjections","ruleFactoryHelper","nameMatcher","debugSelector","identifers","scopesAreMatching","thisScopeName","identifier","Grammar","_rootScopeName","initialLanguage","tokenTypes","balancedBracketSelectors","grammarRepository","_onigLib","_basicScopeAttributesProvider","_rootId","_lastRuleId","_ruleId2desc","_includedGrammars","_grammarRepository","_grammar","initGrammar","_injections","_tokenTypeMatchers","keys","themeProvider","getMetadataForScope","_collectInjections","scopeName2","rawInjections","expression","injectionScopeNames","injectionGrammar","injectionScopeName","injectionSelector","i1","i2","factory","rawIncludedGrammar","tokenizeLine","prevState","_tokenize","tokens","getResult","ruleStack","tokenizeLine2","getBinaryResult","emitBinaryTokens","StateStackImpl","NULL","reset","scopeList","rawDefaultMetadata","defaultStyle","defaultMetadata","rootScopeName","AttributedScopeStack","createRootAndLookUpScopeName","createRoot","onigLineText","LineTokens","doClone","something","cloneArray","cloneObj","obj","_AttributedScopeStack","tokenAttributes","fromExtension","namesScopeList","current","frame","rawRootMetadata","rootStyle","themeMatch","resolvedTokenAttributes","mergeAttributes","existingTokenAttributes","basicScopeAttributes","styleAttributes","_pushAttributed","rawMetadata","newPath","scopeThemeMatchResult","metadata","self","_StateStackImpl","enterPos","anchorPos","_stackElementBrand","depth","_enterPos","_anchorPos","_equals","_structuralEquals","_reset","el","_writeString","outIndex","contentNameScopeStack","toStateStackFrame","pushFrame","BalancedBracketSelectors","balancedBracketScopes","unbalancedBracketScopes","allowAny","matchesAlways","matchesNever","excluder","includer","tokenTypeOverrides","_emitBinaryTokens","_tokenTypeOverrides","_lineText","_tokens","_binaryTokens","_lastTokenEndIndex","endIndex","scopesList","scopes2","startIndex","Uint32Array","SyncRegistry","theme","_grammars","_rawGrammars","_injectionGrammars","_theme","setTheme","addGrammar","targetScope","grammarForScopeName","rawGrammar","dist_Registry","_options","_syncRegistry","_ensureGrammarCache","loadGrammarWithEmbeddedLanguages","loadGrammarWithConfiguration","configuration","_loadGrammar","unbalancedBracketSelectors","loadGrammar","dependencyProcessor","_loadSingleGrammar","request","_grammarForScopeName","_doLoadSingleGrammar","INITIAL","htmlVoidElements","Schema","property","normal","space","merge","definitions","assign","normalize","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","types_boolean","increment","checks","types_namespaceObject","DefinedInfo","mask","mark","check","own","definition","prop","properties","transform","attributes","xlink","_","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","label","language","list","loading","loop","low","manifest","max","maxLength","media","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","width","wrap","writingSuggestions","align","aLink","archive","axis","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","codeBase","codeType","compact","declare","event","face","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","order","orient","orientation","origin","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y1","y2","yChannelSelector","z","zoomAndPan","property_information_html","property_information_svg","zwitch_own","defaultSubsetRegex","surrogatePairsRegex","controlCharactersRegex","regexEscapeRegex","subsetToRegexCache","WeakMap","hexadecimalRegex","decimalRegex","characterEntitiesLegacy","characterEntitiesHtml4","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","rang","loz","spades","clubs","hearts","diams","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","dangerous","to_named_own","characters","notAlphanumericRegex","formatSmart","named","numeric","toHexadecimal","omit","omitOptionalSemicolons","useNamedReferences","useShortestReferences","toNamed","character","decimal","toDecimal","stringifyEntities","core_core","subset","cached","charactersToExpression","groups","basic","escapeOnly","pair","htmlCommentRegex","bogusCommentEntitySubset","commentEntitySubset","ccount","count","valid","dash","kebab","$0","camelcase","re","whitespace","thing","siblingAfter","siblings","siblingBefore","emptyChildren","includeWhitespace","omission_own","omission","handlers","tagName","closing","body","caption","headOrColgroupOrCaption","colgroup","dd","dt","Boolean","li","optgroup","option","rp","rubyElement","rt","tbody","td","cells","tfoot","th","thead","tr","opening","previous","seen","constants","unquoted","single","double","textEntitySubset","text_text","state","characterReferences","handle","zwitch","one","parameters","unknown","node_","comment","_1","_2","bogusComments","doctype","_3","upperDoctype","tightDoctype","element","last","schema","omitOptionalTags","selfClosing","closeEmptyElements","voids","parts","serializeAttributes","serializeAttribute","Type","rest","dashes","allowParseErrors","allowDangerousCharacters","quote","input","padRight","padLeft","tightCommaSeparatedLists","collapseEmptyAttributes","preferUnquoted","quoteSmart","alternative","tightAttributes","closeSelfClosing","tightSelfClosing","raw","allowDangerousHtml","emptyOptions","emptyCharacterReferences","lib_emptyChildren","lib_all","dist_ShikiError","_emscripten_get_now","performance","alignUp","main","init","wasmMemory","binding","updateGlobalBufferAndViews","buf","HEAPU8","HEAPU32","UTF8Decoder","TextDecoder","UTF8ToString","ptr","maxBytesToRead","UTF8ArrayToString","heapOrArray","endIdx","endPtr","decode","u0","asmLibraryArg","emscripten_get_now","emscripten_memcpy_big","dest","num","emscripten_resize_heap","requestedSize","oldSize","cutDown","overGrownHeapSize","emscripten_realloc_buffer","grow","fd_write","createWasm","wasi_snapshot_preview1","memory","onigBinding","UtfString","_utf8ByteLength","charCode","codepoint","wasSurrogatePair","nextCharCode","utf16Length","utf8Length","utf16Value","utf8Value","utf16OffsetToUtf8","utf8OffsetToUtf16","computeIndicesMapping","i8","i16","codePoint","createString","omalloc","OnigString","LAST_ID","_sharedPtr","_sharedPtrInUse","_onigBinding","utfString","convertUtf8OffsetToUtf16","utf8Offset","convertUtf16OffsetToUtf8","utf16Offset","ofree","OnigScanner","_ptr","strPtrsArr","strLenArr","strPtrsPtr","strLenPtr","scannerPtr","throwLastOnigError","getLastOnigError","freeOnigScanner","arg","_findNextMatchSync","debugCall","resultPtr","findNextOnigScannerMatch","beg","_makeArrayBufferLoader","importObject","WebAssembly","instantiate","createWasmOnigEngine","_load","instance","dataOrOptions","instantiator","Response","instantiateStreaming","_makeResponseStreamingLoader","_makeResponseNonStreamingLoader","arrayBuffer","Module","createScanner","splitLines","preserveEnding","lines","isPlainLang","isSpecialLang","isNoneTheme","_a","class","normalizeGetter","resolve","resolveColorReplacements","replacements","colorReplacements","themeName","applyColorReplacements","getTokenStyleObject","styles","Italic","Bold","Underline","stringifyTokenStyle","core_dist_ShikiError","builtInTransformers","transformerDecorations","getContext","shiki","meta","normalizePosition","converter","indexToPos","JSON","stringify","posToIndex","createPositionConverter","decorations","verifyIntersections","items","bar","isFooHasBarStart","isFooHasBarEnd","isBarHasFooStart","isBarHasFooEnd","splitTokens","breakpoints","sorted","breakpointsInToken","splitToken","offsets","lastOffset","ctx","codeEl","applyLineSection","decoration","lineEl","POSITIVE_INFINITY","dist_stringify","alwaysWrap","wrapper","applyDecoration","splice","lineApplies","getTransformers","GrammarState","_stack","initial","getScopes","visited","pushScope","stack2","namedColors","parseColor","sequence","colorMode","rgb","colorIndex","defaultNamedColorsMap","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","codeToTokensBase","internal","getLoadedThemes","tokenizeAnsiWithTheme","fileContents","decorations2","colorPalette","createColorPalette","namedColorsMap","colorTable","rgbColor","getColorTable","levels","level","colors","parser","parse","position","findResult","findSequence","nextEscape","nextClose","commands","parseSequence","codeInt","styleToken","delete","bg","fg","dimColor","hexMatch","round","cssVarMatch","None","getLanguage","grammarState","_tokenizeWithTheme","tokenizeMaxLineLength","tokenizeTimeLimit","stateStack","getGrammarStack","grammarContextCode","actual","final","tokensWithScopes","tokensWithScopesIndex","lineOffset","includeExplanation","resultWithScopes","tokensLength","nextStartIndex","themeSettingsSelectors","setting","selectors","explanation","tokenWithScopes","tokenWithScopesText","explainThemeScopesFull","themeSelectors","themeMatches","explainThemeScope","selectorPieces","matches","matchesOne","selectorParentIndex","parentIndex","codeToTokensWithThemes","syncThemesTokenization","outThemes","outLines","indexes","lineIdx","_token","tokenIdx","mergedToken","variants","themeIdx","__","___","codeToTokens","defaultColor","cssVariablePrefix","themeTokens","themeRegs","getTheme","themesOrder","mergeToken","merged","variantsOrder","styleKeys","mergedStyles","reduce","acc","cur","keyName","varKey","htmlStyle","themeColorReplacements","codeToHast","transformerContext","_code","transformer","preprocess","mergeWhitespaces","newLine","carryOnContent","firstOffset","couldMerge","leading","trailing","expanded","contextSource","tokensToHast","tabindex","preNode","codeNode","lineNodes","lineNode","col","tokenNode","VSCODE_FALLBACK_EDITOR_FG","VSCODE_FALLBACK_EDITOR_BG","RESOLVED_KEY","normalizeTheme","rawTheme","tokenColors","globalSetting","replacementCount","replacementMap","getReplacementColor","replaceFg","replaceBg","replacement","writable","resolveLangs","flat","resolveThemes","resolved","isSpecialTheme","__defProp$1","__defNormalProp$1","configurable","__publicField$1","Registry","_resolver","_themes","_langs","_alias","loadTheme","loadLanguages","_resolvedThemes","_loadedThemesCache","textmateTheme","_textmateThemeCache","getGrammar","_resolvedGrammars","embeddedLazilyBy","_langMap","embeddedLangsLazy","addLanguage","grammarConfig","alias","_loadedLanguagesCache","_langGraph","resolveEmbeddedLanguages","langsGraphArray","missingLangs","dependents","embeddedLangs","embeddedLang","__defProp","__defNormalProp","__publicField","Resolver","engine","getLangRegistration","langIdOrAlias","_scopeToLang","injectTo","scopeParts","subScopeName","instancesCount","createShikiInternal","loadWasm","createShikiInternalSync","_lastTheme","warnings","warn","isDisposed","_registry","langAlias","ensureNotDisposed","loadLanguageSync","langs2","loadThemeSync","themes2","_lang","createHighlighterCore","getLastGrammarState","options2","toHtml","tree","options_","postprocess","getInternalContext","createdBundledHighlighter","arg1","arg2","arg3","resolveLang","bundle","resolveTheme","core","bundle_full_codeToHtml","bundle_full_codeToHast","bundle_full_codeToTokens","bundle_full_codeToTokensBase","bundle_full_codeToTokensWithThemes","getSingletonHighlighter","bundle_full_getLastGrammarState","createSingletonShorthands","_shiki"],"sourceRoot":""}